<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>澄观云谱10-图库分析</title>
    <link href="/2025/07/25/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B110/"/>
    <url>/2025/07/25/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B110/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/25 PM</p>          </div><h1 id="闲话少叙">闲话少叙</h1><p>博主没活了，不说了。。。。</p><h1 id="图库分析">图库分析</h1><h2 id="重点">重点</h2><p>本节主要针对于用户/管理员对于图片分析能力的加强</p><ul><li>用户图库分析</li><li>管理员图库分析</li></ul><p>意在提升管理效率</p><h2 id="一需求分析">一、需求分析</h2><h3 id="用户图库分析">用户图库分析</h3><p>1）空间资源占用分析：统计当前空间占比情况，利用仪表盘直观显示，及时清理空间</p><p>2）空间图片分类分析：针对于不同部分统计其图片数量以及资源占用情况，可以选择分组条形图</p><p>3）空间图片标签分析：可以使用词云图展示</p><p>4）空间图片大小分析：按照图片大小分段展示图片数量，饼图展示</p><p>5）用户上传行为分析：统计用户每天/周/月上传图片趋势，针对于高峰期进行优化管理策略，推荐折线图展示</p><h3 id="管理员全空间分析">管理员全空间分析</h3><p>1）全空间资源分析：统计公共图库总存储量和总图片数量，也支持任意空间图片分类、上传分析等用户行为</p><p>2）空间使用排行分析：柱状图展示各个空间资源占用率</p><h2 id="二方案设计">二、方案设计</h2><h3 id="分析类需求实现流程">1、分析类需求实现流程</h3><p>1）数据采集</p><p>2）数据预处理</p><p>3）数据计算</p><p>4）数据接口设计</p><p>5）数据接口可视化</p><p>6）数据可视化</p><h3 id="实现方案">2、实现方案</h3><p>针对于不同用户分析图库需求本质是相同的，唯一区别在于图片范围选择</p><p>1）用户分析自己空间</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> category, <span class="hljs-built_in">SUM</span>(picSize) <span class="hljs-keyword">AS</span> totalSize<br><span class="hljs-keyword">FROM</span> picture <br><span class="hljs-keyword">WHERE</span> spaceId <span class="hljs-operator">=</span> xxx<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> category;<br><br></code></pre></td></tr></table></figure><p>2）管理员分析公共图库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">SELECT</span> category, <span class="hljs-built_in">SUM</span>(picSize) <span class="hljs-keyword">AS</span> totalSize<br><span class="hljs-keyword">FROM</span> picture <br><span class="hljs-keyword">WHERE</span> spaceId <span class="hljs-keyword">IS</span> <span class="hljs-literal">NULL</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> category;<br><br></code></pre></td></tr></table></figure><p>3）管理员分析全部图库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> category, <span class="hljs-built_in">SUM</span>(picSize) <span class="hljs-keyword">AS</span> totalSize<br><span class="hljs-keyword">FROM</span> picture <br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> category;<br></code></pre></td></tr></table></figure><p>对比以上三种SQL语句，无疑不就是Where条件的设置，可以单独抽离出一个单独的方法</p><p>1、queryAll 为true代表，校验全部空间</p><p>2、queryPublic为true，代表查询公共图库</p><p>3、spaceId：针对于私有空间特判</p><p>以上是有优先级的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 先权限校验</span><br><span class="hljs-comment">// 封装查询条件</span><br>QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br><span class="hljs-keyword">if</span> (queryAll) &#123;<br>    <span class="hljs-comment">// 管理员查询全空间，不添加过滤条件</span><br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (queryPublic) &#123;<br>    <span class="hljs-comment">// 管理员查询公共图库</span><br>    queryWrapper.isNull(<span class="hljs-string">&quot;spaceId&quot;</span>);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-comment">// 用户或管理员查询特定空间</span><br>    queryWrapper.eq(<span class="hljs-string">&quot;spaceId&quot;</span>, spaceId);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;未指定查询范围&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="三后端开发">三、后端开发</h2><p>针对于这次图库分析类的开发，我们单独新建一个包<code>/vo/space/analyze</code></p><h3 id="通用分析类请求">通用分析类请求</h3><p>1）分析请求类封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间 ID</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long spaceId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否查询公共图库</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> queryPublic;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 全空间分析</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> queryAll;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>后面每一个封装请求类直接继承</p><p>2）新建服务类，针对于封装请求类中参数校验权限</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkSpaceAnalyzeAuth</span><span class="hljs-params">(SpaceAnalyzeRequest spaceAnalyzeRequest, User loginUser)</span> &#123;<br>    <span class="hljs-comment">// 检查权限</span><br>    <span class="hljs-keyword">if</span> (spaceAnalyzeRequest.isQueryAll() || spaceAnalyzeRequest.isQueryPublic()) &#123;<br>        <span class="hljs-comment">// 全空间分析或者公共图库权限校验：仅管理员可访问</span><br>        ThrowUtils.throwIf(!userService.isAdmin(loginUser), ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;无权访问公共图库&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 私有空间权限校验</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> spaceAnalyzeRequest.getSpaceId();<br>        ThrowUtils.throwIf(spaceId == <span class="hljs-literal">null</span> || spaceId &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>        ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br>        spaceService.checkSpaceAuth(loginUser, space);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>封装静态方法，根据范围查询对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fillAnalyzeQueryWrapper</span><span class="hljs-params">(SpaceAnalyzeRequest spaceAnalyzeRequest, QueryWrapper&lt;Picture&gt; queryWrapper)</span> &#123;<br>    <span class="hljs-keyword">if</span> (spaceAnalyzeRequest.isQueryAll()) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (spaceAnalyzeRequest.isQueryPublic()) &#123;<br>        queryWrapper.isNull(<span class="hljs-string">&quot;spaceId&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> spaceAnalyzeRequest.getSpaceId();<br>    <span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>        queryWrapper.eq(<span class="hljs-string">&quot;spaceId&quot;</span>, spaceId);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;未指定查询范围&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="需求开发">需求开发</h3><h4 id="空间资源开发">1、空间资源开发</h4><p>1）开发请求封装类，用于接收前端传输的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceUsageAnalyzeRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> &#123;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发响应视图类，将分析结果返回给前端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceUsageAnalyzeResponse</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 已使用大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long usedSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间使用比例</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Double sizeUsageRatio;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long usedCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最大图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片数量占比</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Double countUsageRatio;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）开发空间分析业务逻辑层</p><p>如果是全空间需要打上访问用户是管理员注解，如果是单个用户空间数据库中直接查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取空间使用分析数据</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> spaceUsageAnalyzeRequest SpaceUsageAnalyzeRequest 请求参数</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> loginUser                当前登录用户</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> SpaceUsageAnalyzeResponse 分析结果</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> SpaceUsageAnalyzeResponse <span class="hljs-title function_">getSpaceUsageAnalyze</span><span class="hljs-params">(SpaceUsageAnalyzeRequest spaceUsageAnalyzeRequest, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(spaceUsageAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-keyword">if</span> (spaceUsageAnalyzeRequest.isQueryAll() || spaceUsageAnalyzeRequest.isQueryPublic()) &#123;<br>        <span class="hljs-comment">// 查询全部或公共图库逻辑</span><br>        <span class="hljs-comment">// 仅管理员可以访问</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">isAdmin</span> <span class="hljs-operator">=</span> userService.isAdmin(loginUser);<br>        ThrowUtils.throwIf(!isAdmin, ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;无权访问空间&quot;</span>);<br>        <span class="hljs-comment">// 统计公共图库的资源使用</span><br>        QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        queryWrapper.select(<span class="hljs-string">&quot;picSize&quot;</span>);<br>        <span class="hljs-keyword">if</span> (!spaceUsageAnalyzeRequest.isQueryAll()) &#123;<br>            queryWrapper.isNull(<span class="hljs-string">&quot;spaceId&quot;</span>);<br>        &#125;<br>        List&lt;Object&gt; pictureObjList = pictureService.getBaseMapper().selectObjs(queryWrapper);<br>        <span class="hljs-type">long</span> <span class="hljs-variable">usedSize</span> <span class="hljs-operator">=</span> pictureObjList.stream().mapToLong(result -&gt; result <span class="hljs-keyword">instanceof</span> Long ? (Long) result : <span class="hljs-number">0</span>).sum();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">usedCount</span> <span class="hljs-operator">=</span> pictureObjList.size();<br>        <span class="hljs-comment">// 封装返回结果</span><br>        <span class="hljs-type">SpaceUsageAnalyzeResponse</span> <span class="hljs-variable">spaceUsageAnalyzeResponse</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceUsageAnalyzeResponse</span>();<br>        spaceUsageAnalyzeResponse.setUsedSize(usedSize);<br>        spaceUsageAnalyzeResponse.setUsedCount(usedCount);<br>        <span class="hljs-comment">// 公共图库无上限、无比例</span><br>        spaceUsageAnalyzeResponse.setMaxSize(<span class="hljs-literal">null</span>);<br>        spaceUsageAnalyzeResponse.setSizeUsageRatio(<span class="hljs-literal">null</span>);<br>        spaceUsageAnalyzeResponse.setMaxCount(<span class="hljs-literal">null</span>);<br>        spaceUsageAnalyzeResponse.setCountUsageRatio(<span class="hljs-literal">null</span>);<br>        <span class="hljs-keyword">return</span> spaceUsageAnalyzeResponse;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 查询指定空间</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> spaceUsageAnalyzeRequest.getSpaceId();<br>        ThrowUtils.throwIf(spaceId == <span class="hljs-literal">null</span> || spaceId &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-comment">// 获取空间信息</span><br>        <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>        ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br><br>        <span class="hljs-comment">// 权限校验：仅空间所有者或管理员可访问</span><br>        spaceService.checkSpaceAuth(loginUser, space);<br><br>        <span class="hljs-comment">// 构造返回结果</span><br>        <span class="hljs-type">SpaceUsageAnalyzeResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceUsageAnalyzeResponse</span>();<br>        response.setUsedSize(space.getTotalSize());<br>        response.setMaxSize(space.getMaxSize());<br>        <span class="hljs-comment">// 后端直接算好百分比，这样前端可以直接展示</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">sizeUsageRatio</span> <span class="hljs-operator">=</span> NumberUtil.round(space.getTotalSize() * <span class="hljs-number">100.0</span> / space.getMaxSize(), <span class="hljs-number">2</span>).doubleValue();<br>        response.setSizeUsageRatio(sizeUsageRatio);<br>        response.setUsedCount(space.getTotalCount());<br>        response.setMaxCount(space.getMaxCount());<br>        <span class="hljs-type">double</span> <span class="hljs-variable">countUsageRatio</span> <span class="hljs-operator">=</span> NumberUtil.round(space.getTotalCount() * <span class="hljs-number">100.0</span> / space.getMaxCount(), <span class="hljs-number">2</span>).doubleValue();<br>        response.setCountUsageRatio(countUsageRatio);<br>        <span class="hljs-keyword">return</span> response;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意上述代码中<code>queryWrapper.select("picSize");</code>和<code>pictureService.getBaseMapper().selectObjs(queryWrapper)</code>代表只查询picSize这一列，同时保存到集合当中，selectObjs直接返回对象，节省空间</p><p>SpaceService中封装空间权限校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 空间权限校验</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> loginUser</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> space</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkSpaceAuth</span><span class="hljs-params">(User loginUser, Space space)</span> &#123;<br>    <span class="hljs-comment">// 仅本人或管理员可访问</span><br>    <span class="hljs-keyword">if</span> (!space.getUserId().equals(loginUser.getId()) &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>替换SpaceController的编辑和删除操作中权限校验代码</p><p>4）开发接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/space/analyze&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceAnalyzeController</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> SpaceAnalyzeService spaceAnalyzeService;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取空间使用状态</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@PostMapping(&quot;/usage&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;SpaceUsageAnalyzeResponse&gt; <span class="hljs-title function_">getSpaceUsageAnalyze</span><span class="hljs-params">(</span><br><span class="hljs-params">            <span class="hljs-meta">@RequestBody</span> SpaceUsageAnalyzeRequest spaceUsageAnalyzeRequest,</span><br><span class="hljs-params">            HttpServletRequest request</span><br><span class="hljs-params">    )</span> &#123;<br>        ThrowUtils.throwIf(spaceUsageAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>        <span class="hljs-type">SpaceUsageAnalyzeResponse</span> <span class="hljs-variable">spaceUsageAnalyze</span> <span class="hljs-operator">=</span> spaceAnalyzeService.getSpaceUsageAnalyze(spaceUsageAnalyzeRequest, loginUser);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(spaceUsageAnalyze);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="空间图片分类分析">2、空间图片分类分析</h4><p>1）开发请求类，分类只需要传递空间范围，所以直接继承</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceCategoryAnalyzeRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> &#123;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发响应视图类（图片分类，数量，大小）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceCategoryAnalyzeResponse</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片分类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String category;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long count;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分类图片总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long totalSize;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）开发服务类，按照分类分组查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;SpaceCategoryAnalyzeResponse&gt; <span class="hljs-title function_">getSpaceCategoryAnalyze</span><span class="hljs-params">(SpaceCategoryAnalyzeRequest spaceCategoryAnalyzeRequest, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(spaceCategoryAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>    <span class="hljs-comment">// 检查权限</span><br>    checkSpaceAnalyzeAuth(spaceCategoryAnalyzeRequest, loginUser);<br><br>    <span class="hljs-comment">// 构造查询条件</span><br>    QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    <span class="hljs-comment">// 根据分析范围补充查询条件</span><br>    fillAnalyzeQueryWrapper(spaceCategoryAnalyzeRequest, queryWrapper);<br><br>    <span class="hljs-comment">// 使用 MyBatis-Plus 分组查询</span><br>    queryWrapper.select(<span class="hljs-string">&quot;category AS category&quot;</span>,<br>                    <span class="hljs-string">&quot;COUNT(*) AS count&quot;</span>,<br>                    <span class="hljs-string">&quot;SUM(picSize) AS totalSize&quot;</span>)<br>            .groupBy(<span class="hljs-string">&quot;category&quot;</span>);<br><br>    <span class="hljs-comment">// 查询并转换结果</span><br>    <span class="hljs-keyword">return</span> pictureService.getBaseMapper().selectMaps(queryWrapper)<br>            .stream()<br>            .map(result -&gt; &#123;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">category</span> <span class="hljs-operator">=</span> result.get(<span class="hljs-string">&quot;category&quot;</span>) != <span class="hljs-literal">null</span> ? result.get(<span class="hljs-string">&quot;category&quot;</span>).toString() : <span class="hljs-string">&quot;未分类&quot;</span>;<br>                <span class="hljs-type">Long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> ((Number) result.get(<span class="hljs-string">&quot;count&quot;</span>)).longValue();<br>                <span class="hljs-type">Long</span> <span class="hljs-variable">totalSize</span> <span class="hljs-operator">=</span> ((Number) result.get(<span class="hljs-string">&quot;totalSize&quot;</span>)).longValue();<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceCategoryAnalyzeResponse</span>(category, count, totalSize);<br>            &#125;)<br>            .collect(Collectors.toList());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）开发接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/category&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;SpaceCategoryAnalyzeResponse&gt;&gt; <span class="hljs-title function_">getSpaceCategoryAnalyze</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceCategoryAnalyzeRequest spaceCategoryAnalyzeRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceCategoryAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;SpaceCategoryAnalyzeResponse&gt; resultList = spaceAnalyzeService.getSpaceCategoryAnalyze(spaceCategoryAnalyzeRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="空间图片标签分析">3、空间图片标签分析</h4><p>1）请求封装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceTagAnalyzeRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> &#123;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发请求响应类（返回标签名称和图片数量）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceTagAnalyzeResponse</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 标签名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String tag;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 使用次数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long count;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）服务类开发</p><p>从数据库中获取所有标签，统计每一个标签的图片数量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;SpaceTagAnalyzeResponse&gt; <span class="hljs-title function_">getSpaceTagAnalyze</span><span class="hljs-params">(SpaceTagAnalyzeRequest spaceTagAnalyzeRequest, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(spaceTagAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>    <span class="hljs-comment">// 检查权限</span><br>    checkSpaceAnalyzeAuth(spaceTagAnalyzeRequest, loginUser);<br><br>    <span class="hljs-comment">// 构造查询条件</span><br>    QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    fillAnalyzeQueryWrapper(spaceTagAnalyzeRequest, queryWrapper);<br><br>    <span class="hljs-comment">// 查询所有符合条件的标签</span><br>    queryWrapper.select(<span class="hljs-string">&quot;tags&quot;</span>);<br>    List&lt;String&gt; tagsJsonList = pictureService.getBaseMapper().selectObjs(queryWrapper)<br>            .stream()<br>            .filter(ObjUtil::isNotNull)<br>            .map(Object::toString)<br>            .collect(Collectors.toList());<br><br>    <span class="hljs-comment">// 合并所有标签并统计使用次数</span><br>    Map&lt;String, Long&gt; tagCountMap = tagsJsonList.stream()<br>            .flatMap(tagsJson -&gt; JSONUtil.toList(tagsJson, String.class).stream())<br>            .collect(Collectors.groupingBy(tag -&gt; tag, Collectors.counting()));<br><br>    <span class="hljs-comment">// 转换为响应对象，按使用次数降序排序</span><br>    <span class="hljs-keyword">return</span> tagCountMap.entrySet().stream()<br>            .sorted((e1, e2) -&gt; Long.compare(e2.getValue(), e1.getValue())) <span class="hljs-comment">// 降序排列</span><br>            .map(entry -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceTagAnalyzeResponse</span>(entry.getKey(), entry.getValue()))<br>            .collect(Collectors.toList());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）接口开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/tag&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;SpaceTagAnalyzeResponse&gt;&gt; <span class="hljs-title function_">getSpaceTagAnalyze</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceTagAnalyzeRequest spaceTagAnalyzeRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceTagAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;SpaceTagAnalyzeResponse&gt; resultList = spaceAnalyzeService.getSpaceTagAnalyze(spaceTagAnalyzeRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="空间图片大小分析">4、空间图片大小分析</h4><p>1）封装请求类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceSizeAnalyzeRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> &#123;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）封装响应结果（返回大小范围以及图片数量）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceSizeAnalyzeResponse</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片大小范围</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String sizeRange;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long count;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）服务开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;SpaceSizeAnalyzeResponse&gt; <span class="hljs-title function_">getSpaceSizeAnalyze</span><span class="hljs-params">(SpaceSizeAnalyzeRequest spaceSizeAnalyzeRequest, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(spaceSizeAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>    <span class="hljs-comment">// 检查权限</span><br>    checkSpaceAnalyzeAuth(spaceSizeAnalyzeRequest, loginUser);<br><br>    <span class="hljs-comment">// 构造查询条件</span><br>    QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    fillAnalyzeQueryWrapper(spaceSizeAnalyzeRequest, queryWrapper);<br><br>    <span class="hljs-comment">// 查询所有符合条件的图片大小</span><br>    queryWrapper.select(<span class="hljs-string">&quot;picSize&quot;</span>);<br>    List&lt;Long&gt; picSizes = pictureService.getBaseMapper().selectObjs(queryWrapper)<br>            .stream()<br>            .map(size -&gt; ((Number) size).longValue())<br>            .collect(Collectors.toList());<br><br>    <span class="hljs-comment">// 定义分段范围，注意使用有序 Map</span><br>    Map&lt;String, Long&gt; sizeRanges = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<br>    sizeRanges.put(<span class="hljs-string">&quot;&lt;100KB&quot;</span>, picSizes.stream().filter(size -&gt; size &lt; <span class="hljs-number">100</span> * <span class="hljs-number">1024</span>).count());<br>    sizeRanges.put(<span class="hljs-string">&quot;100KB-500KB&quot;</span>, picSizes.stream().filter(size -&gt; size &gt;= <span class="hljs-number">100</span> * <span class="hljs-number">1024</span> &amp;&amp; size &lt; <span class="hljs-number">500</span> * <span class="hljs-number">1024</span>).count());<br>    sizeRanges.put(<span class="hljs-string">&quot;500KB-1MB&quot;</span>, picSizes.stream().filter(size -&gt; size &gt;= <span class="hljs-number">500</span> * <span class="hljs-number">1024</span> &amp;&amp; size &lt; <span class="hljs-number">1</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>).count());<br>    sizeRanges.put(<span class="hljs-string">&quot;&gt;1MB&quot;</span>, picSizes.stream().filter(size -&gt; size &gt;= <span class="hljs-number">1</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>).count());<br><br>    <span class="hljs-comment">// 转换为响应对象</span><br>    <span class="hljs-keyword">return</span> sizeRanges.entrySet().stream()<br>            .map(entry -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceSizeAnalyzeResponse</span>(entry.getKey(), entry.getValue()))<br>            .collect(Collectors.toList());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）接口开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/size&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;SpaceSizeAnalyzeResponse&gt;&gt; <span class="hljs-title function_">getSpaceSizeAnalyze</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceSizeAnalyzeRequest spaceSizeAnalyzeRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceSizeAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;SpaceSizeAnalyzeResponse&gt; resultList = spaceAnalyzeService.getSpaceSizeAnalyze(spaceSizeAnalyzeRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="用户上传开发">5、用户上传开发</h4><p>1）封装请求类，需要在原有分析请求的基础上加上用户信息和时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceUserAnalyzeRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SpaceAnalyzeRequest</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户 ID</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 时间维度：day / week / month</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String timeDimension;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发响应视图类，返回时间和该时间段上传图片的数量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceUserAnalyzeResponse</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 时间区间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String period;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 上传数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long count;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）服务类开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;SpaceUserAnalyzeResponse&gt; <span class="hljs-title function_">getSpaceUserAnalyze</span><span class="hljs-params">(SpaceUserAnalyzeRequest spaceUserAnalyzeRequest, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(spaceUserAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-comment">// 检查权限</span><br>    checkSpaceAnalyzeAuth(spaceUserAnalyzeRequest, loginUser);<br><br>    <span class="hljs-comment">// 构造查询条件</span><br>    QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> spaceUserAnalyzeRequest.getUserId();<br>    queryWrapper.eq(ObjUtil.isNotNull(userId), <span class="hljs-string">&quot;userId&quot;</span>, userId);<br>    fillAnalyzeQueryWrapper(spaceUserAnalyzeRequest, queryWrapper);<br><br>    <span class="hljs-comment">// 分析维度：每日、每周、每月</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">timeDimension</span> <span class="hljs-operator">=</span> spaceUserAnalyzeRequest.getTimeDimension();<br>    <span class="hljs-keyword">switch</span> (timeDimension) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;day&quot;</span>:<br>            queryWrapper.select(<span class="hljs-string">&quot;DATE_FORMAT(createTime, &#x27;%Y-%m-%d&#x27;) AS period&quot;</span>, <span class="hljs-string">&quot;COUNT(*) AS count&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;week&quot;</span>:<br>            queryWrapper.select(<span class="hljs-string">&quot;YEARWEEK(createTime) AS period&quot;</span>, <span class="hljs-string">&quot;COUNT(*) AS count&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;month&quot;</span>:<br>            queryWrapper.select(<span class="hljs-string">&quot;DATE_FORMAT(createTime, &#x27;%Y-%m&#x27;) AS period&quot;</span>, <span class="hljs-string">&quot;COUNT(*) AS count&quot;</span>);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;不支持的时间维度&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 分组和排序</span><br>    queryWrapper.groupBy(<span class="hljs-string">&quot;period&quot;</span>).orderByAsc(<span class="hljs-string">&quot;period&quot;</span>);<br><br>    <span class="hljs-comment">// 查询结果并转换</span><br>    List&lt;Map&lt;String, Object&gt;&gt; queryResult = pictureService.getBaseMapper().selectMaps(queryWrapper);<br>    <span class="hljs-keyword">return</span> queryResult.stream()<br>            .map(result -&gt; &#123;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">period</span> <span class="hljs-operator">=</span> result.get(<span class="hljs-string">&quot;period&quot;</span>).toString();<br>                <span class="hljs-type">Long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> ((Number) result.get(<span class="hljs-string">&quot;count&quot;</span>)).longValue();<br>                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceUserAnalyzeResponse</span>(period, count);<br>            &#125;)<br>            .collect(Collectors.toList());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）开发接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/user&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;SpaceUserAnalyzeResponse&gt;&gt; <span class="hljs-title function_">getSpaceUserAnalyze</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceUserAnalyzeRequest spaceUserAnalyzeRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceUserAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;SpaceUserAnalyzeResponse&gt; resultList = spaceAnalyzeService.getSpaceUserAnalyze(spaceUserAnalyzeRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="空间使用排行分析">6、空间使用排行分析</h4><p>1）开发请求封装类，指定返回排名前N的结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceRankAnalyzeRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 排名前 N 的空间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Integer</span> <span class="hljs-variable">topN</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发服务类，返回前N个空间。需要设置管理员权限</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;Space&gt; <span class="hljs-title function_">getSpaceRankAnalyze</span><span class="hljs-params">(SpaceRankAnalyzeRequest spaceRankAnalyzeRequest, User loginUser)</span> &#123;<br>ThrowUtils.throwIf(spaceRankAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br><span class="hljs-comment">// 仅管理员可查看空间排行</span><br>ThrowUtils.throwIf(!userService.isAdmin(loginUser), ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;无权查看空间排行&quot;</span>);<br><br><span class="hljs-comment">// 构造查询条件</span><br>QueryWrapper&lt;Space&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>queryWrapper.select(<span class="hljs-string">&quot;id&quot;</span>, <span class="hljs-string">&quot;spaceName&quot;</span>, <span class="hljs-string">&quot;userId&quot;</span>, <span class="hljs-string">&quot;totalSize&quot;</span>)<br>        .orderByDesc(<span class="hljs-string">&quot;totalSize&quot;</span>)<br>        .last(<span class="hljs-string">&quot;LIMIT &quot;</span> + spaceRankAnalyzeRequest.getTopN()); <span class="hljs-comment">// 取前 N 名</span><br><br><span class="hljs-comment">// 查询结果</span><br><span class="hljs-keyword">return</span> spaceService.list(queryWrapper);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）接口开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/rank&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;Space&gt;&gt; <span class="hljs-title function_">getSpaceRankAnalyze</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceRankAnalyzeRequest spaceRankAnalyzeRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceRankAnalyzeRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;Space&gt; resultList = spaceAnalyzeService.getSpaceRankAnalyze(spaceRankAnalyzeRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试</p><figure><img src="/img/pictureLibrary/image-20250725143421662.png"alt="image-20250725143421662" /><figcaption aria-hidden="true">image-20250725143421662</figcaption></figure><h2 id="四前端开发">四、前端开发</h2><h3 id="数据可视化组件">数据可视化组件</h3><p>使用vue-echart组件，实现数据可视化</p><p>1）引入vue-echarts</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i echarts vue-echarts<br><br></code></pre></td></tr></table></figure><p>2）JS中引入</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VChart</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-echarts&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;echarts&quot;</span>;<br><br></code></pre></td></tr></table></figure><p>3）使用组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;v-chart :option=&quot;options&quot; style=&quot;height: 300px&quot; /&gt;<br><br></code></pre></td></tr></table></figure><p>参考<ahref="https://echarts.apache.org/examples/zh/editor.html?c=pie-simple">https://echarts.apache.org/examples/zh/editor.html?c=pie-simple</a></p><figure><img src="/img/pictureLibrary/image-20250725144105344.png"alt="image-20250725144105344" /><figcaption aria-hidden="true">image-20250725144105344</figcaption></figure><h3 id="开发分析组件">开发分析组件</h3><p>关于创建方面的组件，统一放在<code>/components/analyze</code>目录下</p><p>1）定义属性，接收父组件传递过来的参数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  queryAll?: <span class="hljs-built_in">boolean</span><br>  queryPublic?: <span class="hljs-built_in">boolean</span><br>  spaceId?: <span class="hljs-built_in">number</span><br>&#125;<br><br><span class="hljs-keyword">const</span> props = <span class="hljs-title function_">withDefaults</span>(defineProps&lt;<span class="hljs-title class_">Props</span>&gt;(), &#123;<br>  <span class="hljs-attr">queryAll</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">queryPublic</span>: <span class="hljs-literal">false</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>2）VueDesign 卡片包装echart表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;space-xxx-analyze&quot;&gt;<br>    &lt;a-card title=&quot;分析需求名称&quot;&gt;<br>      &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px&quot; :loading=&quot;loading&quot; /&gt;<br>    &lt;/a-card&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>每一个组件都会调用不同的后端结果获取数据，传递给option</p><h4 id="空间资源使用分析">1、空间资源使用分析</h4><p>仪表盘展示空间使用情况</p><p>1）编写调用后端接口获取数据逻辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 图表数据</span><br><span class="hljs-keyword">const</span> data = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceUsageAnalyzeResponse</span>&gt;(&#123;&#125;)<br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 加载数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceUsageAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    data.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 监听变量，改变时触发数据的重新加载</span><br><span class="hljs-comment"> */</span><br><span class="hljs-title function_">watchEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p><code>watchEffect</code>监听内部变量，当某一个变量发生修改，重新执行fetchData函数</p><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-flex gap=&quot;middle&quot;&gt;<br>  &lt;a-card title=&quot;存储空间&quot; style=&quot;width: 50%&quot;&gt;<br>    &lt;div style=&quot;height: 320px; text-align: center&quot;&gt;<br>      &lt;h3&gt;&#123;&#123; formatSize(data.usedSize) &#125;&#125; / &#123;&#123; data.maxSize ? formatSize(data.maxSize) : &#x27;无限制&#x27; &#125;&#125;&lt;/h3&gt;<br>      &lt;a-progress type=&quot;dashboard&quot; :percent=&quot;data.sizeUsageRatio ?? 0&quot; /&gt;<br>    &lt;/div&gt;<br>  &lt;/a-card&gt;<br>  &lt;a-card title=&quot;图片数量&quot; style=&quot;width: 50%&quot;&gt;<br>    &lt;div style=&quot;height: 320px; text-align: center&quot;&gt;<br>      &lt;h3&gt;&#123;&#123; data.usedCount &#125;&#125; / &#123;&#123; data.maxCount ?? &#x27;无限制&#x27; &#125;&#125; &lt;/h3&gt;<br>      &lt;a-progress type=&quot;dashboard&quot; :percent=&quot;data.countUsageRatio ?? 0&quot; /&gt;<br>    &lt;/div&gt;<br>  &lt;/a-card&gt;<br>&lt;/a-flex&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165231472.png"alt="image-20250725165231472" /><figcaption aria-hidden="true">image-20250725165231472</figcaption></figure><h4 id="空间图片分类分析-1">2、空间图片分类分析</h4><p>分组条形图展示</p><p>1）编写调用后端接口获取数据逻辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 图表数据</span><br><span class="hljs-keyword">const</span> dataList = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceCategoryAnalyzeResponse</span>[]&gt;([])<br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 加载数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceCategoryAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;space-category-analyze&quot;&gt;<br>  &lt;a-card title=&quot;图库分类占用&quot;&gt;<br>      &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px; max-width: 100%;&quot; :loading=&quot;loading&quot; /&gt;<br>  &lt;/a-card&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写图表Options</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> options = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> categories = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">category</span>)<br>  <span class="hljs-keyword">const</span> countData = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">count</span>)<br>  <span class="hljs-keyword">const</span> sizeData = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (item.<span class="hljs-property">totalSize</span> / (<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>)).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>)) <span class="hljs-comment">// 转为 MB</span><br><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">tooltip</span>: &#123; <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;axis&#x27;</span> &#125;,<br>    <span class="hljs-attr">legend</span>: &#123; <span class="hljs-attr">data</span>: [<span class="hljs-string">&#x27;图片数量&#x27;</span>, <span class="hljs-string">&#x27;图片总大小&#x27;</span>], <span class="hljs-attr">top</span>: <span class="hljs-string">&#x27;bottom&#x27;</span> &#125;,<br>    <span class="hljs-attr">xAxis</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>, <span class="hljs-attr">data</span>: categories &#125;,<br>    <span class="hljs-attr">yAxis</span>: [<br>      &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片数量&#x27;</span>,<br>        <span class="hljs-attr">axisLine</span>: &#123; <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">lineStyle</span>: &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#5470C6&#x27;</span> &#125; &#125;, <span class="hljs-comment">// 左轴颜色</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片总大小 (MB)&#x27;</span>,<br>        <span class="hljs-attr">position</span>: <span class="hljs-string">&#x27;right&#x27;</span>,<br>        <span class="hljs-attr">axisLine</span>: &#123; <span class="hljs-attr">show</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">lineStyle</span>: &#123; <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#91CC75&#x27;</span> &#125; &#125;, <span class="hljs-comment">// 右轴颜色</span><br>        <span class="hljs-attr">splitLine</span>: &#123;<br>          <span class="hljs-attr">lineStyle</span>: &#123;<br>            <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#91CC75&#x27;</span>, <span class="hljs-comment">// 调整网格线颜色</span><br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;dashed&#x27;</span>, <span class="hljs-comment">// 线条样式：可选 &#x27;solid&#x27;, &#x27;dashed&#x27;, &#x27;dotted&#x27;</span><br>          &#125;,<br>        &#125;,<br>      &#125;,<br>    ],<br>    <span class="hljs-attr">series</span>: [<br>      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片数量&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attr">data</span>: countData, <span class="hljs-attr">yAxisIndex</span>: <span class="hljs-number">0</span> &#125;,<br>      &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片总大小&#x27;</span>, <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>, <span class="hljs-attr">data</span>: sizeData, <span class="hljs-attr">yAxisIndex</span>: <span class="hljs-number">1</span> &#125;,<br>    ],<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165252283.png"alt="image-20250725165252283" /><figcaption aria-hidden="true">image-20250725165252283</figcaption></figure><h4 id="空间图片标签分析-1">3、空间图片标签分析</h4><p>vue-echarts默认不会引入词云图，安装并手动引入</p><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install echarts<br>npm install echarts-wordcloud<br></code></pre></td></tr></table></figure><p>引入</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VChart</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-echarts&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;echarts&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;echarts-wordcloud&#x27;</span><br><br></code></pre></td></tr></table></figure><p>1）编写获取数据</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceTagAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;space-tag-analyze&quot;&gt;<br>  &lt;a-card title=&quot;图库标签词云&quot;&gt;<br>    &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px; max-width: 100%;&quot; :loading=&quot;loading&quot; /&gt;<br>  &lt;/a-card&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写图表Option</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> options = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> tagData = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (&#123;<br>    <span class="hljs-attr">name</span>: item.<span class="hljs-property">tag</span>,<br>    <span class="hljs-attr">value</span>: item.<span class="hljs-property">count</span>,<br>  &#125;))<br><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">tooltip</span>: &#123;<br>      <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;item&#x27;</span>,<br>      <span class="hljs-attr">formatter</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">params</span>: <span class="hljs-built_in">any</span></span>) =&gt;</span> <span class="hljs-string">`<span class="hljs-subst">$&#123;params.name&#125;</span>: <span class="hljs-subst">$&#123;params.value&#125;</span> 次`</span>,<br>    &#125;,<br>    <span class="hljs-attr">series</span>: [<br>      &#123;<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;wordCloud&#x27;</span>,<br>        <span class="hljs-attr">gridSize</span>: <span class="hljs-number">10</span>,<br>        <span class="hljs-attr">sizeRange</span>: [<span class="hljs-number">12</span>, <span class="hljs-number">50</span>], <span class="hljs-comment">// 字体大小范围</span><br>        <span class="hljs-attr">rotationRange</span>: [-<span class="hljs-number">90</span>, <span class="hljs-number">90</span>],<br>        <span class="hljs-attr">shape</span>: <span class="hljs-string">&#x27;circle&#x27;</span>,<br>        <span class="hljs-attr">textStyle</span>: &#123;<br>          <span class="hljs-attr">color</span>: <span class="hljs-function">() =&gt;</span><br>            <span class="hljs-string">`rgb(<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>)&#125;</span>, <span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.round(</span></span><br><span class="hljs-subst"><span class="hljs-string">              <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>,</span></span><br><span class="hljs-subst"><span class="hljs-string">            )&#125;</span>, <span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.round(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">255</span>)&#125;</span>)`</span>, <span class="hljs-comment">// 随机颜色</span><br>        &#125;,<br>        <span class="hljs-attr">data</span>: tagData,<br>      &#125;,<br>    ],<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165308457.png"alt="image-20250725165308457" /><figcaption aria-hidden="true">image-20250725165308457</figcaption></figure><h4 id="空间图片大小分析-1">4、空间图片大小分析</h4><p>按照图片大小，分段统计图片数量，由于图片大小分类不多，这里使用饼图展示</p><p>1）编写获取数据逻辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceSizeAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;space-size-analyze&quot;&gt;<br>  &lt;a-card title=&quot;空间图片大小分析&quot;&gt;<br>    &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px; max-width: 100%&quot; :loading=&quot;loading&quot; /&gt;<br>  &lt;/a-card&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写图表选项</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> options = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> pieData = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (&#123;<br>    <span class="hljs-attr">name</span>: item.<span class="hljs-property">sizeRange</span>,<br>    <span class="hljs-attr">value</span>: item.<span class="hljs-property">count</span>,<br>  &#125;))<br><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">tooltip</span>: &#123;<br>      <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;item&#x27;</span>,<br>      <span class="hljs-attr">formatter</span>: <span class="hljs-string">&#x27;&#123;a&#125; &lt;br/&gt;&#123;b&#125;: &#123;c&#125; (&#123;d&#125;%)&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">legend</span>: &#123;<br>      <span class="hljs-attr">top</span>: <span class="hljs-string">&#x27;bottom&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">series</span>: [<br>      &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片大小&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;pie&#x27;</span>,<br>        <span class="hljs-attr">radius</span>: <span class="hljs-string">&#x27;50%&#x27;</span>,<br>        <span class="hljs-attr">data</span>: pieData,<br>      &#125;,<br>    ],<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165323884.png"alt="image-20250725165323884" /><figcaption aria-hidden="true">image-20250725165323884</figcaption></figure><h4 id="用户上传行为分析">5、用户上传行为分析</h4><p>按照每日/周/月统计上传图片数量，识别上传高峰期，推行优化策略</p><p>1）编写获取用户数据逻辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceUserAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>    <span class="hljs-attr">timeDimension</span>: timeDimension.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">userId</span>: userId.<span class="hljs-property">value</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;space-user-analyze&quot;&gt;<br>  &lt;a-card title=&quot;空间图片用户分析&quot;&gt;<br>    &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px; max-width: 100%&quot; :loading=&quot;loading&quot; /&gt;<br>  &lt;/a-card&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写图表选项</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> options = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> periods = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">period</span>) <span class="hljs-comment">// 时间区间</span><br>  <span class="hljs-keyword">const</span> counts = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">count</span>) <span class="hljs-comment">// 上传数量</span><br><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">tooltip</span>: &#123; <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;axis&#x27;</span> &#125;,<br>    <span class="hljs-attr">xAxis</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>, <span class="hljs-attr">data</span>: periods, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;时间区间&#x27;</span> &#125;,<br>    <span class="hljs-attr">yAxis</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;上传数量&#x27;</span> &#125;,<br>    <span class="hljs-attr">series</span>: [<br>      &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;上传数量&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,<br>        <span class="hljs-attr">data</span>: counts,<br>        <span class="hljs-attr">smooth</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 平滑折线</span><br>        <span class="hljs-attr">emphasis</span>: &#123;<br>          <span class="hljs-attr">focus</span>: <span class="hljs-string">&#x27;series&#x27;</span>,<br>        &#125;,<br>      &#125;,<br>    ],<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>4）支持按照用户ID搜索图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-card title=&quot;用户上传分析&quot;&gt;<br>  &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px&quot; /&gt;<br>  &lt;template #extra&gt;<br>    &lt;a-space&gt;<br>      &lt;a-segmented v-model:value=&quot;timeDimension&quot; :options=&quot;timeDimensionOptions&quot; /&gt;<br>      &lt;a-input-search placeholder=&quot;请输入用户 id&quot; enter-button=&quot;搜索用户&quot; @search=&quot;doSearch&quot; /&gt;<br>    &lt;/a-space&gt;<br>  &lt;/template&gt;<br>&lt;/a-card&gt;<br><br></code></pre></td></tr></table></figure><p>5）定义变量，接收表单输入值</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> userId = ref&lt;<span class="hljs-built_in">string</span>&gt;()<br><span class="hljs-keyword">const</span> timeDimension = ref&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-string">&#x27;day&#x27;</span>)<br><span class="hljs-keyword">const</span> timeDimensionOptions = [<br>  &#123;<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;日&#x27;</span>,<br>    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;day&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;周&#x27;</span>,<br>    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;week&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;月&#x27;</span>,<br>    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;month&#x27;</span>,<br>  &#125;,<br>]<br><br></code></pre></td></tr></table></figure><p>编写提交表单函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"><span class="hljs-attr">value</span>: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  userId.<span class="hljs-property">value</span> = value<br>&#125;<br><br></code></pre></td></tr></table></figure><p>补充搜索条件到获取数据函数中</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceUserAnalyzeUsingPost</span>(&#123;<br>  <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>  <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>  <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  <span class="hljs-attr">timeDimension</span>: timeDimension.<span class="hljs-property">value</span>,<br>  <span class="hljs-attr">userId</span>: userId.<span class="hljs-property">value</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165341740.png"alt="image-20250725165341740" /><figcaption aria-hidden="true">image-20250725165341740</figcaption></figure><h4 id="空间排行分析">6、空间排行分析</h4><p>按照存储用量排序，只展示前N个，选用柱状图</p><p>1）编写获取数据逻辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceRankAnalyzeUsingPost</span>(&#123;<br>    <span class="hljs-attr">queryAll</span>: props.<span class="hljs-property">queryAll</span>,<br>    <span class="hljs-attr">queryPublic</span>: props.<span class="hljs-property">queryPublic</span>,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里我们先不传topN，后期补充默认值</p><p>2）编写图表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;space-rank-analyze&quot;&gt;<br>  &lt;a-card title=&quot;空间使用排行&quot;&gt;<br>    &lt;v-chart :option=&quot;options&quot; style=&quot;height: 320px&quot; /&gt;<br>  &lt;/a-card&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写图表Option</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> options = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> spaceNames = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> item.<span class="hljs-property">spaceName</span>)<br>  <span class="hljs-keyword">const</span> usageData = dataList.<span class="hljs-property">value</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item</span>) =&gt;</span> (item.<span class="hljs-property">totalSize</span> / (<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>)).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>)) <span class="hljs-comment">// 转为 MB</span><br><br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">tooltip</span>: &#123; <span class="hljs-attr">trigger</span>: <span class="hljs-string">&#x27;axis&#x27;</span> &#125;,<br>    <span class="hljs-attr">xAxis</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,<br>      <span class="hljs-attr">data</span>: spaceNames,<br>    &#125;,<br>    <span class="hljs-attr">yAxis</span>: &#123;<br>      <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;空间使用量 (MB)&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">series</span>: [<br>      &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;空间使用量 (MB)&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;bar&#x27;</span>,<br>        <span class="hljs-attr">data</span>: usageData,<br>        <span class="hljs-attr">itemStyle</span>: &#123;<br>          <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#5470C6&#x27;</span>, <span class="hljs-comment">// 自定义柱状图颜色</span><br>        &#125;,<br>      &#125;,<br>    ],<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725165400700.png"alt="image-20250725165400700" /><figcaption aria-hidden="true">image-20250725165400700</figcaption></figure><h3 id="开发分析界面">开发分析界面</h3><p>新建分析界面，将所有图表插入。通过URL参数针对于不同范围的查询，比如指定(queryPublic= 1)</p><p>1）新建路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/space_analyze&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;空间分析&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">SpaceAnalyzePage</span>,<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发界面，获取url参数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>()<br><br><span class="hljs-comment">// 空间 id</span><br><span class="hljs-keyword">const</span> spaceId = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> route.<span class="hljs-property">query</span>?.<span class="hljs-property">spaceId</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span><br>&#125;)<br><br><span class="hljs-comment">// 是否查询所有空间</span><br><span class="hljs-keyword">const</span> queryAll = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> !!route.<span class="hljs-property">query</span>?.<span class="hljs-property">queryAll</span><br>&#125;)<br><br><span class="hljs-comment">// 是否查询公共空间</span><br><span class="hljs-keyword">const</span> queryPublic = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> !!route.<span class="hljs-property">query</span>?.<span class="hljs-property">queryPublic</span><br>&#125;)<br><br></code></pre></td></tr></table></figure><p>3）开发页面结构，引入栅栏组件一行两列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;spaceAnalyzePage&quot;&gt;<br>  &lt;h2&gt;<br>    空间图库分析 -<br>    &lt;span v-if=&quot;queryAll&quot;&gt; 全部空间 &lt;/span&gt;<br>    &lt;span v-else-if=&quot;queryPublic&quot;&gt; 公共图库 &lt;/span&gt;<br>    &lt;span v-else&gt;<br>      &lt;a :href=&quot;`/space/$&#123;spaceId&#125;`&quot; target=&quot;_blank&quot;&gt;id：&#123;&#123; spaceId &#125;&#125;&lt;/a&gt;<br>    &lt;/span&gt;<br>  &lt;/h2&gt;<br>  &lt;a-row :gutter=&quot;[16, 16]&quot;&gt;<br>    &lt;!-- 空间使用分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceUsageAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;!-- 空间分类分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceCategoryAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;!-- 标签分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceTagAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;!-- 图片大小分段分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceSizeAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;!-- 用户上传行为分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceUserAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;!-- 空间使用排行分析 --&gt;<br>    &lt;a-col :xs=&quot;24&quot; :md=&quot;12&quot;&gt;<br>      &lt;SpaceRankAnalyze :spaceId=&quot;spaceId&quot; :queryAll=&quot;queryAll&quot; :queryPublic=&quot;queryPublic&quot; /&gt;<br>    &lt;/a-col&gt;<br>  &lt;/a-row&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>4）权限控制，只有管理员可以查看</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> loginUserStore = <span class="hljs-title function_">useLoginUserStore</span>()<br><span class="hljs-keyword">const</span> loginUser = loginUserStore.<span class="hljs-property">loginUser</span><br><br><span class="hljs-keyword">const</span> isAdmin = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> loginUser.<span class="hljs-property">userRole</span> === <span class="hljs-string">&#x27;admin&#x27;</span><br>&#125;)<br><br></code></pre></td></tr></table></figure><p>组件添加<code>v-if</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;SpaceRankAnalyze v-if=&quot;isAdmin&quot; <br>  :spaceId=&quot;spaceId&quot; <br>  :queryAll=&quot;queryAll&quot; <br>  :queryPublic=&quot;queryPublic&quot; <br>/&gt;<br><br></code></pre></td></tr></table></figure><h3 id="补充跳转入口">补充跳转入口</h3><p>1）空间详情页补充空间分析按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-button<br>  type=&quot;primary&quot;<br>  ghost<br>  :icon=&quot;h(BarChartOutlined)&quot;<br>  :href=&quot;`/space_analyze?spaceId=$&#123;id&#125;`&quot;<br>  target=&quot;_blank&quot;<br>&gt;<br>  空间分析<br>&lt;/a-button&gt;<br><br></code></pre></td></tr></table></figure><p>2）空间管理页新增公共图库分析按钮、全空间分析按钮并可以跳转特定空间分析页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-space&gt;<br>  &lt;a-button type=&quot;primary&quot; href=&quot;/add_space&quot; target=&quot;_blank&quot;&gt;+ 创建空间&lt;/a-button&gt;<br>  &lt;a-button type=&quot;primary&quot; ghost href=&quot;/space_analyze?queryPublic=1&quot; target=&quot;_blank&quot;&gt;<br>    分析公共图库<br>  &lt;/a-button&gt;<br>  &lt;a-button type=&quot;primary&quot; ghost href=&quot;/space_analyze?queryAll=1&quot; target=&quot;_blank&quot;&gt;<br>    分析全空间<br>  &lt;/a-button&gt;<br><br>&lt;/a-space&gt;<br><br></code></pre></td></tr></table></figure><p>操作栏补充分析指定空间按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-button type=&quot;link&quot; :href=&quot;`/space_analyze?spaceId=$&#123;record.id&#125;`&quot; target=&quot;_blank&quot;&gt;<br>  分析<br>&lt;/a-button&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250725154052439.png"alt="image-20250725154052439" /><figcaption aria-hidden="true">image-20250725154052439</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱9-AI图片编辑</title>
    <link href="/2025/07/24/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B109/"/>
    <url>/2025/07/24/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B109/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/24 PM</p>          </div><h1 id="闲话少叙">闲话少叙</h1><p>博主还活着，昨天上传完项目，不知道为什么网站崩溃了，我看看怎么个事</p><h1 id="ai图片编辑">AI图片编辑</h1><h2 id="一基础图片编辑">一、基础图片编辑</h2><h3 id="需求分析">需求分析</h3><p>在图片管理中，我们往往需要对图片进行裁剪、旋转图片、放大缩小等需求</p><p>在这里我们引入基本图片编辑功能，完成以下操作</p><ul><li>裁剪</li><li>旋转</li></ul><h3 id="方案设计">方案设计</h3><p>图片编辑后，调用后端上传图片接口，保存至当前平台</p><p>核心业务流程</p><ul><li>用户在已经上传的图片上看到编辑按钮</li><li>点击编辑按钮，支持裁剪和旋转操作</li><li>用户点击确认编辑后，发送后端请求</li></ul><p>该操作不仅限于在个人空间中，还可以在公共图库中使用</p><h3 id="前端开发">前端开发</h3><h4 id="引入图片编辑组件">1、引入图片编辑组件</h4><p>图片编辑是一个很普遍的功能，有很多现成的库供我们使用，这里使用<ahref="https://github.com/xyxiao001/vue-cropper?tab=readme-ov-file#2-%E5%BC%95%E5%85%A5-vue-cropper">VueCropper</a></p><p>1）引入组件</p><p>根据官方README，这里我们需要选择Vue3版本的</p><figure><img src="/img/pictureLibrary/image-20250724122738933.png"alt="image-20250724122738933" /><figcaption aria-hidden="true">image-20250724122738933</figcaption></figure><p>安装依赖，由于教程使用版本为1.1.4，我们需要指定版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install vue-cropper@1.1.4 <br></code></pre></td></tr></table></figure><p><code>main.ts</code>引入依赖</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">VueCropper</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-cropper&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;vue-cropper/dist/index.css&#x27;</span><br><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VueCropper</span>)<br><br></code></pre></td></tr></table></figure><p>2）新建图片编辑组件。组件分为两大块，上方的图片预览，以及下方的图片操作</p><p>注意：我们的图片编辑是在图片上传完后才能够编辑，在图片上传页面引入</p><p>硬编码图片URL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;ImageCropper imageUrl=&quot;https://avatars2.githubusercontent.com/u/15681693?s=460&amp;v=4&quot; /&gt;<br><br></code></pre></td></tr></table></figure><p>参考<ahref="https://codepen.io/xyxiao001/pen/yLooYKg">官方Demo</a>，依次完成放大，缩小，旋转操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;image-cropper&quot;&gt;<br>    &lt;vue-cropper<br>      ref=&quot;cropperRef&quot;<br>      :img=&quot;imageUrl&quot;<br>      :autoCrop=&quot;true&quot;<br>      :fixedBox=&quot;false&quot;<br>      :centerBox=&quot;true&quot;<br>      :canMoveBox=&quot;true&quot;<br>      :info=&quot;true&quot;<br>      outputType=&quot;png&quot;<br>    /&gt;<br>    &lt;div style=&quot;margin-bottom: 16px&quot; /&gt;<br>    &lt;!-- 图片操作 --&gt;<br>    &lt;div class=&quot;image-cropper-actions&quot;&gt;<br>      &lt;a-space&gt;<br>        &lt;a-button @click=&quot;rotateLeft&quot;&gt;向左旋转&lt;/a-button&gt;<br>        &lt;a-button @click=&quot;rotateRight&quot;&gt;向右旋转&lt;/a-button&gt;<br>        &lt;a-button @click=&quot;changeScale(1)&quot;&gt;放大&lt;/a-button&gt;<br>        &lt;a-button @click=&quot;changeScale(-1)&quot;&gt;缩小&lt;/a-button&gt;<br>      &lt;/a-space&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;<br><br>interface Props &#123;<br>  imageUrl?: string<br>&#125;<br><br>const props = defineProps&lt;Props&gt;()<br><br>// 编辑器组件的引用<br>const cropperRef = ref()<br><br>// 向左旋转<br>const rotateLeft = () =&gt; &#123;<br>  cropperRef.value.rotateLeft()<br>&#125;<br><br>// 向右旋转<br>const rotateRight = () =&gt; &#123;<br>  cropperRef.value.rotateRight()<br>&#125;<br><br>// 缩放<br>const changeScale = (num: number) =&gt; &#123;<br>  cropperRef.value.changeScale(num)<br>&#125;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.image-cropper &#123;<br>  text-align: center;<br>&#125;<br>  <br>.image-cropper .vue-cropper &#123;<br>  height: 400px;<br>&#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>2）编写确认按钮，点击后调用VueCropper的getCropBlob函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-space&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;rotateLeft&quot;</span>&gt;</span>向左旋转<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;rotateRight&quot;</span>&gt;</span>向右旋转<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeScale(1)&quot;</span>&gt;</span>放大<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeScale(-1)&quot;</span>&gt;</span>缩小<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">:loading</span>=<span class="hljs-string">&quot;loading&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleConfirm&quot;</span>&gt;</span>确认<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span><br>&lt;/a-space&gt;<br><br><span class="hljs-comment">// 确认裁剪</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleConfirm</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  cropperRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">getCropBlob</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">blob</span>: <span class="hljs-title class_">Blob</span></span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// blob 为已裁切的文件</span><br>  &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="图片编辑弹窗">2、图片编辑弹窗</h4><p>嵌套上一步的编辑组件到Modal弹窗</p><p>1）将外层div改为a-modal，将class类名加在modal上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-modal class=&quot;image-cropper&quot; v-model:visible=&quot;visible&quot; title=&quot;编辑图片&quot; :footer=&quot;false&quot; @cancel=&quot;closeModal&quot;&gt;<br>  ... 原有代码<br>&lt;/a-modal&gt;<br><br></code></pre></td></tr></table></figure><p>2）完善基础弹窗开闭代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 是否可见</span><br><span class="hljs-keyword">const</span> visible = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)<br><br><span class="hljs-comment">// 打开弹窗</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">openModal</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  visible.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-comment">// 关闭弹窗</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">closeModal</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  visible.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br><span class="hljs-comment">// 暴露函数给父组件</span><br><span class="hljs-title function_">defineExpose</span>(&#123;<br>  openModal,<br>&#125;)<br><br></code></pre></td></tr></table></figure><h4 id="上传编辑后到代码">3、上传编辑后到代码</h4><p>点击确认后，上传编辑后的图片。图片编辑组件可以作为上传组件的一种，但是不和本地图片上传/URL上传绑定</p><p>1）Props传参参考上传组件属性，新增三个属性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  imageUrl?: <span class="hljs-built_in">string</span><br>  picture?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span><br>  spaceId?: <span class="hljs-built_in">number</span><br>  onSuccess?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">newPicture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）编写上传函数。点击确认后会将Blob数据转化为File对象，接着复用图片上传组件提交函数，上传成功后会传递图片信息给父组件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> loading = ref&lt;<span class="hljs-built_in">boolean</span>&gt;(<span class="hljs-literal">false</span>)<br><br><span class="hljs-comment">// 确认裁剪</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleConfirm</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  cropperRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">getCropBlob</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">blob</span>: <span class="hljs-title class_">Blob</span></span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> fileName = (props.<span class="hljs-property">picture</span>?.<span class="hljs-property">name</span> || <span class="hljs-string">&#x27;image&#x27;</span>) + <span class="hljs-string">&#x27;.png&#x27;</span><br>    <span class="hljs-keyword">const</span> file = <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>([blob], fileName, &#123; <span class="hljs-attr">type</span>: blob.<span class="hljs-property">type</span> &#125;)<br>    <span class="hljs-comment">// 上传图片</span><br>    <span class="hljs-title function_">handleUpload</span>(&#123; file &#125;)<br>  &#125;)<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 上传</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> <span class="hljs-variable">file</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleUpload</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">&#123; file &#125;: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">params</span>: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureUploadRequest</span> = props.<span class="hljs-property">picture</span> ? &#123; <span class="hljs-attr">id</span>: props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span> &#125; : &#123;&#125;<br>    params.<span class="hljs-property">spaceId</span> = props.<span class="hljs-property">spaceId</span><br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureUsingPost</span>(params, &#123;&#125;, file)<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;图片上传成功&#x27;</span>)<br>      <span class="hljs-comment">// 将上传成功的图片信息传递给父组件</span><br>      props.<span class="hljs-property">onSuccess</span>?.(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>)<br>      <span class="hljs-title function_">closeModal</span>();<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败&#x27;</span>)<br>  &#125; <span class="hljs-keyword">finally</span> &#123;<br>    loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="使用图片编辑组件弹窗">4、使用图片编辑组件弹窗</h4><p>图片下方添加按钮编辑图片，点击后弹窗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div v-if=&quot;picture&quot; class=&quot;edit-bar&quot;&gt;<br>  &lt;a-button :icon=&quot;h(EditOutlined)&quot; @click=&quot;doEditPicture&quot;&gt;编辑图片&lt;/a-button&gt;<br>  &lt;ImageCropper<br>    ref=&quot;imageCropperRef&quot;<br>    imageUrl=&quot;https://avatars2.githubusercontent.com/u/15681693?s=460&amp;v=4&quot;<br>    :picture=&quot;picture&quot;<br>    :spaceId=&quot;spaceId&quot;<br>    :onSuccess=&quot;onCropSuccess&quot;<br>  /&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>编辑图片事件函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 图片编辑弹窗引用</span><br><span class="hljs-keyword">const</span> imageCropperRef = <span class="hljs-title function_">ref</span>()<br><br><span class="hljs-comment">// 编辑图片</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doEditPicture</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (imageCropperRef.<span class="hljs-property">value</span>) &#123;<br>    imageCropperRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">openModal</span>()<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 编辑成功事件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onCropSuccess</span> = (<span class="hljs-params"><span class="hljs-attr">newPicture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;<br>  picture.<span class="hljs-property">value</span> = newPicture<br>&#125;<br><br></code></pre></td></tr></table></figure><p>优化CSS样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#addPicturePage</span> <span class="hljs-selector-class">.edit-bar</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">16px</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>开发结束后，更改死数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;ImageCropper<br>  ref=&quot;imageCropperRef&quot;<br>  :imageUrl=&quot;picture?.url&quot;<br>  :picture=&quot;picture&quot;<br>  :spaceId=&quot;spaceId&quot;<br>  :onSuccess=&quot;onSuccess&quot;<br>/&gt;<br><br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250724133255205.png"alt="image-20250724133255205" /><figcaption aria-hidden="true">image-20250724133255205</figcaption></figure><h4 id="跨域问题解决">5、跨域问题解决</h4><p>跨域问题的出现是因为服务器域名和我们客户端域名不一致</p><p>解决方案主要是在COS当前桶列表中添加CORS设置，允许前端localhost:5173访问</p><figure><img src="/img/pictureLibrary/image-20250724134048211.png"alt="image-20250724134048211" /><figcaption aria-hidden="true">image-20250724134048211</figcaption></figure><p>测试成功！！！</p><figure><img src="/img/pictureLibrary/image-20250724134109433.png"alt="image-20250724134109433" /><figcaption aria-hidden="true">image-20250724134109433</figcaption></figure><h2 id="二ai图片编辑">二、AI图片编辑</h2><h3 id="需求分析-1">需求分析</h3><p>随着时代发展，AI技术随之流行，AI提供了不止刚刚的功能例如：去水印、图片配置文章、扩图等</p><h3 id="方案设计-1">方案设计</h3><h4 id="ai大模型选择">1、AI大模型选择</h4><p>国外比较知名的是MidJourney，但是价格有点贵，国内推荐使用<ahref="https://www.aliyun.com/product/bailian?utm_content=m_1000400273">阿里云百炼</a>，简单操作页面，5分钟上手</p><p>来到应用导航，点击创建应用，开通免费额度，选择模型</p><figure><img src="/img/pictureLibrary/image-20250724140712854.png"alt="image-20250724140712854" /><figcaption aria-hidden="true">image-20250724140712854</figcaption></figure><p>创建发布完应用，可以查看API通过几段代码进行调用</p><figure><img src="/img/pictureLibrary/image-20250724140937467.png"alt="image-20250724140937467" /><figcaption aria-hidden="true">image-20250724140937467</figcaption></figure><p>阅读<ahref="https://help.aliyun.com/zh/model-studio/image-scaling-api?utm_content=m_1000400274">官方文档</a>，发现支持AI扩图、AI图像编辑等功能符合我们的要求</p><figure><img src="/img/pictureLibrary/image-20250724141204647.png"alt="image-20250724141204647" /><figcaption aria-hidden="true">image-20250724141204647</figcaption></figure><p>模型列表中也可以搜索到</p><figure><img src="/img/pictureLibrary/image-20250724141337838.png"alt="image-20250724141337838" /><figcaption aria-hidden="true">image-20250724141337838</figcaption></figure><p>模型也是提供免费额度的</p><figure><img src="/img/pictureLibrary/image-20250724141412424.png"alt="image-20250724141412424" /><figcaption aria-hidden="true">image-20250724141412424</figcaption></figure><p>这里提供一个<a href="https://www.waytoagi.com/zh">AI学习网站</a></p><h4 id="调用方法">2、调用方法</h4><p>阅读<ahref="https://help.aliyun.com/zh/model-studio/image-scaling-api?utm_content=m_1000400274">扩图文档</a></p><figure><img src="/img/pictureLibrary/image-20250724141714771.png"alt="image-20250724141714771" /><figcaption aria-hidden="true">image-20250724141714771</figcaption></figure><p>AI绘图采用异步主要是害怕绘图时间长造成进程堵塞</p><p>同步调用流程如下</p><figure><img src="/img/pictureLibrary/image-20250724142804405.png"alt="image-20250724142804405" /><figcaption aria-hidden="true">image-20250724142804405</figcaption></figure><p>异步调用流程如下</p><figure><img src="/img/pictureLibrary/image-20250724142816096.png"alt="image-20250724142816096" /><figcaption aria-hidden="true">image-20250724142816096</figcaption></figure><p><strong>选择前端轮询还是后端轮询呢？</strong></p><p>1）前端轮询</p><p>提交任务后得到ID，设置定时器轮询状态，直到任务成功或失败</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 提交任务</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">submitTask</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;/api/createTask&#x27;</span>, &#123; <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span> &#125;);<br>  <span class="hljs-keyword">const</span> &#123; taskId &#125; = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>  <span class="hljs-title function_">checkTaskStatus</span>(taskId);<br>&#125;<br><br><span class="hljs-comment">// 调用</span><br><span class="hljs-title function_">submitTask</span>();<br><br><span class="hljs-comment">// 检查任务状态</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">checkTaskStatus</span>(<span class="hljs-params">taskId</span>) &#123;<br>  <span class="hljs-keyword">const</span> intervalId = <span class="hljs-built_in">setInterval</span>(<span class="hljs-title function_">async</span> () =&gt; &#123;<br>    <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">`/api/taskStatus?taskId=<span class="hljs-subst">$&#123;taskId&#125;</span>`</span>);<br>    <span class="hljs-keyword">const</span> &#123; status, result &#125; = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br><br>    <span class="hljs-keyword">if</span> (status === <span class="hljs-string">&#x27;success&#x27;</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Task completed:&#x27;</span>, result);<br>      <span class="hljs-built_in">clearInterval</span>(intervalId); <span class="hljs-comment">// 停止轮询</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (status === <span class="hljs-string">&#x27;failed&#x27;</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;Task failed&#x27;</span>);<br>      <span class="hljs-built_in">clearInterval</span>(intervalId); <span class="hljs-comment">// 停止轮询</span><br>    &#125;<br>  &#125;, <span class="hljs-number">2000</span>); <span class="hljs-comment">// 每隔 2 秒轮询</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）后端轮询</p><p>设置循环或定时任务，接口阻塞，直到任务执行成功或失败</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TaskController</span> &#123;<br><br>    <span class="hljs-meta">@PostMapping(&quot;/createTask&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">createTask</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">taskId</span> <span class="hljs-operator">=</span> taskService.submitTask();<br>        <span class="hljs-keyword">return</span> taskId;<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/waitForTask&quot;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;String&gt; <span class="hljs-title function_">waitForTask</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String taskId)</span> &#123;<br>        <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> taskService.checkTaskStatus(taskId);<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;success&quot;</span>.equals(status)) &#123;<br>                <span class="hljs-keyword">return</span> ResponseEntity.ok(<span class="hljs-string">&quot;Task completed&quot;</span>);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;failed&quot;</span>.equals(status)) &#123;<br>                <span class="hljs-keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="hljs-string">&quot;Task failed&quot;</span>);<br>            &#125;<br><br>            <span class="hljs-keyword">try</span> &#123;<br>                Thread.sleep(<span class="hljs-number">2000</span>); <span class="hljs-comment">// 等待 2 秒后重试</span><br>            &#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>                <span class="hljs-keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="hljs-string">&quot;Error occurred&quot;</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>后端接口阻塞容易导致资源耗尽，这里我们选择前端轮询</p><h3 id="后端开发">后端开发</h3><h4 id="扩图api">1、扩图API</h4><p>1）刚刚已经开通过了，这里需要获取API Key</p><figure><img src="/img/pictureLibrary/image-20250724143404679.png"alt="image-20250724143404679" /><figcaption aria-hidden="true">image-20250724143404679</figcaption></figure><p>阅读文档发现百炼支持SDK和HTTP调用，但是SDK描述过于少，这里使用HTTP调用</p><p>3）配置文件中添加apiKey</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">aliYunAi:</span><br><span class="hljs-symbol">  apiKey:</span> xxxx<br></code></pre></td></tr></table></figure><p>4）新建数据模型类</p><p>新建<code>/api/aliyunai</code>包，用来存放阿里云AI代码</p><p>在<code>/aliyunai/model</code>下新建模型类，可以使用ai根据官方文档生成</p><p>创建扩图请求类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreateOutPaintingTaskRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 模型，例如 &quot;image-out-painting&quot;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">model</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;image-out-painting&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输入图像信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Input input;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图像处理参数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Parameters parameters;<br><br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Input</span> &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 必选，图像 URL</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;image_url&quot;)</span><br>        <span class="hljs-keyword">private</span> String imageUrl;<br>    &#125;<br><br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Parameters</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，逆时针旋转角度，默认值 0，取值范围 [0, 359]</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> Integer angle;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，输出图像的宽高比，默认空字符串，不设置宽高比</span><br><span class="hljs-comment">         * 可选值：[&quot;&quot;, &quot;1:1&quot;, &quot;3:4&quot;, &quot;4:3&quot;, &quot;9:16&quot;, &quot;16:9&quot;]</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;output_ratio&quot;)</span><br>        <span class="hljs-keyword">private</span> String outputRatio;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，图像居中，在水平方向上按比例扩展，默认值 1.0，范围 [1.0, 3.0]</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;x_scale&quot;)</span><br>        <span class="hljs-meta">@JsonProperty(&quot;xScale&quot;)</span><br>        <span class="hljs-keyword">private</span> Float xScale;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，图像居中，在垂直方向上按比例扩展，默认值 1.0，范围 [1.0, 3.0]</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;y_scale&quot;)</span><br>        <span class="hljs-meta">@JsonProperty(&quot;yScale&quot;)</span><br>        <span class="hljs-keyword">private</span> Float yScale;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，在图像上方添加像素，默认值 0</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;top_offset&quot;)</span><br>        <span class="hljs-keyword">private</span> Integer topOffset;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，在图像下方添加像素，默认值 0</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;bottom_offset&quot;)</span><br>        <span class="hljs-keyword">private</span> Integer bottomOffset;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，在图像左侧添加像素，默认值 0</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;left_offset&quot;)</span><br>        <span class="hljs-keyword">private</span> Integer leftOffset;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，在图像右侧添加像素，默认值 0</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;right_offset&quot;)</span><br>        <span class="hljs-keyword">private</span> Integer rightOffset;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，开启图像最佳质量模式，默认值 false</span><br><span class="hljs-comment">         * 若为 true，耗时会成倍增加</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;best_quality&quot;)</span><br>        <span class="hljs-keyword">private</span> Boolean bestQuality;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，限制模型生成的图像文件大小，默认值 true</span><br><span class="hljs-comment">         * - 单边长度 &lt;= 10000：输出图像文件大小限制为 5MB 以下</span><br><span class="hljs-comment">         * - 单边长度 &gt; 10000：输出图像文件大小限制为 10MB 以下</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;limit_image_size&quot;)</span><br>        <span class="hljs-keyword">private</span> Boolean limitImageSize;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 可选，添加 &quot;Generated by AI&quot; 水印，默认值 true</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-meta">@Alias(&quot;add_watermark&quot;)</span><br>        <span class="hljs-keyword">private</span> <span class="hljs-type">Boolean</span> <span class="hljs-variable">addWatermark</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>创建扩图响应类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreateOutPaintingTaskResponse</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Output output;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 表示任务的输出信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Output</span> &#123;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 任务 ID</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String taskId;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 任务状态</span><br><span class="hljs-comment">         * &lt;ul&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;PENDING：排队中&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;RUNNING：处理中&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;SUSPENDED：挂起&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;SUCCEEDED：执行成功&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;FAILED：执行失败&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;UNKNOWN：任务不存在或状态未知&lt;/li&gt;</span><br><span class="hljs-comment">         * &lt;/ul&gt;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String taskStatus;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口错误码。</span><br><span class="hljs-comment">     * &lt;p&gt;接口成功请求不会返回该参数。&lt;/p&gt;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String code;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 接口错误信息。</span><br><span class="hljs-comment">     * &lt;p&gt;接口成功请求不会返回该参数。&lt;/p&gt;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求唯一标识。</span><br><span class="hljs-comment">     * &lt;p&gt;可用于请求明细溯源和问题排查。&lt;/p&gt;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String requestId;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>查询任务响应类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetOutPaintingTaskResponse</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 请求唯一标识</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String requestId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输出信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Output output;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 表示任务的输出信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Output</span> &#123;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 任务 ID</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String taskId;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 任务状态</span><br><span class="hljs-comment">         * &lt;ul&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;PENDING：排队中&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;RUNNING：处理中&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;SUSPENDED：挂起&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;SUCCEEDED：执行成功&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;FAILED：执行失败&lt;/li&gt;</span><br><span class="hljs-comment">         *     &lt;li&gt;UNKNOWN：任务不存在或状态未知&lt;/li&gt;</span><br><span class="hljs-comment">         * &lt;/ul&gt;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String taskStatus;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 提交时间</span><br><span class="hljs-comment">         * 格式：YYYY-MM-DD HH:mm:ss.SSS</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String submitTime;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 调度时间</span><br><span class="hljs-comment">         * 格式：YYYY-MM-DD HH:mm:ss.SSS</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String scheduledTime;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 结束时间</span><br><span class="hljs-comment">         * 格式：YYYY-MM-DD HH:mm:ss.SSS</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String endTime;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 输出图像的 URL</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String outputImageUrl;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 接口错误码</span><br><span class="hljs-comment">         * &lt;p&gt;接口成功请求不会返回该参数&lt;/p&gt;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String code;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 接口错误信息</span><br><span class="hljs-comment">         * &lt;p&gt;接口成功请求不会返回该参数&lt;/p&gt;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> String message;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 任务指标信息</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> TaskMetrics taskMetrics;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 表示任务的统计信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TaskMetrics</span> &#123;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 总任务数</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> Integer total;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 成功任务数</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> Integer succeeded;<br><br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 失败任务数</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-keyword">private</span> Integer failed;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>5）开发阿里API调用类，根据Hutool的HTTP请求调用百炼API</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AliYunAiApi</span> &#123;<br>    <span class="hljs-comment">// 读取配置文件</span><br>    <span class="hljs-meta">@Value(&quot;$&#123;aliYunAi.apiKey&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String apiKey;<br><br>    <span class="hljs-comment">// 创建任务地址</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">CREATE_OUT_PAINTING_TASK_URL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://dashscope.aliyuncs.com/api/v1/services/aigc/image2image/out-painting&quot;</span>;<br><br>    <span class="hljs-comment">// 查询任务状态</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">GET_OUT_PAINTING_TASK_URL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://dashscope.aliyuncs.com/api/v1/tasks/%s&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建任务</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> createOutPaintingTaskRequest</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> CreateOutPaintingTaskResponse <span class="hljs-title function_">createOutPaintingTask</span><span class="hljs-params">(CreateOutPaintingTaskRequest createOutPaintingTaskRequest)</span> &#123;<br>        <span class="hljs-keyword">if</span> (createOutPaintingTaskRequest == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;扩图参数为空&quot;</span>);<br>        &#125;<br>        <span class="hljs-comment">// 发送请求</span><br>        <span class="hljs-type">HttpRequest</span> <span class="hljs-variable">httpRequest</span> <span class="hljs-operator">=</span> HttpRequest.post(CREATE_OUT_PAINTING_TASK_URL)<br>                .header(Header.AUTHORIZATION, <span class="hljs-string">&quot;Bearer &quot;</span> + apiKey)<br>                <span class="hljs-comment">// 必须开启异步处理，设置为enable。</span><br>                .header(<span class="hljs-string">&quot;X-DashScope-Async&quot;</span>, <span class="hljs-string">&quot;enable&quot;</span>)<br>                .header(Header.CONTENT_TYPE, ContentType.JSON.getValue())<br>                .body(JSONUtil.toJsonStr(createOutPaintingTaskRequest));<br>        <span class="hljs-keyword">try</span> (<span class="hljs-type">HttpResponse</span> <span class="hljs-variable">httpResponse</span> <span class="hljs-operator">=</span> httpRequest.execute()) &#123;<br>            <span class="hljs-keyword">if</span> (!httpResponse.isOk()) &#123;<br>                log.error(<span class="hljs-string">&quot;请求异常：&#123;&#125;&quot;</span>, httpResponse.body());<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;AI 扩图失败&quot;</span>);<br>            &#125;<br>            <span class="hljs-type">CreateOutPaintingTaskResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> JSONUtil.toBean(httpResponse.body(), CreateOutPaintingTaskResponse.class);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">errorCode</span> <span class="hljs-operator">=</span> response.getCode();<br>            <span class="hljs-keyword">if</span> (StrUtil.isNotBlank(errorCode)) &#123;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">errorMessage</span> <span class="hljs-operator">=</span> response.getMessage();<br>                log.error(<span class="hljs-string">&quot;AI 扩图失败，errorCode:&#123;&#125;, errorMessage:&#123;&#125;&quot;</span>, errorCode, errorMessage);<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;AI 扩图接口响应异常&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> response;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询创建的任务</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> taskId</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> GetOutPaintingTaskResponse <span class="hljs-title function_">getOutPaintingTask</span><span class="hljs-params">(String taskId)</span> &#123;<br>        <span class="hljs-keyword">if</span> (StrUtil.isBlank(taskId)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;任务 id 不能为空&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">try</span> (<span class="hljs-type">HttpResponse</span> <span class="hljs-variable">httpResponse</span> <span class="hljs-operator">=</span> HttpRequest.get(String.format(GET_OUT_PAINTING_TASK_URL, taskId))<br>                .header(Header.AUTHORIZATION, <span class="hljs-string">&quot;Bearer &quot;</span> + apiKey)<br>                .execute()) &#123;<br>            <span class="hljs-keyword">if</span> (!httpResponse.isOk()) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;获取任务失败&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> JSONUtil.toBean(httpResponse.body(), GetOutPaintingTaskResponse.class);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="扩图服务">2、扩图服务</h4><p>picture包下新建扩图请求类，字段主要包含图片ID和扩图的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreatePictureOutPaintingTaskRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long pictureId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 扩图参数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> CreateOutPaintingTaskRequest.Parameters parameters;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>扩图服务方法编写，从数据库中获取图片信息，校验请求参数后调用api</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> CreateOutPaintingTaskResponse <span class="hljs-title function_">createPictureOutPaintingTask</span><span class="hljs-params">(CreatePictureOutPaintingTaskRequest createPictureOutPaintingTaskRequest, User loginUser)</span> &#123;<br>    <span class="hljs-comment">// 获取图片信息</span><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">pictureId</span> <span class="hljs-operator">=</span> createPictureOutPaintingTaskRequest.getPictureId();<br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> Optional.ofNullable(<span class="hljs-built_in">this</span>.getById(pictureId))<br>            .orElseThrow(() -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_FOUND_ERROR));<br>    <span class="hljs-comment">// 权限校验</span><br>    checkPictureAuth(loginUser, picture);<br>    <span class="hljs-comment">// 构造请求参数</span><br>    <span class="hljs-type">CreateOutPaintingTaskRequest</span> <span class="hljs-variable">taskRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreateOutPaintingTaskRequest</span>();<br>    CreateOutPaintingTaskRequest.<span class="hljs-type">Input</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreateOutPaintingTaskRequest</span>.Input();<br>    input.setImageUrl(picture.getUrl());<br>    taskRequest.setInput(input);<br>    BeanUtil.copyProperties(createPictureOutPaintingTaskRequest, taskRequest);<br>    <span class="hljs-comment">// 创建任务</span><br>    <span class="hljs-keyword">return</span> aliYunAiApi.createOutPaintingTask(taskRequest);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="扩图接口">3、扩图接口</h4><p>添加AI扩图接口，添加创建任务和查询任务接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建 AI 扩图任务</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@PostMapping(&quot;/out_painting/create_task&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;CreateOutPaintingTaskResponse&gt; <span class="hljs-title function_">createPictureOutPaintingTask</span><span class="hljs-params">(</span><br><span class="hljs-params">        <span class="hljs-meta">@RequestBody</span> CreatePictureOutPaintingTaskRequest createPictureOutPaintingTaskRequest,</span><br><span class="hljs-params">        HttpServletRequest request)</span> &#123;<br>    <span class="hljs-keyword">if</span> (createPictureOutPaintingTaskRequest == <span class="hljs-literal">null</span> || createPictureOutPaintingTaskRequest.getPictureId() == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>    &#125;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    <span class="hljs-type">CreateOutPaintingTaskResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> pictureService.createPictureOutPaintingTask(createPictureOutPaintingTaskRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(response);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 查询 AI 扩图任务</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@GetMapping(&quot;/out_painting/get_task&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;GetOutPaintingTaskResponse&gt; <span class="hljs-title function_">getPictureOutPaintingTask</span><span class="hljs-params">(String taskId)</span> &#123;<br>    ThrowUtils.throwIf(StrUtil.isBlank(taskId), ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">GetOutPaintingTaskResponse</span> <span class="hljs-variable">task</span> <span class="hljs-operator">=</span> aliYunAiApi.getOutPaintingTask(taskId);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(task);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="前端开发-1">前端开发</h3><p>扩图按钮我们准备放置在编辑按钮旁边，点击后可以AI扩图</p><h4 id="ai扩图弹窗">1、AI扩图弹窗</h4><p>1）参考先前的裁剪图片代码，保留弹窗修改标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;a-modal<br>    class=&quot;image-out-painting&quot;<br>    v-model:visible=&quot;visible&quot;<br>    title=&quot;AI 扩图&quot;<br>    :footer=&quot;false&quot;<br>    @cancel=&quot;closeModal&quot;<br>  &gt;<br><br>  &lt;/a-modal&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;<br>import &#123; uploadPictureUsingPost &#125; from &#x27;@/api/pictureController&#x27;<br>import &#123; message &#125; from &#x27;ant-design-vue&#x27;<br><br>interface Props &#123;<br>  picture?: API.PictureVO<br>  spaceId?: number<br>  onSuccess?: (newPicture: API.PictureVO) =&gt; void<br>&#125;<br><br>const props = defineProps&lt;Props&gt;()<br><br>// 是否可见<br>const visible = ref(false)<br><br>// 打开弹窗<br>const openModal = () =&gt; &#123;<br>  visible.value = true<br>&#125;<br><br>// 关闭弹窗<br>const closeModal = () =&gt; &#123;<br>  visible.value = false<br>&#125;<br><br>// 暴露函数给父组件<br>defineExpose(&#123;<br>  openModal,<br>&#125;)<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>.image-out-painting &#123;<br>  text-align: center;<br>&#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>2）开发弹窗功能</p><p>这里使用栅格语法，一行两列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-row gutter=&quot;16&quot;&gt;<br>  &lt;a-col span=&quot;12&quot;&gt;<br>    &lt;h4&gt;原始图片&lt;/h4&gt;<br>    &lt;img :src=&quot;picture?.url&quot; :alt=&quot;picture?.name&quot; style=&quot;max-width: 100%&quot; /&gt;<br>  &lt;/a-col&gt;<br>  &lt;a-col span=&quot;12&quot;&gt;<br>    &lt;h4&gt;扩图结果&lt;/h4&gt;<br>    &lt;img<br>      v-if=&quot;resultImageUrl&quot;<br>      :src=&quot;resultImageUrl&quot;<br>      :alt=&quot;picture?.name&quot;<br>      style=&quot;max-width: 100%&quot;<br>    /&gt;<br>  &lt;/a-col&gt;<br>&lt;/a-row&gt;<br>&lt;div style=&quot;margin-bottom: 16px&quot; /&gt;<br>&lt;a-flex gap=&quot;16&quot; justify=&quot;center&quot;&gt;<br>  &lt;a-button type=&quot;primary&quot; ghost @click=&quot;createTask&quot;&gt;生成图片&lt;/a-button&gt;<br>  &lt;a-button type=&quot;primary&quot; @click=&quot;handleUpload&quot;&gt;应用结果&lt;/a-button&gt;<br>&lt;/a-flex&gt;<br><br></code></pre></td></tr></table></figure><p>定义变量，存储图片结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">const</span> <span class="hljs-variable">resultImageUrl</span> <span class="hljs-operator">=</span> ref&lt;string&gt;()<br></code></pre></td></tr></table></figure><p>3）编写创建任务函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 任务 id</span><br><span class="hljs-keyword">let</span> taskId = ref&lt;<span class="hljs-built_in">string</span>&gt;()<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建任务</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">createTask</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!props.<span class="hljs-property">picture</span>?.<span class="hljs-property">id</span>) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">createPictureOutPaintingTaskUsingPost</span>(&#123;<br>    <span class="hljs-attr">pictureId</span>: props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span>,<br>    <span class="hljs-comment">// 可以根据需要设置扩图参数</span><br>    <span class="hljs-attr">parameters</span>: &#123;<br>      <span class="hljs-attr">xScale</span>: <span class="hljs-number">2</span>,<br>      <span class="hljs-attr">yScale</span>: <span class="hljs-number">2</span>,<br>    &#125;,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;创建任务成功，请耐心等待，不要退出界面&#x27;</span>)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">output</span>.<span class="hljs-property">taskId</span>)<br>    taskId.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">output</span>.<span class="hljs-property">taskId</span><br>    <span class="hljs-comment">// 开启轮询</span><br>    <span class="hljs-title function_">startPolling</span>()<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;创建任务失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）编写轮询逻辑。无论成功与否，都需要进行清理</p><ul><li>清理定时器</li><li>将定时器变量设置为null</li><li>将任务ID设置为null</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 轮询定时器</span><br><span class="hljs-keyword">let</span> <span class="hljs-attr">pollingTimer</span>: <span class="hljs-title class_">NodeJS</span>.<span class="hljs-property">Timeout</span> = <span class="hljs-literal">null</span><br><br><span class="hljs-comment">// 清理轮询定时器</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">clearPolling</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (pollingTimer) &#123;<br>    <span class="hljs-built_in">clearInterval</span>(pollingTimer)<br>    pollingTimer = <span class="hljs-literal">null</span><br>    taskId.<span class="hljs-property">value</span> = <span class="hljs-literal">null</span><br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 开始轮询</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">startPolling</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!taskId.<span class="hljs-property">value</span>) <span class="hljs-keyword">return</span><br><br>  pollingTimer = <span class="hljs-built_in">setInterval</span>(<span class="hljs-title function_">async</span> () =&gt; &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getPictureOutPaintingTaskUsingGet</span>(&#123;<br>        <span class="hljs-attr">taskId</span>: taskId.<span class="hljs-property">value</span>,<br>      &#125;)<br>      <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>        <span class="hljs-keyword">const</span> taskResult = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">output</span><br>        <span class="hljs-keyword">if</span> (taskResult.<span class="hljs-property">taskStatus</span> === <span class="hljs-string">&#x27;SUCCEEDED&#x27;</span>) &#123;<br>          message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;扩图任务成功&#x27;</span>)<br>          resultImageUrl.<span class="hljs-property">value</span> = taskResult.<span class="hljs-property">outputImageUrl</span><br>          <span class="hljs-title function_">clearPolling</span>()<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (taskResult.<span class="hljs-property">taskStatus</span> === <span class="hljs-string">&#x27;FAILED&#x27;</span>) &#123;<br>          message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;扩图任务失败&#x27;</span>)<br>          <span class="hljs-title function_">clearPolling</span>()<br>        &#125;<br>      &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;轮询任务状态失败&#x27;</span>, error)<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;检测任务状态失败，请稍后重试&#x27;</span>)<br>      <span class="hljs-title function_">clearPolling</span>()<br>    &#125;<br>  &#125;, <span class="hljs-number">3000</span>) <span class="hljs-comment">// 每隔 3 秒轮询一次</span><br>&#125;<br><br><span class="hljs-comment">// 清理定时器，避免内存泄漏</span><br><span class="hljs-title function_">onUnmounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">clearPolling</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>5）当任务执行完毕，得到图片结果，可以点击应用结果按钮，调用URL上传接口。</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> uploadLoading = ref&lt;<span class="hljs-built_in">boolean</span>&gt;(<span class="hljs-literal">false</span>)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleUpload</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  uploadLoading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">params</span>: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureUploadRequest</span> = &#123;<br>      <span class="hljs-attr">fileUrl</span>: resultImageUrl.<span class="hljs-property">value</span>,<br>      <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>    &#125;<br>    <span class="hljs-keyword">if</span> (props.<span class="hljs-property">picture</span>) &#123;<br>      params.<span class="hljs-property">id</span> = props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span><br>    &#125;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureByUrlUsingPost</span>(params)<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;图片上传成功&#x27;</span>)<br>      <span class="hljs-comment">// 将上传成功的图片信息传递给父组件</span><br>      props.<span class="hljs-property">onSuccess</span>?.(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>)<br>      <span class="hljs-comment">// 关闭弹窗</span><br>      <span class="hljs-title function_">closeModal</span>()<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败&#x27;</span>)<br>  &#125; <span class="hljs-keyword">finally</span> &#123;<br>    uploadLoading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>6）页面优化</p><p>给生成图片按钮添加loading效果，有任务ID禁止提交。扩图成功清理ID</p><p>应用结果按钮添加loading，当有应用结果才展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-button type=&quot;primary&quot; :loading=&quot;!!taskId&quot; ghost <br>  @click=&quot;createTask&quot;&gt;<br>  生成图片<br>&lt;/a-button&gt;<br>&lt;a-button type=&quot;primary&quot; v-if=&quot;resultImageUrl&quot; <br>  :loading=&quot;uploadLoading&quot; <br>  @click=&quot;handleUpload&quot;&gt;<br>  应用结果<br>&lt;/a-button&gt;<br><br><br></code></pre></td></tr></table></figure><h4 id="创建图片页面引入弹窗">2、创建图片页面引入弹窗</h4><p>创建图片页面引入弹窗，在编辑图片右边引入AI扩图，点击显示弹窗</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-space size=&quot;middle&quot;&gt;<br>  &lt;a-button :icon=&quot;h(EditOutlined)&quot; @click=&quot;doEditPicture&quot;&gt;编辑图片&lt;/a-button&gt;<br>  &lt;a-button type=&quot;primary&quot; ghost :icon=&quot;h(FullscreenOutlined)&quot; @click=&quot;doImagePainting&quot;&gt;<br>    AI 扩图<br>  &lt;/a-button&gt;<br>&lt;/a-space&gt;<br>&lt;ImageOutPainting<br>  ref=&quot;imageOutPaintingRef&quot;<br>  :picture=&quot;picture&quot;<br>  :spaceId=&quot;spaceId&quot;<br>  :onSuccess=&quot;onImageOutPaintingSuccess&quot;<br>/&gt;<br><br></code></pre></td></tr></table></figure><p>编写点击后触发函数，打开弹窗</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// AI 扩图弹窗引用</span><br><span class="hljs-keyword">const</span> imageOutPaintingRef = <span class="hljs-title function_">ref</span>()<br><br><span class="hljs-comment">// AI 扩图</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doImagePainting</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (imageOutPaintingRef.<span class="hljs-property">value</span>) &#123;<br>    imageOutPaintingRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">openModal</span>()<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 编辑成功事件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onImageOutPaintingSuccess</span> = (<span class="hljs-params"><span class="hljs-attr">newPicture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;<br>  picture.<span class="hljs-property">value</span> = newPicture<br>&#125;<br><br></code></pre></td></tr></table></figure><p>图片编辑操作弹窗集成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div v-if=&quot;picture&quot; class=&quot;edit-bar&quot;&gt;<br>      &lt;a-space size=&quot;middle&quot;&gt;<br>        &lt;a-button :icon=&quot;h(EditOutlined)&quot; @click=&quot;doEditPicture&quot;&gt;编辑图片&lt;/a-button&gt;<br>        &lt;a-button type=&quot;primary&quot; ghost :icon=&quot;h(FullscreenOutlined)&quot; @click=&quot;doImagePainting&quot;&gt;<br>          AI 扩图<br>        &lt;/a-button&gt;<br>      &lt;/a-space&gt;<br>      &lt;ImageCropper<br>        ref=&quot;imageCropperRef&quot;<br>        :imageUrl=&quot;picture.url&quot;<br>        :picture=&quot;picture&quot;<br>        :spaceId=&quot;spaceId&quot;<br>        :onSuccess=&quot;onCropSuccess&quot;<br>      /&gt;<br>      &lt;ImageOutPainting<br>        ref=&quot;imageOutPaintingRef&quot;<br>        :picture=&quot;picture&quot;<br>        :spaceId=&quot;spaceId&quot;<br>        :onSuccess=&quot;onImageOutPaintingSuccess&quot;<br>      /&gt;<br>    &lt;/div&gt;<br></code></pre></td></tr></table></figure><p>测试</p><figure><img src="/img/pictureLibrary/image-20250724162615349.png"alt="image-20250724162615349" /><figcaption aria-hidden="true">image-20250724162615349</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱8-图片功能扩展</title>
    <link href="/2025/07/23/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B108/"/>
    <url>/2025/07/23/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B108/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/23 PM</p>          </div><h1 id="闲话少叙">闲话少叙</h1><p>最近在搞hexo-fluid博客，又发现了些新东西</p><p>每天加一个新功能，具体功能后续更新如何操作，等我完全搞完的</p><p>。。。。。。</p><h1 id="图片功能扩展">图片功能扩展</h1><h2 id="扩展功能介绍">扩展功能介绍</h2><p>本节主要对图片功能进行扩展，包括以下功能：</p><ul><li>图片搜索</li><li>基础属性搜索</li><li>以图搜图</li><li>颜色搜索</li><li>图片分享</li><li>链接分享</li><li>扫码分享</li><li>图片批量处理</li><li>批量更改信息</li><li>批量重命名</li></ul><h2 id="一图片搜索-基础属性搜索">一、图片搜索-基础属性搜索</h2><h3 id="需求分析">需求分析</h3><p>我们提供多种维度对图片进行搜索，这里有优先级之分，从高到低依次为</p><ul><li>关键词</li><li>标签</li><li>分类</li><li>编辑时间</li><li>图片名称</li><li>图片简介</li><li>图片宽度</li><li>图片高度</li><li>图片格式</li></ul><h3 id="方案设计">方案设计</h3><p>后端服用分页查询图片接口</p><p>前端针对于不同查询，提供不同组件</p><ul><li>关键词：文本输入框</li><li>标签：下拉选择框</li><li>分类：下拉选择框</li><li>编辑时间：日期选择器</li><li>图片名称：文本输入框</li><li>图片简介：文本输入框</li><li>图片宽度：数字输入框</li><li>图片高度：数字输入框</li><li>图片格式：文本输入框/下拉选择框</li></ul><p>日期选择器，最好能够提供预设时间</p><h3 id="后端开发">后端开发</h3><p>1）支持按照编辑时间搜索，请求类PictureQueryRequest新增开始和结束编辑字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 开始编辑时间</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Date startEditTime;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 结束编辑时间</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Date endEditTime;<br><br></code></pre></td></tr></table></figure><p>2）更新getQueryWrapper函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Date</span> <span class="hljs-variable">startEditTime</span> <span class="hljs-operator">=</span> pictureQueryRequest.getStartEditTime();<br><span class="hljs-type">Date</span> <span class="hljs-variable">endEditTime</span> <span class="hljs-operator">=</span> pictureQueryRequest.getEndEditTime();<br>queryWrapper.ge(ObjUtil.isNotEmpty(startEditTime), <span class="hljs-string">&quot;editTime&quot;</span>, startEditTime);<br>queryWrapper.lt(ObjUtil.isNotEmpty(endEditTime), <span class="hljs-string">&quot;editTime&quot;</span>, endEditTime);<br><br></code></pre></td></tr></table></figure><h3 id="前端开发">前端开发</h3><h4 id="图片搜索表单组件">1、图片搜索表单组件</h4><p>由于空间详情码量有些大，这里封装独立表单组件<code>PictureSearchForm.vue</code></p><p>1）定义组件属性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  onSearch?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">searchParams</span>: <span class="hljs-title class_">PictureQueryRequest</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br>&#125;<br><br><span class="hljs-keyword">const</span> props = defineProps&lt;<span class="hljs-title class_">Props</span>&gt;()<br><br></code></pre></td></tr></table></figure><p>2）编写搜索函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 搜索条件</span><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureQueryRequest</span>&gt;(&#123;&#125;)<br><br><span class="hljs-comment">// 获取数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  props.<span class="hljs-property">onSearch</span>?.(searchParams)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）开发页面结构</p><p>预设时间如何填写，参考<ahref="https://antdv.com/components/date-picker-cn#components-date-picker-demo-presetted-ranges">Date-presets</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;picture-search-form&quot;&gt;<br>  &lt;!-- 搜索表单 --&gt;<br>  &lt;a-form layout=&quot;inline&quot; :model=&quot;searchParams&quot; @finish=&quot;doSearch&quot;&gt;<br>    &lt;a-form-item label=&quot;关键词&quot; name=&quot;searchText&quot;&gt;<br>      &lt;a-input<br>        v-model:value=&quot;searchParams.searchText&quot;<br>        placeholder=&quot;从名称和简介搜索&quot;<br>        allow-clear<br>      /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;分类&quot; name=&quot;category&quot;&gt;<br>      &lt;a-auto-complete<br>        v-model:value=&quot;searchParams.category&quot;<br>        style=&quot;min-width: 180px&quot;<br>        :options=&quot;categoryOptions&quot;<br>        placeholder=&quot;请输入分类&quot;<br>        allowClear<br>      /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;标签&quot; name=&quot;tags&quot;&gt;<br>      &lt;a-select<br>        v-model:value=&quot;searchParams.tags&quot;<br>        style=&quot;min-width: 180px&quot;<br>        :options=&quot;tagOptions&quot;<br>        mode=&quot;tags&quot;<br>        placeholder=&quot;请输入标签&quot;<br>        allowClear<br>      /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;日期&quot; name=&quot;&quot;&gt;<br>      &lt;a-range-picker<br>        style=&quot;width: 400px&quot;<br>        show-time<br>        v-model:value=&quot;dateRange&quot;<br>        :placeholder=&quot;[&#x27;编辑开始日期&#x27;, &#x27;编辑结束时间&#x27;]&quot;<br>        format=&quot;YYYY/MM/DD HH:mm:ss&quot;<br>        :presets=&quot;rangePresets&quot;<br>        @change=&quot;onRangeChange&quot;<br>      /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;名称&quot; name=&quot;name&quot;&gt;<br>      &lt;a-input v-model:value=&quot;searchParams.name&quot; placeholder=&quot;请输入名称&quot; allow-clear /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;简介&quot; name=&quot;introduction&quot;&gt;<br>      &lt;a-input v-model:value=&quot;searchParams.introduction&quot; placeholder=&quot;请输入简介&quot; allow-clear /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;宽度&quot; name=&quot;picWidth&quot;&gt;<br>      &lt;a-input-number v-model:value=&quot;searchParams.picWidth&quot; /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;高度&quot; name=&quot;picHeight&quot;&gt;<br>      &lt;a-input-number v-model:value=&quot;searchParams.picHeight&quot; /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item label=&quot;格式&quot; name=&quot;picFormat&quot;&gt;<br>      &lt;a-input v-model:value=&quot;searchParams.picFormat&quot; placeholder=&quot;请输入格式&quot; allow-clear /&gt;<br>    &lt;/a-form-item&gt;<br>    &lt;a-form-item&gt;<br>      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 96px&quot;&gt;搜索&lt;/a-button&gt;<br>    &lt;/a-form-item&gt;<br>  &lt;/a-form&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>日期表单变量填写</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> dateRange = ref&lt;[]&gt;([])<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 日期范围更改时触发</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> <span class="hljs-variable">dates</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> <span class="hljs-variable">dateStrings</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onRangeChange</span> = (<span class="hljs-params"><span class="hljs-attr">dates</span>: <span class="hljs-built_in">any</span>[], <span class="hljs-attr">dateStrings</span>: <span class="hljs-built_in">string</span>[]</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (dates.<span class="hljs-property">length</span> &lt; <span class="hljs-number">2</span>) &#123;<br>    searchParams.<span class="hljs-property">startEditTime</span> = <span class="hljs-literal">undefined</span><br>    searchParams.<span class="hljs-property">endEditTime</span> = <span class="hljs-literal">undefined</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    searchParams.<span class="hljs-property">startEditTime</span> = dates[<span class="hljs-number">0</span>].<span class="hljs-title function_">toDate</span>()<br>    searchParams.<span class="hljs-property">endEditTime</span> = dates[<span class="hljs-number">1</span>].<span class="hljs-title function_">toDate</span>()<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> rangePresets = <span class="hljs-title function_">ref</span>([<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 7 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 14 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 30 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 90 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">90</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>])<br><br></code></pre></td></tr></table></figure><p>4）分类标签表单option填写额默认值</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> dateRange = ref&lt;[]&gt;([])<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 日期范围更改时触发</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> <span class="hljs-variable">dates</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> <span class="hljs-variable">dateStrings</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onRangeChange</span> = (<span class="hljs-params"><span class="hljs-attr">dates</span>: <span class="hljs-built_in">any</span>[], <span class="hljs-attr">dateStrings</span>: <span class="hljs-built_in">string</span>[]</span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (dates.<span class="hljs-property">length</span> &lt; <span class="hljs-number">2</span>) &#123;<br>    searchParams.<span class="hljs-property">startEditTime</span> = <span class="hljs-literal">undefined</span><br>    searchParams.<span class="hljs-property">endEditTime</span> = <span class="hljs-literal">undefined</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    searchParams.<span class="hljs-property">startEditTime</span> = dates[<span class="hljs-number">0</span>].<span class="hljs-title function_">toDate</span>()<br>    searchParams.<span class="hljs-property">endEditTime</span> = dates[<span class="hljs-number">1</span>].<span class="hljs-title function_">toDate</span>()<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> rangePresets = <span class="hljs-title function_">ref</span>([<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 7 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 14 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 30 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">30</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>  &#123; <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;过去 90 天&#x27;</span>, <span class="hljs-attr">value</span>: [<span class="hljs-title function_">dayjs</span>().<span class="hljs-title function_">add</span>(-<span class="hljs-number">90</span>, <span class="hljs-string">&#x27;d&#x27;</span>), <span class="hljs-title function_">dayjs</span>()] &#125;,<br>])<br><br></code></pre></td></tr></table></figure><p>5）空间详情页插入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索表单 --&gt;<br>&lt;PictureSearchForm /&gt;<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721163642983.png"alt="image-20250721163642983" /><figcaption aria-hidden="true">image-20250721163642983</figcaption></figure><p>添加css样式，增加边距</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">.picture-<span class="hljs-keyword">search</span>-<span class="hljs-keyword">form</span> .ant-<span class="hljs-keyword">form</span>-item &#123;<br>  margin-top: 16px;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>6）添加重置按钮，方便一键清空数据</p><p>页面代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-form-item&gt;<br>  &lt;a-space&gt;<br>    &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 96px&quot;&gt;搜索&lt;/a-button&gt;<br>    &lt;a-button html-type=&quot;reset&quot; @click=&quot;doClear&quot;&gt;重置&lt;/a-button&gt;<br>  &lt;/a-space&gt;<br>&lt;/a-form-item&gt;<br><br></code></pre></td></tr></table></figure><p>编写doClear函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 清理</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doClear</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 取消所有对象的值</span><br>  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(searchParams).<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;<br>    searchParams[key] = <span class="hljs-literal">undefined</span><br>  &#125;)<br>  dateRange.<span class="hljs-property">value</span> = []<br>  props.<span class="hljs-property">onSearch</span>?.(searchParams)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721164232043.png"alt="image-20250721164232043" /><figcaption aria-hidden="true">image-20250721164232043</figcaption></figure><h4 id="执行搜索">2、执行搜索</h4><p>1）给组件传递搜索函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 搜索表单 --&gt;<br>&lt;PictureSearchForm :onSearch=&quot;onSearch&quot; /&gt;<br><br></code></pre></td></tr></table></figure><p>2）编写搜索函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 搜索条件</span><br><span class="hljs-keyword">const</span> searchParams = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureQueryRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">12</span>,<br>  <span class="hljs-attr">sortField</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&#x27;descend&#x27;</span>,<br>&#125;)<br><br><span class="hljs-comment">// 分页参数</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onPageChange</span> = (<span class="hljs-params">page, pageSize</span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">value</span>.<span class="hljs-property">current</span> = page<br>  searchParams.<span class="hljs-property">value</span>.<span class="hljs-property">pageSize</span> = pageSize<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><span class="hljs-comment">// 搜索</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSearch</span> = (<span class="hljs-params"><span class="hljs-attr">newSearchParams</span>: API.<span class="hljs-title class_">PictureQueryRequest</span></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">value</span> = &#123;<br>    ...searchParams.<span class="hljs-property">value</span>,<br>    ...newSearchParams,<br>    <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  &#125;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><span class="hljs-comment">// 获取数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-comment">// 转换搜索参数</span><br>  <span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">id</span>,<br>    ...searchParams.<span class="hljs-property">value</span>,<br>  &#125;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureVoByPageUsingPost</span>(params)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []<br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试</p><figure><img src="/img/pictureLibrary/image-20250721165703259.png"alt="image-20250721165703259" /><figcaption aria-hidden="true">image-20250721165703259</figcaption></figure><h2 id="二图片搜索-以图搜图">二、图片搜索-以图搜图</h2><h3 id="需求分析-1">需求分析</h3><p>用户可以上传一张图片，去全网搜索类似的图片</p><p>该功能不仅限在私有空间，公共图库也可以使用</p><h3 id="方案设计-1">方案设计</h3><p>这里考虑两种方法：第三方API、爬虫</p><h4 id="第三方api">1、第三方API</h4><p>百度提供的三方API</p><p>Bing以图搜图API</p><h4 id="爬虫">2、爬虫</h4><p>利用已经存在的以图搜图网站，数据抓取查询搜图返回的结果</p><p>这里我们选择这种方法</p><p>1）根据URL上传图片，发现接口<code>https://graph.baidu.com/upload?uptime</code></p><figure><img src="/img/pictureLibrary/image-20250721170738123.png"alt="image-20250721170738123" /><figcaption aria-hidden="true">image-20250721170738123</figcaption></figure><p>访问接口，前段时间来说是可以访问通过URL获取所有缩略图片的网址，但是现在获取文件请求无法使用，需要我们指定请求头，代码部分会讲解</p><h3 id="后端开发-1">后端开发</h3><p>新建api包，用于存放各种api，这里图片搜索相关api放在<code>api/imagesearch</code>包下</p><h4 id="数据模型开发">1、数据模型开发</h4><p>新建图片搜索结果返回类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ImageSearchResult</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 缩略图地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String thumbUrl;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 来源地址</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String fromUrl;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="api开发">2、API开发</h4><p>这里调用的API比较多，统一防止在imagesearch.sub包下，每一个类包含main函数作为静态类使用</p><p>1）获取以图搜图地址</p><p>向百度图库发送POST请求，获取给定图片URL的相似图片地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetImagePageUrlApi</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取图片页面地址</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> imageUrl</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getImagePageUrl</span><span class="hljs-params">(String imageUrl)</span> &#123;<br>        <span class="hljs-comment">// 1. 准备请求参数</span><br>        Map&lt;String, Object&gt; formData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        formData.put(<span class="hljs-string">&quot;image&quot;</span>, imageUrl);<br>        formData.put(<span class="hljs-string">&quot;tn&quot;</span>, <span class="hljs-string">&quot;pc&quot;</span>);<br>        formData.put(<span class="hljs-string">&quot;from&quot;</span>, <span class="hljs-string">&quot;pc&quot;</span>);<br>        formData.put(<span class="hljs-string">&quot;image_source&quot;</span>, <span class="hljs-string">&quot;PC_UPLOAD_URL&quot;</span>);<br>        <span class="hljs-comment">// 获取当前时间戳</span><br>        <span class="hljs-type">long</span> <span class="hljs-variable">uptime</span> <span class="hljs-operator">=</span> System.currentTimeMillis();<br>        <span class="hljs-comment">// 请求地址</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://graph.baidu.com/upload?uptime=&quot;</span> + uptime;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 2. 发送 POST 请求到百度接口</span><br>            <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> HttpRequest.post(url)<br>                    .form(formData)<br>                    .timeout(<span class="hljs-number">5000</span>)<br>                    .execute();<br>            <span class="hljs-comment">// 判断响应状态</span><br>            <span class="hljs-keyword">if</span> (HttpStatus.HTTP_OK != response.getStatus()) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;接口调用失败&quot;</span>);<br>            &#125;<br>            <span class="hljs-comment">// 解析响应</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">responseBody</span> <span class="hljs-operator">=</span> response.body();<br>            Map&lt;String, Object&gt; result = JSONUtil.toBean(responseBody, Map.class);<br><br>            <span class="hljs-comment">// 3. 处理响应结果</span><br>            <span class="hljs-keyword">if</span> (result == <span class="hljs-literal">null</span> || !Integer.valueOf(<span class="hljs-number">0</span>).equals(result.get(<span class="hljs-string">&quot;status&quot;</span>))) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;接口调用失败&quot;</span>);<br>            &#125;<br>            Map&lt;String, Object&gt; data = (Map&lt;String, Object&gt;) result.get(<span class="hljs-string">&quot;data&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">rawUrl</span> <span class="hljs-operator">=</span> (String) data.get(<span class="hljs-string">&quot;url&quot;</span>);<br>            <span class="hljs-comment">// 对 URL 进行解码</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">searchResultUrl</span> <span class="hljs-operator">=</span> URLUtil.decode(rawUrl, StandardCharsets.UTF_8);<br>            <span class="hljs-comment">// 如果 URL 为空</span><br>            <span class="hljs-keyword">if</span> (searchResultUrl == <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;未返回有效结果&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> searchResultUrl;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;搜索失败&quot;</span>, e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;搜索失败&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 测试以图搜图功能</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">imageUrl</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://www.codefather.cn/logo.png&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> getImagePageUrl(imageUrl);<br>        System.out.println(<span class="hljs-string">&quot;搜索成功，结果 URL：&quot;</span> + result);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）获取图片列表地址</p><p>jsoup爬取HTML页面，提取包含firstUrl的JS脚本，并返回图片列表页面地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetImageFirstUrlApi</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取图片列表页面地址</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> url</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getImageFirstUrl</span><span class="hljs-params">(String url)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 使用 Jsoup 获取 HTML 内容</span><br>            <span class="hljs-type">Document</span> <span class="hljs-variable">document</span> <span class="hljs-operator">=</span> Jsoup.connect(url)<br>                    .timeout(<span class="hljs-number">5000</span>)<br>                    .get();<br><br>            <span class="hljs-comment">// 获取所有 &lt;script&gt; 标签</span><br>            <span class="hljs-type">Elements</span> <span class="hljs-variable">scriptElements</span> <span class="hljs-operator">=</span> document.getElementsByTag(<span class="hljs-string">&quot;script&quot;</span>);<br><br>            <span class="hljs-comment">// 遍历找到包含 `firstUrl` 的脚本内容</span><br>            <span class="hljs-keyword">for</span> (Element script : scriptElements) &#123;<br>                <span class="hljs-type">String</span> <span class="hljs-variable">scriptContent</span> <span class="hljs-operator">=</span> script.html();<br>                <span class="hljs-keyword">if</span> (scriptContent.contains(<span class="hljs-string">&quot;\&quot;firstUrl\&quot;&quot;</span>)) &#123;<br>                    <span class="hljs-comment">// 正则表达式提取 firstUrl 的值</span><br>                    <span class="hljs-type">Pattern</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> Pattern.compile(<span class="hljs-string">&quot;\&quot;firstUrl\&quot;\\s*:\\s*\&quot;(.*?)\&quot;&quot;</span>);<br>                    <span class="hljs-type">Matcher</span> <span class="hljs-variable">matcher</span> <span class="hljs-operator">=</span> pattern.matcher(scriptContent);<br>                    <span class="hljs-keyword">if</span> (matcher.find()) &#123;<br>                        <span class="hljs-type">String</span> <span class="hljs-variable">firstUrl</span> <span class="hljs-operator">=</span> matcher.group(<span class="hljs-number">1</span>);<br>                        <span class="hljs-comment">// 处理转义字符</span><br>                        firstUrl = firstUrl.replace(<span class="hljs-string">&quot;\\/&quot;</span>, <span class="hljs-string">&quot;/&quot;</span>);<br>                        <span class="hljs-keyword">return</span> firstUrl;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;未找到 url&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;搜索失败&quot;</span>, e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;搜索失败&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 请求目标 URL</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://graph.baidu.com/s?card_key=&amp;entrance=GENERAL&amp;extUiData[isLogoShow]=1&amp;f=all&amp;isLogoShow=1&amp;session_id=16250747570487381669&amp;sign=1265ce97cd54acd88139901733452612&amp;tpl_from=pc&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">imageFirstUrl</span> <span class="hljs-operator">=</span> getImageFirstUrl(url);<br>        System.out.println(<span class="hljs-string">&quot;搜索成功，结果 URL：&quot;</span> + imageFirstUrl);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）获取图片列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetImageListApi</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取图片列表</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> url</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;ImageSearchResult&gt; <span class="hljs-title function_">getImageList</span><span class="hljs-params">(String url)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 发起GET请求</span><br>            <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> HttpUtil.createGet(url).execute();<br><br>            <span class="hljs-comment">// 获取响应内容</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">statusCode</span> <span class="hljs-operator">=</span> response.getStatus();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> response.body();<br><br>            <span class="hljs-comment">// 处理响应</span><br>            <span class="hljs-keyword">if</span> (statusCode == <span class="hljs-number">200</span>) &#123;<br>                <span class="hljs-comment">// 解析 JSON 数据并处理</span><br>                <span class="hljs-keyword">return</span> processResponse(body);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;接口调用失败&quot;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;获取图片列表失败&quot;</span>, e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;获取图片列表失败&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 处理接口响应内容</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> responseBody 接口返回的JSON字符串</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> List&lt;ImageSearchResult&gt; <span class="hljs-title function_">processResponse</span><span class="hljs-params">(String responseBody)</span> &#123;<br>        <span class="hljs-comment">// 解析响应对象</span><br>        <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>(responseBody);<br>        <span class="hljs-keyword">if</span> (!jsonObject.containsKey(<span class="hljs-string">&quot;data&quot;</span>)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;未获取到图片列表&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">JSONObject</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> jsonObject.getJSONObject(<span class="hljs-string">&quot;data&quot;</span>);<br>        <span class="hljs-keyword">if</span> (!data.containsKey(<span class="hljs-string">&quot;list&quot;</span>)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;未获取到图片列表&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">JSONArray</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> data.getJSONArray(<span class="hljs-string">&quot;list&quot;</span>);<br>        <span class="hljs-keyword">return</span> JSONUtil.toList(list, ImageSearchResult.class);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://graph.baidu.com/ajax/pcsimi?carousel=503&amp;entrance=GENERAL&amp;extUiData%5BisLogoShow%5D=1&amp;inspire=general_pc&amp;limit=30&amp;next=2&amp;render_type=card&amp;session_id=16250747570487381669&amp;sign=1265ce97cd54acd88139901733452612&amp;tk=4caaa&amp;tpl_from=pc&quot;</span>;<br>        List&lt;ImageSearchResult&gt; imageList = getImageList(url);<br>        System.out.println(<span class="hljs-string">&quot;搜索成功&quot;</span> + imageList);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="图片搜索服务">3、图片搜索服务</h4><p>整合先前编写的API到一个门面类中，在imagesearch包下新建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ImageSearchApiFacade</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 搜索图片</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> imageUrl</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;ImageSearchResult&gt; <span class="hljs-title function_">searchImage</span><span class="hljs-params">(String imageUrl)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">imagePageUrl</span> <span class="hljs-operator">=</span> GetImagePageUrlApi.getImagePageUrl(imageUrl);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">imageFirstUrl</span> <span class="hljs-operator">=</span> GetImageFirstUrlApi.getImageFirstUrl(imagePageUrl);<br>        List&lt;ImageSearchResult&gt; imageList = GetImageListApi.getImageList(imageFirstUrl);<br>        <span class="hljs-keyword">return</span> imageList;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 测试以图搜图功能</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">imageUrl</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://www.codefather.cn/logo.png&quot;</span>;<br>        List&lt;ImageSearchResult&gt; resultList = searchImage(imageUrl);<br>        System.out.println(<span class="hljs-string">&quot;结果列表&quot;</span> + resultList);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="接口开发">4、接口开发</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SearchPictureByPictureRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long pictureId;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>开发接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 以图搜图</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@PostMapping(&quot;/search/picture&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;ImageSearchResult&gt;&gt; <span class="hljs-title function_">searchPictureByPicture</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SearchPictureByPictureRequest searchPictureByPictureRequest)</span> &#123;<br>    ThrowUtils.throwIf(searchPictureByPictureRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">pictureId</span> <span class="hljs-operator">=</span> searchPictureByPictureRequest.getPictureId();<br>    ThrowUtils.throwIf(pictureId == <span class="hljs-literal">null</span> || pictureId &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> pictureService.getById(pictureId);<br>    ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br>    List&lt;ImageSearchResult&gt; resultList = ImageSearchApiFacade.searchImage(oldPicture.getUrl());<br>    <span class="hljs-keyword">return</span> ResultUtils.success(resultList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="前端开发-1">前端开发</h3><h4 id="搜索入口">1、搜索入口</h4><p>1）修改图片列表，添加搜索按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template v-if=&quot;showOp&quot; #actions&gt;<br>  &lt;a-space @click=&quot;(e) =&gt; doSearch(picture, e)&quot;&gt;<br>    &lt;search-outlined /&gt;<br>    搜索<br>  &lt;/a-space&gt;<br>  &lt;a-space @click=&quot;(e) =&gt; doEdit(picture, e)&quot;&gt;<br>    &lt;edit-outlined /&gt;<br>    编辑<br>  &lt;/a-space&gt;<br>  &lt;a-space @click=&quot;(e) =&gt; doDelete(picture, e)&quot;&gt;<br>    &lt;delete-outlined /&gt;<br>    删除<br>  &lt;/a-space&gt;<br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721181832864.png"alt="image-20250721181832864" /><figcaption aria-hidden="true">image-20250721181832864</figcaption></figure><p>2）编写搜索按钮逻辑，点击搜索后进入新页面，进入到以图搜图结果页面</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 搜索</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params">picture, e</span>) =&gt; &#123;<br>  e.<span class="hljs-title function_">stopPropagation</span>()<br>  <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">open</span>(<span class="hljs-string">`/search_picture?pictureId=<span class="hljs-subst">$&#123;picture.id&#125;</span>`</span>)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="以图搜图">2、以图搜图</h4><p>1）编写搜索界面文件<code>SearchPicturePage</code>，复制创建图片页面</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/search_picture&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片搜索&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">SearchPicturePage</span>,<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发页面，上方展示原始图片标题和图片，下方展示搜索结果标题和图片列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;searchPicturePage&quot;&gt;<br>    &lt;h2 style=&quot;margin-bottom: 16px&quot;&gt;以图搜图&lt;/h2&gt;<br>    &lt;h3 style=&quot;margin: 16px 0&quot;&gt;原图&lt;/h3&gt;<br>    &lt;a-card style=&quot;width: 240px&quot;&gt;<br>      &lt;template #cover&gt;<br>        &lt;img<br>          style=&quot;height: 180px; object-fit: cover&quot;<br>          :alt=&quot;picture.name&quot;<br>          :src=&quot;picture.thumbnailUrl ?? picture.url&quot;<br>        /&gt;<br>      &lt;/template&gt;<br>    &lt;/a-card&gt;<br>    &lt;h3 style=&quot;margin: 16px 0&quot;&gt;识图结果&lt;/h3&gt;<br>    &lt;!-- 图片列表 --&gt;<br>    &lt;a-list<br>      :grid=&quot;&#123; gutter: 16, xs: 1, sm: 2, md: 3, lg: 4, xl: 5, xxl: 6 &#125;&quot;<br>      :data-source=&quot;dataList&quot;<br>    &gt;<br>      &lt;template #renderItem=&quot;&#123; item &#125;&quot;&gt;<br>        &lt;a-list-item style=&quot;padding: 0&quot;&gt;<br>          &lt;a :href=&quot;item.fromUrl&quot; target=&quot;_blank&quot;&gt;<br>            &lt;a-card&gt;<br>              &lt;template #cover&gt;<br>                &lt;img style=&quot;height: 180px; object-fit: cover&quot; :src=&quot;item.thumbUrl&quot; /&gt;<br>              &lt;/template&gt;<br>            &lt;/a-card&gt;<br>          &lt;/a&gt;<br>        &lt;/a-list-item&gt;<br>      &lt;/template&gt;<br>    &lt;/a-list&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; computed, onMounted, ref &#125; from &#x27;vue&#x27;<br>import &#123; useRoute &#125; from &#x27;vue-router&#x27;<br>import &#123; getPictureVoByIdUsingGet, searchPictureByPictureUsingPost &#125; from &#x27;@/api/pictureController&#x27;<br>import &#123; message &#125; from &#x27;ant-design-vue&#x27;<br><br>const route = useRoute()<br><br>// 图片 id<br>const pictureId = computed(() =&gt; &#123;<br>  return route.query?.pictureId<br>&#125;)<br><br>const picture = ref&lt;API.PictureVO&gt;(&#123;&#125;)<br><br>// 获取老数据<br>const getOldPicture = async () =&gt; &#123;<br>  // 获取数据<br>  const id = route.query?.pictureId<br>  if (id) &#123;<br>    const res = await getPictureVoByIdUsingGet(&#123;<br>      id: id,<br>    &#125;)<br>    if (res.data.code === 0 &amp;&amp; res.data.data) &#123;<br>      const data = res.data.data<br>      picture.value = data<br>    &#125;<br>  &#125;<br>&#125;<br><br>onMounted(() =&gt; &#123;<br>  getOldPicture()<br>&#125;)<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>3）调用后端获取搜索图片列表接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> dataList = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">ImageSearchResult</span>[]&gt;([])<br><span class="hljs-comment">// 获取搜图结果</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">searchPictureByPictureUsingPost</span>(&#123;<br>    <span class="hljs-attr">pictureId</span>: pictureId.<span class="hljs-property">value</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? []<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 页面加载时请求一次</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721184406664.png"alt="image-20250721184406664" /><figcaption aria-hidden="true">image-20250721184406664</figcaption></figure><p>注意：如果上传的是webp格式的图片，会出现搜索结果为空的情况，这是因为百度搜索对于webp不支持</p><p>可以修改<code>/search/picture</code>接口，校验oldPicture后缀格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> oldPicture.getUrl();<br><span class="hljs-keyword">if</span>(!url.toLowerCase().endsWith(<span class="hljs-string">&quot;.jpg&quot;</span>) &amp;&amp; !url.toLowerCase().endsWith(<span class="hljs-string">&quot;.png&quot;</span>)) &#123;<br>url += <span class="hljs-string">&quot;?imageMogr2/format/png&quot;</span>;<br>&#125;<br>List&lt;ImageSearchResult&gt; resultList = ImageSearchApiFacade.searchImage(url);<br></code></pre></td></tr></table></figure><h2 id="三图片搜索-颜色搜索">三、图片搜索-颜色搜索</h2><h3 id="需求分析-2">需求分析</h3><p>能够按照图片颜色搜索主色调最相似的图片</p><p>参考bing</p><figure><img src="/img/pictureLibrary/image-20250721185410642.png"alt="image-20250721185410642" /><figcaption aria-hidden="true">image-20250721185410642</figcaption></figure><h3 id="方案设计-2">方案设计</h3><ul><li><p>整体流程</p></li><li><p>如何获取主色调</p></li><li><p>如何设计搜索算法</p></li></ul><h4 id="整体流程">1、整体流程</h4><p>整体流程大致如下</p><p>1）提取图片颜色</p><p>2）存储颜色到数据库</p><p>3）用户输入查询条件</p><p>4）计算两者相似度</p><p>5）返回结果并进行排序</p><h4 id="如何获取主色调">2、如何获取主色调</h4><p>COS 整合到数据万象自带提取主色调功能</p><figure><img src="/img/pictureLibrary/image-20250721185752762.png"alt="image-20250721185752762" /><figcaption aria-hidden="true">image-20250721185752762</figcaption></figure><h4 id="如何计算颜色相似度">3、如何计算颜色相似度</h4><p>数据库中不支持颜色比拟像like这种，需要我们自己制定算法</p><p>这里使用<strong>欧几里得距离算法</strong>，因为颜色可以使用RGB表示，这里通过该算法判断相似度</p><p>颜色距离公式为 <span class="math inline">\(d = \sqrt{(R_2 - R_1)^2 +(G_2 - G_1)^2 + (B_2 - B_1)^2}\)</span>。</p><ul><li>R1、G1、B1：第一个颜色的RGB分量</li><li>R2、G2、B2：第二个颜色的RGB分量</li><li>d：两个颜色之间的欧几里得距离</li></ul><p>距离越小相似度越高</p><h3 id="后端开发-2">后端开发</h3><h4 id="补充图片字段">1、补充图片字段</h4><p>1）图片表新增字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> picture<br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> picColor <span class="hljs-type">varchar</span>(<span class="hljs-number">16</span>) <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片主色调&#x27;</span>;<br><br></code></pre></td></tr></table></figure><p>2）修改PictureMapper.xml、Picture实体类、PictureVO包装类、UploadPictureResult</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 图片主色调</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> String picColor;<br><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;picColor&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;picColor&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h4 id="存储图片">2、存储图片</h4><p>1）修改PictureUploadTemplate的buildResult方法，通过imageInfo提取主色调</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">uploadPictureResult.setPicColor(imageInfo.getAve());<br></code></pre></td></tr></table></figure><p>还有一个需要补充imageInfo参数</p><p>获取到的值为十六进制</p><p>2）图片服务的uploadPicture方法中补充设置图片颜色操作</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">picture</span><span class="hljs-selector-class">.setPicColor</span>(uploadPictureResult.<span class="hljs-built_in">getPicColor</span>());<br><br></code></pre></td></tr></table></figure><h4 id="颜色相似度计算">3、颜色相似度计算</h4><p>新建util包，AI编写工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 工具类：计算颜色相似度</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ColorSimilarUtils</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">ColorSimilarUtils</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 工具类不需要实例化</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 计算两个颜色的相似度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> color1 第一个颜色</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> color2 第二个颜色</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 相似度（0到1之间，1为完全相同）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">calculateSimilarity</span><span class="hljs-params">(Color color1, Color color2)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">r1</span> <span class="hljs-operator">=</span> color1.getRed();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">g1</span> <span class="hljs-operator">=</span> color1.getGreen();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">b1</span> <span class="hljs-operator">=</span> color1.getBlue();<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">r2</span> <span class="hljs-operator">=</span> color2.getRed();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">g2</span> <span class="hljs-operator">=</span> color2.getGreen();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">b2</span> <span class="hljs-operator">=</span> color2.getBlue();<br><br>        <span class="hljs-comment">// 计算欧氏距离</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">distance</span> <span class="hljs-operator">=</span> Math.sqrt(Math.pow(r1 - r2, <span class="hljs-number">2</span>) + Math.pow(g1 - g2, <span class="hljs-number">2</span>) + Math.pow(b1 - b2, <span class="hljs-number">2</span>));<br><br>        <span class="hljs-comment">// 计算相似度</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> - distance / Math.sqrt(<span class="hljs-number">3</span> * Math.pow(<span class="hljs-number">255</span>, <span class="hljs-number">2</span>));<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据十六进制颜色代码计算相似度</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> hexColor1 第一个颜色的十六进制代码（如 0xFF0000）</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> hexColor2 第二个颜色的十六进制代码（如 0xFE0101）</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 相似度（0到1之间，1为完全相同）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">calculateSimilarity</span><span class="hljs-params">(String hexColor1, String hexColor2)</span> &#123;<br>        <span class="hljs-type">Color</span> <span class="hljs-variable">color1</span> <span class="hljs-operator">=</span> Color.decode(hexColor1);<br>        <span class="hljs-type">Color</span> <span class="hljs-variable">color2</span> <span class="hljs-operator">=</span> Color.decode(hexColor2);<br>        <span class="hljs-keyword">return</span> calculateSimilarity(color1, color2);<br>    &#125;<br><br>    <span class="hljs-comment">// 示例代码</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">// 测试颜色</span><br>        <span class="hljs-type">Color</span> <span class="hljs-variable">color1</span> <span class="hljs-operator">=</span> Color.decode(<span class="hljs-string">&quot;0xFF0000&quot;</span>);<br>        <span class="hljs-type">Color</span> <span class="hljs-variable">color2</span> <span class="hljs-operator">=</span> Color.decode(<span class="hljs-string">&quot;0xFE0101&quot;</span>);<br>        <span class="hljs-type">double</span> <span class="hljs-variable">similarity</span> <span class="hljs-operator">=</span> calculateSimilarity(color1, color2);<br><br>        System.out.println(<span class="hljs-string">&quot;颜色相似度为：&quot;</span> + similarity);<br><br>        <span class="hljs-comment">// 测试十六进制方法</span><br>        <span class="hljs-type">double</span> <span class="hljs-variable">hexSimilarity</span> <span class="hljs-operator">=</span> calculateSimilarity(<span class="hljs-string">&quot;0xFF0000&quot;</span>, <span class="hljs-string">&quot;0xFE0101&quot;</span>);<br>        System.out.println(<span class="hljs-string">&quot;十六进制颜色相似度为：&quot;</span> + hexSimilarity);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="颜色查询服务">4、颜色查询服务</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;PictureVO&gt; <span class="hljs-title function_">searchPictureByColor</span><span class="hljs-params">(Long spaceId, String picColor, User loginUser)</span> &#123;<br>    <span class="hljs-comment">// 1. 校验参数</span><br>    ThrowUtils.throwIf(spaceId == <span class="hljs-literal">null</span> || StrUtil.isBlank(picColor), ErrorCode.PARAMS_ERROR);<br>    ThrowUtils.throwIf(loginUser == <span class="hljs-literal">null</span>, ErrorCode.NO_AUTH_ERROR);<br>    <span class="hljs-comment">// 2. 校验空间权限</span><br>    <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>    ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!loginUser.getId().equals(space.getUserId())) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;没有空间访问权限&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 3. 查询该空间下所有图片（必须有主色调）</span><br>    List&lt;Picture&gt; pictureList = <span class="hljs-built_in">this</span>.lambdaQuery()<br>            .eq(Picture::getSpaceId, spaceId)<br>            .isNotNull(Picture::getPicColor)<br>            .list();<br>    <span class="hljs-comment">// 如果没有图片，直接返回空列表</span><br>    <span class="hljs-keyword">if</span> (CollUtil.isEmpty(pictureList)) &#123;<br>        <span class="hljs-keyword">return</span> Collections.emptyList();<br>    &#125;<br>    <span class="hljs-comment">// 将目标颜色转为 Color 对象</span><br>    <span class="hljs-type">Color</span> <span class="hljs-variable">targetColor</span> <span class="hljs-operator">=</span> Color.decode(picColor);<br>    <span class="hljs-comment">// 4. 计算相似度并排序</span><br>    List&lt;Picture&gt; sortedPictures = pictureList.stream()<br>            .sorted(Comparator.comparingDouble(picture -&gt; &#123;<br>                <span class="hljs-comment">// 提取图片主色调</span><br>                <span class="hljs-type">String</span> <span class="hljs-variable">hexColor</span> <span class="hljs-operator">=</span> picture.getPicColor();<br>                <span class="hljs-comment">// 没有主色调的图片放到最后</span><br>                <span class="hljs-keyword">if</span> (StrUtil.isBlank(hexColor)) &#123;<br>                    <span class="hljs-keyword">return</span> Double.MAX_VALUE;<br>                &#125;<br>                <span class="hljs-type">Color</span> <span class="hljs-variable">pictureColor</span> <span class="hljs-operator">=</span> Color.decode(hexColor);<br>                <span class="hljs-comment">// 越大越相似</span><br>                <span class="hljs-keyword">return</span> -ColorSimilarUtils.calculateSimilarity(targetColor, pictureColor);<br>            &#125;))<br>            <span class="hljs-comment">// 取前 12 个</span><br>            .limit(<span class="hljs-number">12</span>)<br>            .collect(Collectors.toList());<br><br>    <span class="hljs-comment">// 转换为 PictureVO</span><br>    <span class="hljs-keyword">return</span> sortedPictures.stream()<br>            .map(PictureVO::objToVo)<br>            .collect(Collectors.toList());<br>&#125;<br><br></code></pre></td></tr></table></figure><p>上述代码主要逻辑</p><ul><li>根据目标图片的Color对象进行比较，取靠前相似的</li><li>最终利用PictureVO自带的对象转换方法转换</li></ul><h4 id="接口开发-1">5、接口开发</h4><p>1）请求封装类SearchPictureByColorRequest，传入空间ID和色调</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SearchPictureByColorRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片主色调</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String picColor;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long spaceId;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）接口开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/search/color&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;PictureVO&gt;&gt; <span class="hljs-title function_">searchPictureByColor</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SearchPictureByColorRequest searchPictureByColorRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(searchPictureByColorRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">picColor</span> <span class="hljs-operator">=</span> searchPictureByColorRequest.getPicColor();<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> searchPictureByColorRequest.getSpaceId();<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    List&lt;PictureVO&gt; result = pictureService.searchPictureByColor(spaceId, picColor, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(result);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="前端开发-2">前端开发</h3><h4 id="颜色搜索">1、颜色搜索</h4><p>1）安装颜色选择器组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install vue3-colorpicker<br></code></pre></td></tr></table></figure><p>2）空间详情页新增颜色搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 按颜色搜索 --&gt;<br>&lt;a-form-item label=&quot;按颜色搜索&quot; style=&quot;margin-top: 16px&quot;&gt;<br>  &lt;color-picker format=&quot;hex&quot; @pureColorChange=&quot;onColorChange&quot; /&gt;<br>&lt;/a-form-item&gt;<br><br></code></pre></td></tr></table></figure><p>因为是根据十六进制搜索的，format设置为hex</p><p>3）编写颜色切换函数<code>onColorChange</code>，切换颜色调用</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">onColorChange</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">color</span>: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">searchPictureByColorUsingPost</span>(&#123;<br>    <span class="hljs-attr">picColor</span>: color,<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">id</span>,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-keyword">const</span> data = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span> ?? [];<br>    dataList.<span class="hljs-property">value</span> = data;<br>    total.<span class="hljs-property">value</span> = data.<span class="hljs-property">length</span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721210653875.png"alt="image-20250721210653875" /><figcaption aria-hidden="true">image-20250721210653875</figcaption></figure><h4 id="展示图片主色调">2、展示图片主色调</h4><p>图片详情页补充颜色主色调展示</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-descriptions-item label=<span class="hljs-string">&quot;主色调&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-space</span>&gt;</span></span><br><span class="language-xml">    &#123;&#123; picture.picColor ?? &#x27;-&#x27; &#125;&#125;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;picture.picColor&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">        backgroundColor: toHexColor(picture.picColor),</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">        width: &#x27;16px&#x27;,</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">        height: &#x27;16px&#x27;,</span></span></span><br><span class="hljs-string"><span class="hljs-tag"><span class="language-xml">      &#125;&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-space</span>&gt;</span></span><br>&lt;/a-descriptions-item&gt;<br><br></code></pre></td></tr></table></figure><p>由于后端计算出来的色值是不标准的，这里统一转化为16进制色值</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">toHexColor</span>(<span class="hljs-params">input</span>) &#123;<br>  <span class="hljs-comment">// 去掉 0x 前缀</span><br>  <span class="hljs-keyword">const</span> colorValue = input.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;0x&#x27;</span>) ? input.<span class="hljs-title function_">slice</span>(<span class="hljs-number">2</span>) : input<br><br>  <span class="hljs-comment">// 将剩余部分解析为十六进制数，再转成 6 位十六进制字符串</span><br>  <span class="hljs-keyword">const</span> hexColor = <span class="hljs-built_in">parseInt</span>(colorValue, <span class="hljs-number">16</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">padStart</span>(<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;0&#x27;</span>)<br><br>  <span class="hljs-comment">// 返回标准 #RRGGBB 格式</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-string">`#<span class="hljs-subst">$&#123;hexColor&#125;</span>`</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>由于老图片没有picColor字段，需要新创建图片</p><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721211445916.png"alt="image-20250721211445916" /><figcaption aria-hidden="true">image-20250721211445916</figcaption></figure><h2 id="四图片分享">四、图片分享</h2><h3 id="需求分析-3">需求分析</h3><p>为了增加网站用户群体数量，我们需要添加分享功能，引导更多的用户点击</p><p>这里主要使用扫码分享和复制链接分享</p><h3 id="方案设计-3">方案设计</h3><h4 id="通用分享组件">1、通用分享组件</h4><p>由于网站多处需要出发分享功能，这里独立出来一个组件</p><h4 id="分享入口">2、分享入口</h4><p>主要分布于图片详情或者用户个人空间卡片操作栏等</p><h4 id="复制链接分享">3、复制链接分享</h4><p>使用AntDesign复制文本组件</p><h4 id="移动端扫码">4、移动端扫码</h4><p>使用组件库qrcode组件，将链接转化为二维码</p><h3 id="前端开发-3">前端开发</h3><h4 id="弹窗分享组件">1、弹窗分享组件</h4><p>1）新增组件ShareModal，参考<ahref="https://antdv.com/components/modal-cn">Modal组件</a>，支持父组件传入标题和链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;a-modal v-model:visible=&quot;visible&quot; title=&quot;分享图片&quot; :footer=&quot;false&quot; @cancel=&quot;closeModal&quot;&gt;<br>    &lt;h4&gt;复制分享链接&lt;/h4&gt;<br>    &lt;a-typography-link copyable&gt;<br>      &#123;&#123; link &#125;&#125;<br>    &lt;/a-typography-link&gt;<br>    &lt;div style=&quot;margin-bottom: 16px&quot; /&gt;<br>    &lt;h4&gt;手机扫码查看&lt;/h4&gt;<br>    &lt;a-qrcode :value=&quot;link&quot; /&gt;<br>  &lt;/a-modal&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; defineProps, ref, withDefaults, defineExpose &#125; from &#x27;vue&#x27;<br><br>/**<br> * 定义组件属性类型<br> */<br>interface Props &#123;<br>  title: string<br>  link: string<br>&#125;<br><br>/**<br> * 给组件指定初始值<br> */<br>const props = withDefaults(defineProps&lt;Props&gt;(), &#123;<br>  title: () =&gt; &#x27;分享&#x27;,<br>  link: () =&gt; &#x27;https://laoyujianli.com/share/yupi&#x27;,<br>&#125;)<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>2）定义所需变量，以及弹窗开闭函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 是否可见</span><br><span class="hljs-keyword">const</span> visible = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)<br><br><span class="hljs-comment">// 打开弹窗</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">openModal</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  visible.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>&#125;<br><br><span class="hljs-comment">// 关闭弹窗</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">closeModal</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  visible.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）暴露openModal函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; defineExpose &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><br><span class="hljs-comment">// 暴露函数给父组件</span><br><span class="hljs-title function_">defineExpose</span>(&#123;<br>  openModal,<br>&#125;);<br><br></code></pre></td></tr></table></figure><h4 id="图片列表使用组件">2、图片列表使用组件</h4><p>1）图片列表组件引入ShareModal，图片列表外引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;ShareModal ref=&quot;shareModalRef&quot; :link=&quot;shareLink&quot; /&gt;<br></code></pre></td></tr></table></figure><p>2）添加分享操作卡片</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;template v-<span class="hljs-keyword">if</span>=<span class="hljs-string">&quot;showOp&quot;</span> #actions&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">search-outlined</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;(e) =&gt; doSearch(picture, e)&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">share-alt-outlined</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;(e) =&gt; doShare(picture, e)&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">edit-outlined</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;(e) =&gt; doEdit(picture, e)&quot;</span> /&gt;</span></span><br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">delete-outlined</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;(e) =&gt; doDelete(picture, e)&quot;</span> /&gt;</span></span><br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>3）编写分享函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 分享弹窗引用</span><br><span class="hljs-keyword">const</span> shareModalRef = <span class="hljs-title function_">ref</span>()<br><span class="hljs-comment">// 分享链接</span><br><span class="hljs-keyword">const</span> shareLink = ref&lt;<span class="hljs-built_in">string</span>&gt;()<br><br><span class="hljs-comment">// 分享</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doShare</span> = (<span class="hljs-params"><span class="hljs-attr">picture</span>: API.<span class="hljs-title class_">PictureVO</span>, <span class="hljs-attr">e</span>: <span class="hljs-title class_">Event</span></span>) =&gt; &#123;<br>  e.<span class="hljs-title function_">stopPropagation</span>()<br>  shareLink.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-variable language_">window</span>.location.protocol&#125;</span>//<span class="hljs-subst">$&#123;<span class="hljs-variable language_">window</span>.location.host&#125;</span>/picture/<span class="hljs-subst">$&#123;picture.id&#125;</span>`</span><br>  <span class="hljs-keyword">if</span> (shareModalRef.<span class="hljs-property">value</span>) &#123;<br>    shareModalRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">openModal</span>()<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721213428047.png"alt="image-20250721213428047" /><figcaption aria-hidden="true">image-20250721213428047</figcaption></figure><h4 id="图片详情页添加组件">3、图片详情页添加组件</h4><p>1）图片详情免费下载右侧添加分享按钮</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-button <span class="hljs-keyword">type</span>=<span class="hljs-string">&quot;primary&quot;</span> ghost <span class="hljs-meta">@click</span>=<span class="hljs-string">&quot;doShare&quot;</span>&gt;<br>  分享<br>  &lt;template #icon&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">share-alt-outlined</span> /&gt;</span></span><br>  &lt;/template&gt;<br>&lt;/a-button&gt;<br><br></code></pre></td></tr></table></figure><p>2）分享函数直接复制粘贴</p><p>注意：图片详情页没有父组件，不需要禁用冒泡并且picture本身就是存在的</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 分享</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doShare</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  shareLink.<span class="hljs-property">value</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;<span class="hljs-variable language_">window</span>.location.protocol&#125;</span>//<span class="hljs-subst">$&#123;<span class="hljs-variable language_">window</span>.location.host&#125;</span>/picture/<span class="hljs-subst">$&#123;picture.value.id&#125;</span>`</span><br>  <span class="hljs-keyword">if</span> (shareModalRef.<span class="hljs-property">value</span>) &#123;<br>    shareModalRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">openModal</span>()<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="五图片的批量处理">五、图片的批量处理</h2><h3 id="需求分析-4">需求分析</h3><p>用户可以对空间内的图片批量操作</p><ul><li>批量修改信息</li><li>批量重命名</li></ul><h3 id="后端开发-3">后端开发</h3><h4 id="批量修改信息">1、批量修改信息</h4><p>1）开发请求类，接收图片ID列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureEditByBatchRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片 id 列表</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;Long&gt; pictureIdList;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long spaceId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String category;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 标签</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; tags;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发批量修改图片服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">editPictureByBatch</span><span class="hljs-params">(PictureEditByBatchRequest pictureEditByBatchRequest, User loginUser)</span> &#123;<br>    List&lt;Long&gt; pictureIdList = pictureEditByBatchRequest.getPictureIdList();<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> pictureEditByBatchRequest.getSpaceId();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">category</span> <span class="hljs-operator">=</span> pictureEditByBatchRequest.getCategory();<br>    List&lt;String&gt; tags = pictureEditByBatchRequest.getTags();<br><br>    <span class="hljs-comment">// 1. 校验参数</span><br>    ThrowUtils.throwIf(spaceId == <span class="hljs-literal">null</span> || CollUtil.isEmpty(pictureIdList), ErrorCode.PARAMS_ERROR);<br>    ThrowUtils.throwIf(loginUser == <span class="hljs-literal">null</span>, ErrorCode.NO_AUTH_ERROR);<br>    <span class="hljs-comment">// 2. 校验空间权限</span><br>    <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>    ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!loginUser.getId().equals(space.getUserId())) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;没有空间访问权限&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">// 3. 查询指定图片，仅选择需要的字段</span><br>    List&lt;Picture&gt; pictureList = <span class="hljs-built_in">this</span>.lambdaQuery()<br>            .select(Picture::getId, Picture::getSpaceId)<br>            .eq(Picture::getSpaceId, spaceId)<br>            .in(Picture::getId, pictureIdList)<br>            .list();<br><br>    <span class="hljs-keyword">if</span> (pictureList.isEmpty()) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// 4. 更新分类和标签</span><br>    pictureList.forEach(picture -&gt; &#123;<br>        <span class="hljs-keyword">if</span> (StrUtil.isNotBlank(category)) &#123;<br>            picture.setCategory(category);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (CollUtil.isNotEmpty(tags)) &#123;<br>            picture.setTags(JSONUtil.toJsonStr(tags));<br>        &#125;<br>    &#125;);<br><br>    <span class="hljs-comment">// 5. 批量更新</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.updateBatchById(pictureList);<br>    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）开发接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/edit/batch&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">editPictureByBatch</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureEditByBatchRequest pictureEditByBatchRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(pictureEditByBatchRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    pictureService.editPictureByBatch(pictureEditByBatchRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="批量重命名">2、批量重命名</h4><p>1）批量请求补充字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 命名规则</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> String nameRule;<br><br></code></pre></td></tr></table></figure><p>2）批量修改图片补充图片名称</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 批量重命名</span><br><span class="hljs-type">String</span> <span class="hljs-variable">nameRule</span> <span class="hljs-operator">=</span> pictureEditByBatchRequest.getNameRule();<br>fillPictureWithNameRule(pictureList, nameRule);<br><br></code></pre></td></tr></table></figure><p>编写填充图片名称方法，使用replaceAll替换动态变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * nameRule 格式：图片&#123;序号&#125;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> pictureList</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> nameRule</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fillPictureWithNameRule</span><span class="hljs-params">(List&lt;Picture&gt; pictureList, String nameRule)</span> &#123;<br>    <span class="hljs-keyword">if</span> (CollUtil.isEmpty(pictureList) || StrUtil.isBlank(nameRule)) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">for</span> (Picture picture : pictureList) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">pictureName</span> <span class="hljs-operator">=</span> nameRule.replaceAll(<span class="hljs-string">&quot;\\&#123;序号&#125;&quot;</span>, String.valueOf(count++));<br>            picture.setName(pictureName);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        log.error(<span class="hljs-string">&quot;名称解析错误&quot;</span>, e);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;名称解析错误&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="前端开发-4">前端开发</h3><h4 id="批量编辑弹窗表单">1、批量编辑弹窗表单</h4><p>1）弹窗 + 表单组件快速开发</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;a-modal v-model:visible=&quot;visible&quot; title=&quot;批量编辑图片&quot; :footer=&quot;false&quot; @cancel=&quot;closeModal&quot;&gt;<br>    &lt;a-typography-paragraph type=&quot;secondary&quot;&gt;* 只对当前页面的图片生效&lt;/a-typography-paragraph&gt;<br>    &lt;!-- 表单项 --&gt;<br>    &lt;a-form layout=&quot;vertical&quot; :model=&quot;formData&quot; @finish=&quot;handleSubmit&quot;&gt;<br>      &lt;a-form-item label=&quot;分类&quot; name=&quot;category&quot;&gt;<br>        &lt;a-auto-complete<br>          v-model:value=&quot;formData.category&quot;<br>          :options=&quot;categoryOptions&quot;<br>          placeholder=&quot;请输入分类&quot;<br>          allowClear<br>        /&gt;<br>      &lt;/a-form-item&gt;<br>      &lt;a-form-item label=&quot;标签&quot; name=&quot;tags&quot;&gt;<br>        &lt;a-select<br>          v-model:value=&quot;formData.tags&quot;<br>          :options=&quot;tagOptions&quot;<br>          mode=&quot;tags&quot;<br>          placeholder=&quot;请输入标签&quot;<br>          allowClear<br>        /&gt;<br>      &lt;/a-form-item&gt;<br>      &lt;a-form-item label=&quot;命名规则&quot; name=&quot;nameRule&quot;&gt;<br>        &lt;a-input v-model:value=&quot;formData.nameRule&quot; placeholder=&quot;请输入命名规则，输入 &#123;序号&#125; 可动态生成&quot; /&gt;<br>      &lt;/a-form-item&gt;<br>      &lt;a-form-item&gt;<br>        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot;&gt;提交&lt;/a-button&gt;<br>      &lt;/a-form-item&gt;<br>    &lt;/a-form&gt;<br>  &lt;/a-modal&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; defineProps, ref, withDefaults, defineExpose, reactive, onMounted &#125; from &#x27;vue&#x27;<br>import &#123;<br>  editPictureByBatchUsingPost,<br>  listPictureTagCategoryUsingGet,<br>&#125; from &#x27;@/api/pictureController&#x27;<br>import &#123; message &#125; from &#x27;ant-design-vue&#x27;<br><br>// 定义组件属性类型<br>interface Props &#123;<br>  pictureList: API.PictureVO[]<br>  spaceId: number<br>  onSuccess: () =&gt; void<br>&#125;<br><br>// 给组件指定初始值<br>const props = withDefaults(defineProps&lt;Props&gt;(), &#123;&#125;)<br><br>// 控制弹窗可见性<br>const visible = ref(false)<br><br>// 打开弹窗<br>const openModal = () =&gt; &#123;<br>  visible.value = true<br>&#125;<br><br>// 关闭弹窗<br>const closeModal = () =&gt; &#123;<br>  visible.value = false<br>&#125;<br><br>// 暴露函数给父组件<br>defineExpose(&#123;<br>  openModal,<br>&#125;)<br><br>// 初始化表单数据<br>const formData = reactive(&#123;<br>  category: &#x27;&#x27;, // 分类<br>  tags: [], // 标签<br>  nameRule: &#x27;&#x27;, // 命名规则<br>&#125;)<br><br>const categoryOptions = ref&lt;string[]&gt;([])<br>const tagOptions = ref&lt;string[]&gt;([])<br><br>// 获取标签和分类选项<br>const getTagCategoryOptions = async () =&gt; &#123;<br>  const res = await listPictureTagCategoryUsingGet()<br>  if (res.data.code === 0 &amp;&amp; res.data.data) &#123;<br>    // 转换成下拉选项组件接受的格式<br>    tagOptions.value = (res.data.data.tagList ?? []).map((data: string) =&gt; &#123;<br>      return &#123;<br>        value: data,<br>        label: data,<br>      &#125;<br>    &#125;)<br>    categoryOptions.value = (res.data.data.categoryList ?? []).map((data: string) =&gt; &#123;<br>      return &#123;<br>        value: data,<br>        label: data,<br>      &#125;<br>    &#125;)<br>  &#125; else &#123;<br>    message.error(&#x27;加载选项失败，&#x27; + res.data.message)<br>  &#125;<br>&#125;<br><br>onMounted(() =&gt; &#123;<br>  getTagCategoryOptions()<br>&#125;)<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>2）编写表单提交函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 提交表单时处理</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">values</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!props.<span class="hljs-property">pictureList</span>) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">editPictureByBatchUsingPost</span>(&#123;<br>    <span class="hljs-attr">pictureIdList</span>: props.<span class="hljs-property">pictureList</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">picture</span>) =&gt;</span> picture.<span class="hljs-property">id</span>),<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">spaceId</span>,<br>    ...values,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;操作成功&#x27;</span>)<br>    <span class="hljs-title function_">closeModal</span>()<br>    props.<span class="hljs-property">onSuccess</span>?.()<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;操作失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="使用弹窗组件">2、使用弹窗组件</h4><p>1）空间详情引入弹窗组件</p>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱7-空间模块</title>
    <link href="/2025/07/22/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B107/"/>
    <url>/2025/07/22/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B107/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/22 PM</p>          </div><h1 id="闲话少叙">闲话少叙</h1><p>直接开干！！！</p><h1 id="空间模块">空间模块</h1><h2 id="一需求分析">一、需求分析</h2><p>空间模块，主要包含以下功能</p><ul><li>管理员管理空间</li><li>用户可以创建私人空间</li><li>私有空间权限控制</li><li>空间级别以及限额控制</li></ul><p>1）管理员管理空间：只有管理员可以用来查询空间、编辑空间、删除空间</p><p>2）用户创建私人空间：用户只可以创建一个空间，在空间内可以上传和管理图片</p><p>3）私有空间权限控制：私有空间不经过管理员审核，不在公共图库部分展示，只有自己可以浏览</p><p>4）空间级别以及限额：空间分为不同级别(普通版、专业版)，上传图片数量也有限制</p><h2 id="二方案设计">二、方案设计</h2><h3 id="如何设计空间">如何设计空间</h3><p>空间的初衷就是为了让我们用户管理自己的私人图片，那如何管理呢？</p><p>Q：这不相当于让我们查询我们自己创建的图片，通过创建人字段不就搞定了吗？</p><p>A：私有图片要有隐私性，不能被管理员审核，也不能被其他人查看，不能和先前逻辑根据ID查询比拟。</p><p>Q ：那如果让用户上传私有图片？比如设置图片仅个人可见？</p><p>A：这种方法是可行的，但是随着图片上传的数量，会产生存储费用。我们可以编写上传图片大小和数量校验</p><p>扩展</p><ul><li>和之前图库分开，尽量只增加空间相关代码，减少代码修改</li><li>为了兼容以后团队空间共享，设计空间表时需谨慎</li></ul><p>如果你遇到了逻辑复杂，且与之前冲突的情况，建议抽象出一个中间层(也就是空间)，使新老逻辑分离</p><h3 id="空间库表设计">空间库表设计</h3><h4 id="空间表">1、空间表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 空间表</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> space<br>(<br>    id         <span class="hljs-type">bigint</span> auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    spaceName  <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                       <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;空间名称&#x27;</span>,<br>    spaceLevel <span class="hljs-type">int</span>      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;空间级别：0-普通版 1-专业版 2-旗舰版&#x27;</span>,<br>    maxSize    <span class="hljs-type">bigint</span>   <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;空间图片的最大总大小&#x27;</span>,<br>    maxCount   <span class="hljs-type">bigint</span>   <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;空间图片的最大数量&#x27;</span>,<br>    totalSize  <span class="hljs-type">bigint</span>   <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;当前空间下图片的总大小&#x27;</span>,<br>    totalCount <span class="hljs-type">bigint</span>   <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;当前空间下的图片数量&#x27;</span>,<br>    userId     <span class="hljs-type">bigint</span>                             <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建用户 id&#x27;</span>,<br>    createTime datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    editTime   datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;编辑时间&#x27;</span>,<br>    updateTime datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    isDelete   tinyint  <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除&#x27;</span>,<br>    <span class="hljs-comment">-- 索引设计</span><br>    index idx_userId (userId),        <span class="hljs-comment">-- 提升基于用户的查询效率</span><br>    index idx_spaceName (spaceName),  <span class="hljs-comment">-- 提升基于空间名称的查询效率</span><br>    index idx_spaceLevel (spaceLevel) <span class="hljs-comment">-- 提升按空间级别查询的效率</span><br>) comment <span class="hljs-string">&#x27;空间&#x27;</span> <span class="hljs-keyword">collate</span> <span class="hljs-operator">=</span> utf8mb4_unicode_ci;<br><br></code></pre></td></tr></table></figure><h4 id="图片表">2、图片表</h4><p>一张图片归属于一个空间，图片表需要新增字段spaceId</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 添加新列</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> picture<br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> spaceId  <span class="hljs-type">bigint</span>  <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;空间 id（为空表示公共空间）&#x27;</span>;<br><br><span class="hljs-comment">-- 创建索引</span><br><span class="hljs-keyword">CREATE</span> INDEX idx_spaceId <span class="hljs-keyword">ON</span> picture (spaceId);<br><br></code></pre></td></tr></table></figure><h3 id="公共图库和空间关系">公共图库和空间关系</h3><p>Q：公共图库不就相当于管理员的空间吗，为什么不作为一个单独的空间设计呢？</p><p>A：公共图库访问权限和私有空间概念不同，公共图库资源谁都可以看到，不需要身份认证，也没有任何限制额度</p><p>这也是为什么不叫公共空间的原因</p><h2 id="三后端开发">三、后端开发</h2><h3 id="空间管理">空间管理</h3><p>新增增删改查功能</p><h4 id="数据模型">1、数据模型</h4><p>1）首先先利用Mybatis-plusX插件一键生成</p><p>补充逻辑删除和ASSIGN_ID、序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Space</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> -<span class="hljs-number">7194810522874550592L</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableId(type = IdType.ASSIGN_ID)</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间级别：0-普通版 1-专业版 2-旗舰版</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer spaceLevel;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前空间下图片的总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long totalSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前空间下的图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long totalCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建用户 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date createTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date editTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date updateTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 是否删除</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@TableLogic</span><br>    <span class="hljs-keyword">private</span> Integer isDelete;<br>&#125;<br></code></pre></td></tr></table></figure><p>2）封装各操作请求类，放置在<code>/model/dto/space</code>下</p><figure><img src="/img/pictureLibrary/image-20250720114617036.png"alt="image-20250720114617036" /><figcaption aria-hidden="true">image-20250720114617036</figcaption></figure><p>创建空间(填写空间名、空间级别)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceAddRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间级别：0-普通版 1-专业版 2-旗舰版</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer spaceLevel;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>编辑空间(目前仅允许空间编辑空间名)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceEditRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>更新空间，管理员使用，可以编辑空间级别和限额</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceUpdateRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间级别：0-普通版 1-专业版 2-旗舰版</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer spaceLevel;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxCount;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>空间查询请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceQueryRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PageRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间级别：0-普通版 1-专业版 2-旗舰版</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer spaceLevel;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）<code>/model/dto/vo</code>新建空间视图包装类，关联创建用户信息，并且提供SpaceVO和Space转化方法(后期和前端联合，需要更改id类型，现在不急改)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String spaceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间级别：0-普通版 1-专业版 2-旗舰版</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer spaceLevel;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 空间图片的最大数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long maxCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前空间下图片的总大小</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long totalSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 当前空间下的图片数量</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long totalCount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建用户 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date createTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 编辑时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date editTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date updateTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建用户信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> UserVO user;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 封装类转对象</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> spaceVO</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Space <span class="hljs-title function_">voToObj</span><span class="hljs-params">(SpaceVO spaceVO)</span> &#123;<br>        <span class="hljs-keyword">if</span> (spaceVO == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br>        BeanUtils.copyProperties(spaceVO, space);<br>        <span class="hljs-keyword">return</span> space;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 对象转封装类</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> space</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SpaceVO <span class="hljs-title function_">objToVo</span><span class="hljs-params">(Space space)</span> &#123;<br>        <span class="hljs-keyword">if</span> (space == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-type">SpaceVO</span> <span class="hljs-variable">spaceVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceVO</span>();<br>        BeanUtils.copyProperties(space, spaceVO);<br>        <span class="hljs-keyword">return</span> spaceVO;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）<code>models.enum</code>包下定义枚举类，针对于不同级别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">SpaceLevelEnum</span> &#123;<br><br>    COMMON(<span class="hljs-string">&quot;普通版&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100L</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>),<br>    PROFESSIONAL(<span class="hljs-string">&quot;专业版&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">1000L</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>),<br>    FLAGSHIP(<span class="hljs-string">&quot;旗舰版&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10000</span>, <span class="hljs-number">10000L</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>);<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String text;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> value;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> maxCount;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> maxSize;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> text 文本</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> value 值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> maxSize 最大图片总大小</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> maxCount 最大图片总数量</span><br><span class="hljs-comment">     */</span><br>    SpaceLevelEnum(String text, <span class="hljs-type">int</span> value, <span class="hljs-type">long</span> maxCount, <span class="hljs-type">long</span> maxSize) &#123;<br>        <span class="hljs-built_in">this</span>.text = text;<br>        <span class="hljs-built_in">this</span>.value = value;<br>        <span class="hljs-built_in">this</span>.maxCount = maxCount;<br>        <span class="hljs-built_in">this</span>.maxSize = maxSize;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 value 获取枚举</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> SpaceLevelEnum <span class="hljs-title function_">getEnumByValue</span><span class="hljs-params">(Integer value)</span> &#123;<br>        <span class="hljs-keyword">if</span> (ObjUtil.isEmpty(value)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (SpaceLevelEnum spaceLevelEnum : SpaceLevelEnum.values()) &#123;<br>            <span class="hljs-keyword">if</span> (spaceLevelEnum.value == value) &#123;<br>                <span class="hljs-keyword">return</span> spaceLevelEnum;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务开发">2、服务开发</h4><p>参考图片服务开发代码，完成SpaceService和实现类开发</p><p>1）开发校验空间数据是否合法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validSpace</span><span class="hljs-params">(Space space, <span class="hljs-type">boolean</span> add)</span> &#123;<br>    ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-comment">// 从对象中取值</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">spaceName</span> <span class="hljs-operator">=</span> space.getSpaceName();<br>    <span class="hljs-type">Integer</span> <span class="hljs-variable">spaceLevel</span> <span class="hljs-operator">=</span> space.getSpaceLevel();<br>    <span class="hljs-type">SpaceLevelEnum</span> <span class="hljs-variable">spaceLevelEnum</span> <span class="hljs-operator">=</span> SpaceLevelEnum.getEnumByValue(spaceLevel);<br>    <span class="hljs-comment">// 要创建</span><br>    <span class="hljs-keyword">if</span> (add) &#123;<br>        <span class="hljs-keyword">if</span> (StrUtil.isBlank(spaceName)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;空间名称不能为空&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (spaceLevel == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;空间级别不能为空&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">// 修改数据时，如果要改空间级别</span><br>    <span class="hljs-keyword">if</span> (spaceLevel != <span class="hljs-literal">null</span> &amp;&amp; spaceLevelEnum == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;空间级别不存在&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (StrUtil.isNotBlank(spaceName) &amp;&amp; spaceName.length() &gt; <span class="hljs-number">30</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;空间名称过长&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）创建和更新空间的时候，需要根据空间级别自动填充额度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fillSpaceBySpaceLevel</span><span class="hljs-params">(Space space)</span> &#123;<br>    <span class="hljs-comment">// 根据空间级别，自动填充限额</span><br>    <span class="hljs-type">SpaceLevelEnum</span> <span class="hljs-variable">spaceLevelEnum</span> <span class="hljs-operator">=</span> SpaceLevelEnum.getEnumByValue(space.getSpaceLevel());<br>    <span class="hljs-keyword">if</span> (spaceLevelEnum != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">maxSize</span> <span class="hljs-operator">=</span> spaceLevelEnum.getMaxSize();<br>        <span class="hljs-keyword">if</span> (space.getMaxSize() == <span class="hljs-literal">null</span>) &#123;<br>            space.setMaxSize(maxSize);<br>        &#125;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">maxCount</span> <span class="hljs-operator">=</span> spaceLevelEnum.getMaxCount();<br>        <span class="hljs-keyword">if</span> (space.getMaxCount() == <span class="hljs-literal">null</span>) &#123;<br>            space.setMaxCount(maxCount);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="接口开发">3、接口开发</h4><p>创建SpaceController 类，完成以下接口</p><ul><li>创建空间</li><li>更新空间</li><li>查询空间</li><li>删除空间</li></ul><p>开发更新接口需要调用扩充限额函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">updateSpace</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceEditRequest spaceEditRequest)</span> &#123;<br>    <span class="hljs-keyword">if</span>(spaceEditRequest == <span class="hljs-literal">null</span> || spaceEditRequest.getId() &lt;= <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>    &#125;<br><br>    <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br>    BeanUtils.copyProperties(spaceEditRequest,space);<br>    spaceService.fillSpaceBySpaceLevel(space);<br><br>    <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> spaceEditRequest.getId();<br>    <span class="hljs-type">Space</span> <span class="hljs-variable">sp</span> <span class="hljs-operator">=</span> spaceService.getById(id);<br>    ThrowUtils.throwIf(sp == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR);<br><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> spaceService.updateById(sp);<br>    ThrowUtils.throwIf(!res,ErrorCode.OPERATION_ERROR);<br><br>    <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>同理用户更新接口也需要调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/edit&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">editSpace</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceEditRequest spaceEditRequest, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-keyword">if</span> (spaceEditRequest == <span class="hljs-literal">null</span> || spaceEditRequest.getId() &lt;= <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br>        BeanUtil.copyProperties(spaceEditRequest, space);<br><br>        <span class="hljs-comment">//自动填充数据</span><br>        spaceService.fillSpaceBySpaceLevel(space);<br>        space.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>        spaceService.validSpace(space,<span class="hljs-literal">false</span>);<br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>        <span class="hljs-comment">//判断是否存在</span><br>        <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> spaceEditRequest.getId();<br>        <span class="hljs-type">Space</span> <span class="hljs-variable">oldSpace</span> <span class="hljs-operator">=</span> spaceService.getById(id);<br>        ThrowUtils.throwIf(oldSpace == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-keyword">if</span> (!oldSpace.getUserId().equals(loginUser.getId()) &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br><br>        <span class="hljs-comment">//操作数据库</span><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> spaceService.updateById(space);<br><br>        ThrowUtils.throwIf(!res, ErrorCode.OPERATION_ERROR);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br><br>    &#125;<br></code></pre></td></tr></table></figure><p>其余的接口复制PictureController内部的接口，将Picture替换为Space、picture替换为space即可</p><h3 id="用户创建私有空间">用户创建私有空间</h3><p>创建私有空间需要添加限制，只能创建一个</p><h4 id="创建空间流程">1、创建空间流程</h4><ul><li>填充参数默认值</li><li>校验参数</li><li>校验用户权限，普通用户只能创建普通级别空间</li><li>控制同一用户只能创建一个私有空间</li></ul><p>如何保证一个用户只能创建一个空间呢？</p><p>最简单方法就是给空间表中userId添加唯一索引，但是为了后续团队空间，这里使用锁+ 事务来解决</p><h4 id="创建空间服务">2、创建空间服务</h4><p>建议自己写一遍熟悉熟悉事务 + 锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Resource</span><br><span class="hljs-keyword">private</span> TransactionTemplate transactionTemplate;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">addSpace</span><span class="hljs-params">(SpaceAddRequest spaceAddRequest, User loginUser)</span> &#123;<br>    <span class="hljs-comment">// 在此处将实体类和 DTO 进行转换</span><br>    <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Space</span>();<br>    BeanUtils.copyProperties(spaceAddRequest, space);<br>    <span class="hljs-comment">// 默认值</span><br>    <span class="hljs-keyword">if</span> (StrUtil.isBlank(spaceAddRequest.getSpaceName())) &#123;<br>        space.setSpaceName(<span class="hljs-string">&quot;默认空间&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (spaceAddRequest.getSpaceLevel() == <span class="hljs-literal">null</span>) &#123;<br>        space.setSpaceLevel(SpaceLevelEnum.COMMON.getValue());<br>    &#125;<br>    <span class="hljs-comment">// 填充数据</span><br>    <span class="hljs-built_in">this</span>.fillSpaceBySpaceLevel(space);<br>    <span class="hljs-comment">// 数据校验</span><br>    <span class="hljs-built_in">this</span>.validSpace(space, <span class="hljs-literal">true</span>);<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> loginUser.getId();<br>    space.setUserId(userId);<br>    <span class="hljs-comment">// 权限校验</span><br>    <span class="hljs-keyword">if</span> (SpaceLevelEnum.COMMON.getValue() != spaceAddRequest.getSpaceLevel() &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;无权限创建指定级别的空间&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">// 针对用户进行加锁</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> String.valueOf(userId).intern();<br>    <span class="hljs-keyword">synchronized</span> (lock) &#123;<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">newSpaceId</span> <span class="hljs-operator">=</span> transactionTemplate.execute(status -&gt; &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">exists</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.lambdaQuery().eq(Space::getUserId, userId).exists();<br>            ThrowUtils.throwIf(exists, ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;每个用户仅能有一个私有空间&quot;</span>);<br>            <span class="hljs-comment">// 写入数据库</span><br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.save(space);<br>            ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br>            <span class="hljs-comment">// 返回新写入的数据 id</span><br>            <span class="hljs-keyword">return</span> space.getId();<br>        &#125;);<br>        <span class="hljs-comment">// 返回结果是包装类，可以做一些处理</span><br>        <span class="hljs-keyword">return</span> Optional.ofNullable(newSpaceId).orElse(-<span class="hljs-number">1L</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>注意上述代码对userId进行上锁，保证不同用户拿到不同的锁，同时没有使用传统的@Transcational注解控制事务，使用了编程式事务管理内部封装与数据库操作相关的代码，保证事务提交在锁的范围内</p><p>接口测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">addSpace</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> SpaceAddRequest spaceAddRequest, HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(spaceAddRequest == <span class="hljs-literal">null</span>,ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    <span class="hljs-type">long</span> <span class="hljs-variable">newId</span> <span class="hljs-operator">=</span> spaceService.addSpace(spaceAddRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(newId);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="扩展---本地锁优化">扩展 - 本地锁优化</h4><p>上述代码我们是通过字符常量池进行上锁，数据不会释放。如果还想要使用本地锁，需要使用ConcurrentHashMap存储锁对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">Map&lt;Long, Object&gt; lockMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentHashMap</span>&lt;&gt;();<br><br><span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">addSpace</span><span class="hljs-params">(SpaceAddRequest spaceAddRequest, User user)</span> &#123;<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> user.getId();<br>    <span class="hljs-type">Object</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> lockMap.computeIfAbsent(userId, key -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>());<br>    <span class="hljs-keyword">synchronized</span> (lock) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 数据库操作</span><br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-comment">// 防止内存泄漏</span><br>            lockMap.remove(userId);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="私有空间权限控制">私有空间权限控制</h3><p>私有空间和公共图库是不同的，需要保证所有图片操作关联空间</p><h4 id="图片表新增字段">1、图片表新增字段</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 空间 id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Long spaceId;<br><br></code></pre></td></tr></table></figure><h4 id="上传更新图片">2、上传更新图片</h4><p>1）上传图片需要补充空间字段，确保上传到那一个空间</p><p>PictureUploadRequest补充spaceId字段</p><p>2）修改上传图片方法，校验是否存在空间，如果存在是否有权限上传</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">ThrowUtils.throwIf(loginUser == <span class="hljs-literal">null</span>, ErrorCode.NO_AUTH_ERROR);<br><span class="hljs-comment">// 校验空间是否存在</span><br><span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> pictureUploadRequest.getSpaceId();<br><span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>    ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br>    <span class="hljs-comment">// 必须空间创建人（管理员）才能上传</span><br>    <span class="hljs-keyword">if</span> (!loginUser.getId().equals(space.getUserId())) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;没有空间权限&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）如果是更新图片，校验图片的spaceId和传递到spaceId是否一致。如果传递的时候spaceId为空，则使用原有图片的spaceId</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 如果是更新图片，需要校验图片是否存在</span><br><span class="hljs-keyword">if</span> (pictureId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(pictureId);<br>    ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;图片不存在&quot;</span>);<br>    <span class="hljs-comment">// 仅本人或管理员可编辑</span><br>    <span class="hljs-keyword">if</span> (!oldPicture.getUserId().equals(loginUser.getId()) &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>    &#125;<br>    <span class="hljs-comment">// 校验空间是否一致</span><br>    <span class="hljs-comment">// 没传 spaceId，则复用原有图片的 spaceId</span><br>    <span class="hljs-keyword">if</span> (spaceId == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">if</span> (oldPicture.getSpaceId() != <span class="hljs-literal">null</span>) &#123;<br>            spaceId = oldPicture.getSpaceId();<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 传了 spaceId，必须和原有图片一致</span><br>        <span class="hljs-keyword">if</span> (ObjUtil.notEqual(spaceId, oldPicture.getSpaceId())) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;空间 id 不一致&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）之前目录是根据用户ID来分的，现在如果有了spaceId，按照空间来分</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">String uploadPathPrefix;<br><span class="hljs-keyword">if</span>(spaceId == <span class="hljs-literal">null</span>) &#123;<br>    uploadPathPrefix = String.format(<span class="hljs-string">&quot;public/%s&quot;</span>, loginUser.getId());<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    uploadPathPrefix = String.format(<span class="hljs-string">&quot;space/%s&quot;</span>,spaceId);<br>&#125;<br></code></pre></td></tr></table></figure><p>5）为新图片设置空间ID</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 构造要入库的图片信息</span><br><span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br><span class="hljs-comment">// 补充设置 spaceId</span><br>picture.setSpaceId(spaceId);<br><br></code></pre></td></tr></table></figure><h4 id="删除图片">3、删除图片</h4><p>如果删除的图片有空间ID，说明是某一个用户上传到私有空间的图片，需要做权限控制</p><p>1）由于删除图片和编辑图片权限控制校验是一致的，我们可以抽离出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkPictureAuth</span><span class="hljs-params">(User loginUser, Picture picture)</span> &#123;<br>    <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> picture.getSpaceId();<br>    <span class="hljs-keyword">if</span> (spaceId == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-comment">// 公共图库，仅本人或管理员可操作</span><br>        <span class="hljs-keyword">if</span> (!picture.getUserId().equals(loginUser.getId()) &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// 私有空间，仅空间管理员可操作</span><br>        <span class="hljs-keyword">if</span> (!picture.getUserId().equals(loginUser.getId())) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）删除图片服务类编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deletePicture</span><span class="hljs-params">(<span class="hljs-type">long</span> pictureId, User loginUser)</span> &#123;<br>    ThrowUtils.throwIf(pictureId &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br>    ThrowUtils.throwIf(loginUser == <span class="hljs-literal">null</span>, ErrorCode.NO_AUTH_ERROR);<br>    <span class="hljs-comment">// 判断是否存在</span><br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(pictureId);<br>    ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br>    <span class="hljs-comment">// 校验权限</span><br>    checkPictureAuth(loginUser, oldPicture);<br>    <span class="hljs-comment">// 操作数据库</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.removeById(pictureId);<br>    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br>    <span class="hljs-comment">// 异步清理文件</span><br>    <span class="hljs-built_in">this</span>.clearPictureFile(oldPicture);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="编辑图片">4、编辑图片</h4><p>和删除图片校验逻辑一致，如果有空间ID说明必须是空间管理员本人，其余人都不可以修改</p><p>editPicture 也在服务中编写，同步Controller调用service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">editPicture</span><span class="hljs-params">(PictureEditRequest pictureEditRequest, User loginUser)</span> &#123;<br>    <span class="hljs-comment">// 在此处将实体类和 DTO 进行转换</span><br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>    BeanUtils.copyProperties(pictureEditRequest, picture);<br>    <span class="hljs-comment">// 注意将 list 转为 string</span><br>    picture.setTags(JSONUtil.toJsonStr(pictureEditRequest.getTags()));<br>    <span class="hljs-comment">// 设置编辑时间</span><br>    picture.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>    <span class="hljs-comment">// 数据校验</span><br>    <span class="hljs-built_in">this</span>.validPicture(picture);<br>    <span class="hljs-comment">// 判断是否存在</span><br>    <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureEditRequest.getId();<br>    <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(id);<br>    ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br>    <span class="hljs-comment">// 校验权限</span><br>    checkPictureAuth(loginUser, oldPicture);<br>    <span class="hljs-comment">// 补充审核参数</span><br>    <span class="hljs-built_in">this</span>.fillReviewParams(picture, loginUser);<br>    <span class="hljs-comment">// 操作数据库</span><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.updateById(picture);<br>    ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="查询图片">5、查询图片</h4><p>用户无法查询到私有空间中的图片，我们需要在单独查询、分页查询中添加空间逻辑</p><p>1）修改getPictureVOById，如果查询的图片有spaceId，添加权限控制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 查询数据库</span><br><span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br>ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br><span class="hljs-comment">// 空间权限校验</span><br><span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> picture.getSpaceId();<br><span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    pictureService.checkPictureAuth(loginUser, picture);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）修改分页查询接口listPictureVOByPage</p><p>查询请求增加spaceId参数，不传代表公共图库中分页查询；传参表示查询特定空间下的图片，此时用户必须是空间管理员，不需要设置审核条件(私有空间不用审核)</p><p>请求封装类PictureQueryRequest、QueryWrapper补充spaceId参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 空间 id</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> Long spaceId;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 是否只查询 spaceId 为 null 的数据</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> nullSpaceId;<br><br></code></pre></td></tr></table></figure><p>QueryWrapper新增代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> pictureQueryRequest.getSpaceId();<br><span class="hljs-type">Boolean</span> <span class="hljs-variable">nullSpaceId</span> <span class="hljs-operator">=</span> pictureQueryRequest.isNullSpaceId();<br><br>queryWrapper.eq(ObjUtil.isNotEmpty(spaceId), <span class="hljs-string">&quot;spaceId&quot;</span>, spaceId);<br>queryWrapper.isNull(nullSpaceId, <span class="hljs-string">&quot;spaceId&quot;</span>);<br></code></pre></td></tr></table></figure><p>针对于公有图库和私有空间，确定是否添加权限校验</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> pictureQueryRequest.getSpaceId();<br><span class="hljs-keyword">if</span>(spaceId == <span class="hljs-literal">null</span>) &#123;<br>  pictureQueryRequest.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());<br>  pictureQueryRequest.setNullSpaceId(<span class="hljs-literal">true</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>  <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>  <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>  ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR,<span class="hljs-string">&quot;空间不存在&quot;</span>);<br>  <span class="hljs-keyword">if</span>(!loginUser.getId().equals(space.getUserId())) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR,<span class="hljs-string">&quot;没有空间权限&quot;</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>考虑私有空间图片更新频率不好把握，缓存分页查询图片可以先添加@Deprecated注解</p><h3 id="空间级别和限额控制">空间级别和限额控制</h3><p>每次上传图片，我们应该先检查用户剩余额度是否足够。如果够的话，实时更新。</p><h4 id="上传图片时校验和更新额度">1、上传图片时校验和更新额度</h4><p>根据观察我们会发现上传图片的逻辑已经很复杂了，如果还想增加校验，想想都头疼。</p><p>这里我们可以想想如何优化？</p><ul><li>单张图片最大才2M，满了再传一张，影响不大</li><li>如果有用户在超额前瞬间上传大量图片，后续也可以通过限流定时任务处理</li></ul><p>1）修改uploadPicture方法，在源代码的基础上添加两个额度判断条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> pictureUploadRequest.getSpaceId();<br><span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>  <span class="hljs-type">Space</span> <span class="hljs-variable">space</span> <span class="hljs-operator">=</span> spaceService.getById(spaceId);<br>  ThrowUtils.throwIf(space == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR, <span class="hljs-string">&quot;空间不存在&quot;</span>);<br>  <span class="hljs-comment">// 必须空间创建人（管理员）才能上传</span><br>  <span class="hljs-keyword">if</span> (!loginUser.getId().equals(space.getUserId())) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR, <span class="hljs-string">&quot;没有空间权限&quot;</span>);<br>  &#125;<br>  <span class="hljs-comment">// 校验额度</span><br>  <span class="hljs-keyword">if</span> (space.getTotalCount() &gt;= space.getMaxCount()) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;空间条数不足&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (space.getTotalSize() &gt;= space.getMaxSize()) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;空间大小不足&quot;</span>);<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）事务更新额度，即使更新失败，图片也不会保存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 开启事务</span><br><span class="hljs-type">Long</span> <span class="hljs-variable">finalSpaceId</span> <span class="hljs-operator">=</span> spaceId;<br>transactionTemplate.execute(status -&gt; &#123;<br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.saveOrUpdate(picture);<br>  ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;图片上传失败&quot;</span>);<br>  <span class="hljs-keyword">if</span> (finalSpaceId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">update</span> <span class="hljs-operator">=</span> spaceService.lambdaUpdate()<br>      .eq(Space::getId, finalSpaceId)<br>      .setSql(<span class="hljs-string">&quot;totalSize = totalSize + &quot;</span> + picture.getPicSize())<br>      .setSql(<span class="hljs-string">&quot;totalCount = totalCount + 1&quot;</span>)<br>      .update();<br>    ThrowUtils.throwIf(!update, ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;额度更新失败&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> picture;<br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="删除图片后更新额度">2、删除图片后更新额度</h4><p>删除图片同样使用transactionTemplate事务，将删除图片的数据库操作和更新额度绑定在一起</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">// 校验权限</span><br>checkPictureAuth(loginUser, oldPicture);<br><br><span class="hljs-comment">// 开启事务</span><br>transactionTemplate.execute(status -&gt; &#123;<br>  <span class="hljs-comment">// 操作数据库</span><br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.removeById(pictureId);<br>  ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br>  <span class="hljs-comment">// 释放额度</span><br>  <span class="hljs-type">Long</span> <span class="hljs-variable">spaceId</span> <span class="hljs-operator">=</span> oldPicture.getSpaceId();<br>  <span class="hljs-keyword">if</span> (spaceId != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">update</span> <span class="hljs-operator">=</span> spaceService.lambdaUpdate()<br>      .eq(Space::getId, spaceId)<br>      .setSql(<span class="hljs-string">&quot;totalSize = totalSize - &quot;</span> + oldPicture.getPicSize())<br>      .setSql(<span class="hljs-string">&quot;totalCount = totalCount - 1&quot;</span>)<br>      .update();<br>    ThrowUtils.throwIf(!update, ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;额度更新失败&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;);<br><span class="hljs-comment">// 异步清理文件</span><br><span class="hljs-built_in">this</span>.clearPictureFile(oldPicture);<br></code></pre></td></tr></table></figure><h4 id="查询空间级别列表">3、查询空间级别列表</h4><p>1）新建SpaceLevel封装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceLevel</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> value;<br><br>    <span class="hljs-keyword">private</span> String text;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> maxCount;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> maxSize;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）接口开发，将枚举类转化为空间对象列表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/list/level&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;List&lt;SpaceLevel&gt;&gt; <span class="hljs-title function_">listSpaceLevel</span><span class="hljs-params">()</span> &#123;<br>    List&lt;SpaceLevel&gt; spaceLevelList = Arrays.stream(SpaceLevelEnum.values()) <span class="hljs-comment">// 获取所有枚举</span><br>            .map(spaceLevelEnum -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceLevel</span>(<br>                    spaceLevelEnum.getValue(),<br>                    spaceLevelEnum.getText(),<br>                    spaceLevelEnum.getMaxCount(),<br>                    spaceLevelEnum.getMaxSize()))<br>            .collect(Collectors.toList());<br>    <span class="hljs-keyword">return</span> ResultUtils.success(spaceLevelList);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="四前端开发">四、前端开发</h2><h3 id="空间管理页面">空间管理页面</h3><p>参考前面做过的管理页面</p><h4 id="新建路由菜单">1、新建路由菜单</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/spaceManage&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;空间管理&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">SpaceManagePage</span>,<br>&#125;,<br><br></code></pre></td></tr></table></figure><p>GlobalHeader 顶部栏同理</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sas">&#123;<br>  <span class="hljs-keyword">key</span>: <span class="hljs-string">&#x27;/admin/spaceManage&#x27;</span>,<br>  <span class="hljs-keyword">label</span>: <span class="hljs-string">&#x27;空间管理&#x27;</span>,<br>  <span class="hljs-keyword">title</span>: <span class="hljs-string">&#x27;空间管理&#x27;</span>,<br>&#125;,<br><br></code></pre></td></tr></table></figure><h4 id="定义空间常量">2、定义空间常量</h4><p>因为涉及到空间级别，这里也需要像<code>picture.ts</code>一样新建<code>space.ts</code>，定义枚举和中文映射</p><h4 id="开发管理页面">3、开发管理页面</h4><p>1）定义展示的列数据</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> columns = [<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">80</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;空间名称&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;spaceName&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;空间级别&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;spaceLevel&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;使用情况&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;spaceUseInfo&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;用户 id&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userId&#x27;</span>,<br>    <span class="hljs-attr">width</span>: <span class="hljs-number">80</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;编辑时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;editTime&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;操作&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;action&#x27;</span>,<br>  &#125;,<br>]<br><br></code></pre></td></tr></table></figure><p>2）调用后端接口获取数据(替换图片管理后端接口以及searchParams类型，其余大抵一致)</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 数据</span><br><span class="hljs-keyword">const</span> dataList = <span class="hljs-title function_">ref</span>([])<br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">// 搜索条件</span><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceQueryRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-attr">sortField</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&#x27;descend&#x27;</span>,<br>&#125;)<br><br><span class="hljs-comment">// 分页参数</span><br><span class="hljs-keyword">const</span> pagination = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">current</span>: searchParams.<span class="hljs-property">current</span> ?? <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">pageSize</span>: searchParams.<span class="hljs-property">pageSize</span> ?? <span class="hljs-number">10</span>,<br>    <span class="hljs-attr">total</span>: total.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">showSizeChanger</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">showTotal</span>: <span class="hljs-function">(<span class="hljs-params">total</span>) =&gt;</span> <span class="hljs-string">`共 <span class="hljs-subst">$&#123;total&#125;</span> 条`</span>,<br>  &#125;<br>&#125;)<br><br><span class="hljs-comment">// 获取数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listSpaceByPageUsingPost</span>(&#123;<br>    ...searchParams,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []<br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-comment">// 页面加载时请求一次</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br><br><span class="hljs-comment">// 获取数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 重置搜索条件</span><br>  searchParams.<span class="hljs-property">current</span> = <span class="hljs-number">1</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><span class="hljs-comment">// 表格变化处理</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doTableChange</span> = (<span class="hljs-params"><span class="hljs-attr">page</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = page.<span class="hljs-property">current</span><br>  searchParams.<span class="hljs-property">pageSize</span> = page.<span class="hljs-property">pageSize</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）自定义列展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #bodyCell=&quot;&#123; column, record &#125;&quot;&gt;<br>  &lt;!-- 空间级别 --&gt;<br>  &lt;template v-if=&quot;column.dataIndex === &#x27;spaceLevel&#x27;&quot;&gt;<br>    &lt;a-tag&gt;&#123;&#123; SPACE_LEVEL_MAP[record.spaceLevel] &#125;&#125;&lt;/a-tag&gt;<br>  &lt;/template&gt;<br>  &lt;!-- 使用情况 --&gt;<br>  &lt;template v-if=&quot;column.dataIndex === &#x27;spaceUseInfo&#x27;&quot;&gt;<br>    &lt;div&gt;大小：&#123;&#123; formatSize(record.totalSize) &#125;&#125; / &#123;&#123; formatSize(record.maxSize) &#125;&#125;&lt;/div&gt;<br>    &lt;div&gt;数量：&#123;&#123; record.totalCount &#125;&#125; / &#123;&#123; record.maxCount &#125;&#125;&lt;/div&gt;<br>  &lt;/template&gt;<br>  &lt;template v-else-if=&quot;column.dataIndex === &#x27;createTime&#x27;&quot;&gt;<br>    &#123;&#123; dayjs(record.createTime).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;<br>  &lt;/template&gt;<br>  &lt;template v-else-if=&quot;column.dataIndex === &#x27;editTime&#x27;&quot;&gt;<br>    &#123;&#123; dayjs(record.editTime).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;<br>  &lt;/template&gt;<br>  &lt;template v-else-if=&quot;column.key === &#x27;action&#x27;&quot;&gt;<br>    &lt;a-space wrap&gt;<br>      &lt;a-button type=&quot;link&quot; :href=&quot;`/add_space?id=$&#123;record.id&#125;`&quot; target=&quot;_blank&quot;&gt;<br>        编辑<br>      &lt;/a-button&gt;<br>      &lt;a-button type=&quot;link&quot; danger @click=&quot;doDelete(record.id)&quot;&gt;删除&lt;/a-button&gt;<br>    &lt;/a-space&gt;<br>  &lt;/template&gt;<br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>4）开发搜索表单，可以根据空间名称、空间级别、用户ID搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-form layout=&quot;inline&quot; :model=&quot;searchParams&quot; @finish=&quot;doSearch&quot;&gt;<br>  &lt;a-form-item label=&quot;空间名称&quot; name=&quot;spaceName&quot;&gt;<br>    &lt;a-input v-model:value=&quot;searchParams.spaceName&quot; placeholder=&quot;请输入空间名称&quot; allow-clear /&gt;<br>  &lt;/a-form-item&gt;<br>  &lt;a-form-item label=&quot;空间级别&quot; name=&quot;spaceLevel&quot;&gt;<br>    &lt;a-select<br>      v-model:value=&quot;searchParams.spaceLevel&quot;<br>      :options=&quot;SPACE_LEVEL_OPTIONS&quot;<br>      placeholder=&quot;请输入空间级别&quot;<br>      style=&quot;min-width: 180px&quot;<br>      allow-clear<br>    /&gt;<br>  &lt;/a-form-item&gt;<br>  &lt;a-form-item label=&quot;用户 id&quot; name=&quot;userId&quot;&gt;<br>    &lt;a-input v-model:value=&quot;searchParams.userId&quot; placeholder=&quot;请输入用户 id&quot; allow-clear /&gt;<br>  &lt;/a-form-item&gt;<br>  &lt;a-form-item&gt;<br>    &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot;&gt;搜索&lt;/a-button&gt;<br>  &lt;/a-form-item&gt;<br>&lt;/a-form&gt;<br><br></code></pre></td></tr></table></figure><p>5）补充操作按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-flex justify=&quot;space-between&quot;&gt;<br>  &lt;h2&gt;空间管理&lt;/h2&gt;<br>  &lt;a-space&gt;<br>    &lt;a-button type=&quot;primary&quot; href=&quot;/add_space&quot; target=&quot;_blank&quot;&gt;+ 创建空间&lt;/a-button&gt;<br>  &lt;/a-space&gt;<br>&lt;/a-flex&gt;<br><br></code></pre></td></tr></table></figure><p>添加编辑删除按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-space wrap&gt;<br>  &lt;a-button type=&quot;link&quot; :href=&quot;`/add_space?id=$&#123;record.id&#125;`&quot; target=&quot;_blank&quot;&gt;<br>    编辑<br>  &lt;/a-button&gt;<br>  &lt;a-button type=&quot;link&quot; danger @click=&quot;doDelete(record.id)&quot;&gt;删除&lt;/a-button&gt;<br>&lt;/a-space&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250720161456313.png"alt="image-20250720161456313" /><figcaption aria-hidden="true">image-20250720161456313</figcaption></figure><h3 id="创建空间页面开发">创建空间页面开发</h3><h4 id="新建路由">1、新建路由</h4><p>新建AddSpacePage页面，定义路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/add_space&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;创建空间&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">AddSpacePage</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><h4 id="开发表单">2、开发表单</h4><p>1）修改表单项</p><p>它的页面结构和批量添加图片类似，复制修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-form layout=&quot;vertical&quot; :model=&quot;formData&quot; @finish=&quot;handleSubmit&quot;&gt;<br>  &lt;a-form-item label=&quot;空间名称&quot; name=&quot;spaceName&quot;&gt;<br>    &lt;a-input v-model:value=&quot;formData.spaceName&quot; placeholder=&quot;请输入空间名称&quot; allow-clear /&gt;<br>  &lt;/a-form-item&gt;<br>  &lt;a-form-item label=&quot;空间级别&quot; name=&quot;spaceLevel&quot;&gt;<br>    &lt;a-select<br>      v-model:value=&quot;formData.spaceLevel&quot;<br>      :options=&quot;SPACE_LEVEL_OPTIONS&quot;<br>      placeholder=&quot;请输入空间级别&quot;<br>      style=&quot;min-width: 180px&quot;<br>      allow-clear<br>    /&gt;<br>  &lt;/a-form-item&gt;<br>  &lt;a-form-item&gt;<br>    &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100%&quot; :loading=&quot;loading&quot;&gt;<br>      提交<br>    &lt;/a-button&gt;<br>  &lt;/a-form-item&gt;<br>&lt;/a-form&gt;<br><br></code></pre></td></tr></table></figure><p>2）定义表单数据对象以及加载项</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> formData = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceAddRequest</span> | <span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceUpdateRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">spaceName</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-attr">spaceLevel</span>: <span class="hljs-variable constant_">SPACE_LEVEL_ENUM</span>.<span class="hljs-property">COMMON</span>,<br>&#125;)<br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)<br><br></code></pre></td></tr></table></figure><p>3）编写提交函数，提交后调用后端创建表单接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">values</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">addSpaceUsingPost</span>(&#123;<br>    ...formData,<br>  &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;创建成功&quot;</span>)<br>    router.<span class="hljs-title function_">push</span>(&#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">`/space/<span class="hljs-subst">$&#123;res.data.data&#125;</span>`</span>,<br>    &#125;)<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;创建失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="展示空间级别信息">3、展示空间级别信息</h4><p>不管是用户还是管理员，都需要了解空间信息，好方便升级空间大小。</p><p>1）在表单下新增展示空间信息卡片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-card title=&quot;空间级别介绍&quot;&gt;<br>  &lt;a-typography-paragraph&gt;<br>    * 目前仅支持开通普通版，如需升级空间，请联系<br>    &lt;a href=&quot;https://korinall.github.io/&quot; target=&quot;_blank&quot;&gt;KotRin&lt;/a&gt;。<br>  &lt;/a-typography-paragraph&gt;<br>  &lt;a-typography-paragraph v-for=&quot;spaceLevel in spaceLevelList&quot;&gt;<br>    &#123;&#123; spaceLevel.text &#125;&#125;： 大小 &#123;&#123; formatSize(spaceLevel.maxSize) &#125;&#125;， 数量<br>    &#123;&#123; spaceLevel.maxCount &#125;&#125;<br>  &lt;/a-typography-paragraph&gt;<br>&lt;/a-card&gt;<br><br></code></pre></td></tr></table></figure><p>2）调用后端获取空间级别列表</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> spaceLevelList = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceLevel</span>[]&gt;([])<br><br><span class="hljs-comment">// 获取空间级别</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchSpaceLevelList</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listSpaceLevelUsingGet</span>()<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    spaceLevelList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;加载空间级别失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchSpaceLevelList</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250720171447709.png"alt="image-20250720171447709" /><figcaption aria-hidden="true">image-20250720171447709</figcaption></figure><h4 id="更新空间界面">4、更新空间界面</h4><p>更新空间可以复用创建空间界面</p><p>1）和之前上传图片一样，我们可以通过<code>route.query.id</code>获取到具体空间，接着进行编辑</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>()<br><span class="hljs-keyword">const</span> oldSpace = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceVO</span>&gt;()<br><br><span class="hljs-comment">// 获取老数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getOldSpace</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-comment">// 获取数据</span><br>  <span class="hljs-keyword">const</span> id = route.<span class="hljs-property">query</span>?.<span class="hljs-property">id</span><br>  <span class="hljs-keyword">if</span> (id) &#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceVoByIdUsingGet</span>(id.<span class="hljs-title function_">toString</span>())<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      <span class="hljs-keyword">const</span> data = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>      oldSpace.<span class="hljs-property">value</span> = data<br>      formData.<span class="hljs-property">spaceName</span> = data.<span class="hljs-property">spaceName</span><br>      formData.<span class="hljs-property">spaceLevel</span> = data.<span class="hljs-property">spaceLevel</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意：这里需要保证后端返回的SpaceVO的ID是String类型，之前前面讲过<code>getPictureVoByIdUsingGet</code>，参考当初说的修改</p><p>2）修改提交函数，根据spaceID来判断是创建空间还是更新空间</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">values</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> spaceId = oldSpace.<span class="hljs-property">value</span>?.<span class="hljs-property">id</span><br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-keyword">let</span> res<br>  <span class="hljs-comment">// 更新</span><br>  <span class="hljs-keyword">if</span> (spaceId) &#123;<br>    res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">updateSpaceUsingPost</span>(&#123;<br>      <span class="hljs-attr">id</span>: spaceId,<br>      ...formData,<br>    &#125;)<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 创建</span><br>    res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">addSpaceUsingPost</span>(&#123;<br>      ...formData,<br>    &#125;)<br>  &#125;<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;操作成功&#x27;</span>)<br>    <span class="hljs-keyword">let</span> path = <span class="hljs-string">`/space/<span class="hljs-subst">$&#123;spaceId ?? res.data.data&#125;</span>`</span><br>    router.<span class="hljs-title function_">push</span>(&#123;<br>      path,<br>    &#125;)<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;操作失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）测试</p><figure><img src="/img/pictureLibrary/image-20250720173930812.png"alt="image-20250720173930812" /><figcaption aria-hidden="true">image-20250720173930812</figcaption></figure><h3 id="用户创建私人空间">用户创建私人空间</h3><h4 id="展示私有空间入口">1、展示私有空间入口</h4><p>预期效果：左侧新增目录栏，包含公共图库和个人空间，点击我的空间后，如果没有创建跳转创建页面</p><p>1）这里参考<ahref="https://antdv.com/components/layout-cn#components-layout-demo-top-side-2">LayoutSider</a></p><figure><img src="/img/pictureLibrary/image-20250720174311045.png"alt="image-20250720174311045" /><figcaption aria-hidden="true">image-20250720174311045</figcaption></figure><p>和顶部菜单栏一样，我们可以单独封装一个侧边栏的组件叫做GlobalSider</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;globalSider&quot;&gt;<br>  &lt;a-layout-sider class=&quot;sider&quot; width=&quot;200&quot;&gt;<br>    &lt;a-menu<br>      mode=&quot;inline&quot;<br>      v-model:selectedKeys=&quot;current&quot;<br>      :items=&quot;menuItems&quot;<br>      @click=&quot;doMenuClick&quot;<br>    /&gt;<br>  &lt;/a-layout-sider&gt;<br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>在全局BasicLayout组件中引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout&gt;<br>  &lt;GlobalSider class=&quot;sider&quot; /&gt;<br>  &lt;a-layout-content class=&quot;content&quot;&gt;<br>    &lt;router-view /&gt;<br>  &lt;/a-layout-content&gt;<br>&lt;/a-layout&gt;<br></code></pre></td></tr></table></figure><p>优化样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.header</span> &#123;<br>  <span class="hljs-attribute">padding-inline</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">1px</span>;<br>  <span class="hljs-attribute">background</span>: white;<br>&#125;<br><br><br><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.content</span>&#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to right,<span class="hljs-number">#fefefe</span>,<span class="hljs-number">#fff</span>);<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">28px</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#basicLayout</span> <span class="hljs-selector-class">.sider</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">border-right</span>: <span class="hljs-number">0.5px</span> solid <span class="hljs-number">#eee</span>;<br>&#125;<br><br><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.footer</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#efefef</span>;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br><br><br><span class="hljs-selector-id">#basicLayout</span> :<span class="hljs-built_in">deep</span>(.ant-menu-root) &#123;<br>  <span class="hljs-attribute">border-bottom</span>: none <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">border-inline-end</span>: none <span class="hljs-meta">!important</span>;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>2）开发GlobalSider组件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 菜单列表</span><br><span class="hljs-keyword">const</span> menuItems = [<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;公共图库&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">PictureOutlined</span>),<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/my_space&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;我的空间&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">UserOutlined</span>),<br>  &#125;,<br>]<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>()<br><br><span class="hljs-comment">// 当前选中菜单</span><br><span class="hljs-keyword">const</span> current = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br><span class="hljs-comment">// 监听路由变化，更新当前选中菜单</span><br>router.<span class="hljs-title function_">afterEach</span>(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, failure</span>) =&gt;</span> &#123;<br>  current.<span class="hljs-property">value</span> = [to.<span class="hljs-property">path</span>]<br>&#125;)<br><br><span class="hljs-comment">// 路由跳转事件</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doMenuClick</span> = (<span class="hljs-params">&#123; key &#125;: &#123; key: <span class="hljs-built_in">string</span> &#125;</span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: key,<br>  &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）优化侧边栏，只有当当前用户登录了才展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout-sider v-if=&quot;loginUserStore.loginUser.id&quot; class=&quot;sider&quot; width=&quot;200&quot;&gt;<br></code></pre></td></tr></table></figure><p>还可以设置响应式布局，当窗口足够小的时候隐藏侧边栏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout-sider v-if=&quot;loginUserStore.loginUser.id&quot; <br>  class=&quot;sider&quot;<br>  width=&quot;200&quot; <br>  breakpoint=&quot;lg&quot;<br>  collapsed-width=&quot;0&quot;<br>&gt;<br>&lt;/a-layout-sider&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250720181514345.png"alt="image-20250720181514345" /><figcaption aria-hidden="true">image-20250720181514345</figcaption></figure><p>整体页面如下</p><figure><img src="/img/pictureLibrary/image-20250720181435681.png"alt="image-20250720181435681" /><figcaption aria-hidden="true">image-20250720181435681</figcaption></figure><p>4）在GlobalHeader头像添加下拉栏跳转我的空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-menu-item&gt;<br>  &lt;router-link to=&quot;/my_space&quot;&gt;<br>    &lt;UserOutlined /&gt;<br>    我的空间<br>  &lt;/router-link&gt;<br>&lt;/a-menu-item&gt;<br><br></code></pre></td></tr></table></figure><h4 id="我的空间界面">2、我的空间界面</h4><p>我的空间属于中间页面，在跳转该页面后需要经过特判重定向</p><ul><li>用户未登录，跳转登录页面</li><li>用户登录了并且创建好空间，直接跳</li><li>登录但是没有创建空间，跳转创建空间页面</li></ul><p>1）新建路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/my_space&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;我的空间&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">MySpacePage</span>,<br>&#125;,<br><br></code></pre></td></tr></table></figure><p>2）界面设计</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;mySpace&quot;&gt;<br>    &lt;p&gt;正在跳转，请稍候...&lt;/p&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; onMounted &#125; from &#x27;vue&#x27;<br>import &#123; useRouter &#125; from &#x27;vue-router&#x27;<br>import &#123; listSpaceVoByPageUsingPost &#125; from &#x27;@/api/spaceController&#x27;<br>import &#123; message &#125; from &#x27;ant-design-vue&#x27;<br>import &#123; useLoginUserStore &#125; from &#x27;@/stores/useLoginUserStore&#x27;<br><br>const router = useRouter()<br>const loginUserStore = useLoginUserStore()<br><br>// 检查用户是否有个人空间<br>const checkUserSpace = async () =&gt; &#123;<br>  const loginUser = loginUserStore.loginUser<br>  if (!loginUser?.id) &#123;<br>    router.replace(&#x27;/user/login&#x27;)<br>    return<br>  &#125;<br>  // 获取用户空间信息<br>  const res = await listSpaceVoByPageUsingPost(&#123;<br>    userId: loginUser.id,<br>    current: 1,<br>    pageSize: 1,<br>  &#125;)<br>  if (res.data.code === 0) &#123;<br>    if (res.data.data?.records?.length &gt; 0) &#123;<br>      const space = res.data.data.records[0]<br>      router.replace(`/space/$&#123;space.id&#125;`)<br>    &#125; else &#123;<br>      router.replace(&#x27;/add_space&#x27;)<br>      message.warn(&#x27;请先创建空间&#x27;)<br>    &#125;<br>  &#125; else &#123;<br>    message.error(&#x27;加载我的空间失败，&#x27; + res.data.message)<br>  &#125;<br>&#125;<br><br>// 在页面加载时检查用户空间<br>onMounted(() =&gt; &#123;<br>  checkUserSpace()<br>&#125;)<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>上述核心代码主要是<code>checkUserSpace</code>检查是否登录，登录后是否有空间等</p><p>现在在我们点击我的空间后，由于没有设计空间详情页，这里会显示"正在跳转，请稍候..."一瞬间</p><h3 id="空间详情页">空间详情页</h3><h4 id="封装图片列表组件">1、封装图片列表组件</h4><p>先封装PictureList，只用于图片数据展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;picture-list&quot;&gt;<br>    &lt;!-- 图片列表 --&gt;<br>    &lt;a-list<br>      :grid=&quot;&#123; gutter: 16, xs: 1, sm: 2, md: 3, lg: 4, xl: 5, xxl: 6 &#125;&quot;<br>      :data-source=&quot;dataList&quot;<br>      :loading=&quot;loading&quot;<br>    &gt;<br>      &lt;template #renderItem=&quot;&#123; item: picture &#125;&quot;&gt;<br>        &lt;a-list-item style=&quot;padding: 0&quot;&gt;<br>          &lt;!-- 单张图片 --&gt;<br>          &lt;a-card hoverable @click=&quot;doClickPicture(picture)&quot;&gt;<br>            &lt;template #cover&gt;<br>              &lt;img<br>                style=&quot;height: 180px; object-fit: cover&quot;<br>                :alt=&quot;picture.name&quot;<br>                :src=&quot;picture.thumbnailUrl ?? picture.url&quot;<br>                loading=&quot;lazy&quot;<br>              /&gt;<br>            &lt;/template&gt;<br>            &lt;a-card-meta :title=&quot;picture.name&quot;&gt;<br>              &lt;template #description&gt;<br>                &lt;a-flex&gt;<br>                  &lt;a-tag color=&quot;green&quot;&gt;<br>                    &#123;&#123; picture.category ?? &#x27;默认&#x27; &#125;&#125;<br>                  &lt;/a-tag&gt;<br>                  &lt;a-tag v-for=&quot;tag in picture.tags&quot; :key=&quot;tag&quot;&gt;<br>                    &#123;&#123; tag &#125;&#125;<br>                  &lt;/a-tag&gt;<br>                &lt;/a-flex&gt;<br>              &lt;/template&gt;<br>            &lt;/a-card-meta&gt;<br>          &lt;/a-card&gt;<br>        &lt;/a-list-item&gt;<br>      &lt;/template&gt;<br>    &lt;/a-list&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; useRouter &#125; from &#x27;vue-router&#x27;<br><br>interface Props &#123;<br>  dataList?: API.PictureVO[]<br>  loading?: boolean<br>&#125;<br><br>const props = withDefaults(defineProps&lt;Props&gt;(), &#123;<br>  dataList: () =&gt; [],<br>  loading: false,<br>&#125;)<br><br>// 跳转至图片详情<br>const router = useRouter()<br>const doClickPicture = (picture) =&gt; &#123;<br>  router.push(&#123;<br>    path: `/picture/$&#123;picture.id&#125;`,<br>  &#125;)<br>&#125;<br>&lt;/script&gt;<br><br>&lt;style scoped&gt;&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>2）修改主页图片展示代码，直接使用图片列表组件，补充分页参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 图片列表 --&gt;<br>&lt;PictureList :dataList=&quot;dataList&quot; :loading=&quot;loading&quot; /&gt;<br>&lt;a-pagination<br>  style=&quot;text-align: right&quot;<br>  v-model:current=&quot;searchParams.current&quot;<br>  v-model:pageSize=&quot;searchParams.pageSize&quot;<br>  :total=&quot;total&quot;<br>  @change=&quot;onPageChange&quot;<br>/&gt;<br><br></code></pre></td></tr></table></figure><h4 id="开发详情页">2、开发详情页</h4><p>1）新建SpaceDetailPage页面，并配置路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/space/:id&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;空间详情&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">SpaceDetailPage</span>,<br>  <span class="hljs-attr">props</span>: <span class="hljs-literal">true</span>,<br>&#125;,<br><br></code></pre></td></tr></table></figure><p>2）编写ts部分，调用后端接口获取空间信息</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> props = defineProps&lt;&#123;<br>  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span><br>&#125;&gt;()<br><span class="hljs-keyword">const</span> space = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">SpaceVO</span>&gt;(&#123;&#125;)<br><br><span class="hljs-comment">// 获取空间详情</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchSpaceDetail</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getSpaceVoByIdUsingGet</span>(&#123;<br>      <span class="hljs-attr">id</span>: props.<span class="hljs-property">id</span>,<br>    &#125;)<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      space.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取空间详情失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-attr">e</span>: <span class="hljs-built_in">any</span>) &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取空间详情失败：&#x27;</span> + e.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchSpaceDetail</span>()<br>&#125;)<br><br><span class="hljs-comment">// 数据</span><br><span class="hljs-keyword">const</span> dataList = <span class="hljs-title function_">ref</span>([])<br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>)<br><br><span class="hljs-comment">// 搜索条件</span><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureQueryRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">12</span>,<br>  <span class="hljs-attr">sortField</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&#x27;descend&#x27;</span>,<br>&#125;)<br><br><span class="hljs-comment">// 分页参数</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onPageChange</span> = (<span class="hljs-params">page, pageSize</span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = page<br>  searchParams.<span class="hljs-property">pageSize</span> = pageSize<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><span class="hljs-comment">// 获取数据</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span><br>  <span class="hljs-comment">// 转换搜索参数</span><br>  <span class="hljs-keyword">const</span> params = &#123;<br>    <span class="hljs-attr">spaceId</span>: props.<span class="hljs-property">id</span>,<br>    ...searchParams,<br>  &#125;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureVoByPageUsingPost</span>(params)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []<br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>&#125;<br><br><span class="hljs-comment">// 页面加载时请求一次</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>3）自定义空间信息展示，进度条展示空间额度情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 空间信息 --&gt;<br>&lt;a-flex justify=&quot;space-between&quot;&gt;<br>  &lt;h2&gt;&#123;&#123; space.spaceName &#125;&#125;（私有空间）&lt;/h2&gt;<br>  &lt;a-space size=&quot;middle&quot;&gt;<br>    &lt;a-button type=&quot;primary&quot; :href=&quot;`/add_picture?spaceId=$&#123;id&#125;`&quot; target=&quot;_blank&quot;&gt;<br>      + 创建图片<br>    &lt;/a-button&gt;<br>    &lt;a-tooltip<br>      :title=&quot;`占用空间 $&#123;formatSize(space.totalSize)&#125; / $&#123;formatSize(space.maxSize)&#125;`&quot;<br>    &gt;<br>      &lt;a-progress<br>        type=&quot;circle&quot;<br>        :percent=&quot;((space.totalSize * 100) / space.maxSize).toFixed(1)&quot;<br>        :size=&quot;42&quot;<br>      /&gt;<br>    &lt;/a-tooltip&gt;<br>  &lt;/a-space&gt;<br>&lt;/a-flex&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250720191447226.png"alt="image-20250720191447226" /><figcaption aria-hidden="true">image-20250720191447226</figcaption></figure><p>可以看到图片可以正常展示到空间详情页面了，接下来将会依次对空间内图片进行增删改查</p><h4 id="上传图片到私有空间">3、上传图片到私有空间</h4><p>1）修改AddPicturePage，从url中获取spaceId传参</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> spaceId = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> route.<span class="hljs-property">query</span>?.<span class="hljs-property">spaceId</span>;<br>&#125;)<br><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">editPictureUsingPost</span>(&#123;<br>    <span class="hljs-attr">id</span>: pictureId,<br>    <span class="hljs-attr">spaceId</span>: spaceId.<span class="hljs-property">value</span>,<br>    ...values<br>  &#125;)<br></code></pre></td></tr></table></figure><p>2）页面中展示spaceId</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-typography-paragraph v-if=&quot;spaceId&quot; type=&quot;secondary&quot;&gt;<br>  保存至空间 &lt;a :href=&quot;`/space/$&#123;spaceId&#125;`&quot; target=&quot;_blank&quot;&gt;&#123;&#123;spaceId&#125;&#125;&lt;/a&gt;<br>&lt;/a-typography-paragraph&gt;<br></code></pre></td></tr></table></figure><p>3）修改实际上传图片组件，包括URL上传和本地上传</p><p>父组件传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;PictureUpload :picture=&quot;picture&quot; :spaceId=&quot;spaceId&quot; :onSuccess=&quot;onSuccess&quot; /&gt;<br>&lt;UrlPictureUpload :picture=&quot;picture&quot; :spaceId=&quot;spaceId&quot; :onSuccess=&quot;onSuccess&quot; /&gt;<br></code></pre></td></tr></table></figure><p>子组件接收参数，调用后端接口携带spaceId</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  picture?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span><br>  spaceId?: <span class="hljs-built_in">number</span><br>  onSuccess?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">newPicture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">params</span>:<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureUploadRequest</span> = props.<span class="hljs-property">picture</span> ? &#123;<span class="hljs-attr">id</span>: props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span>&#125; : &#123;&#125;;<br>    params.<span class="hljs-property">spaceId</span> = props.<span class="hljs-property">spaceId</span>;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureUsingPost</span>(params,&#123;&#125;,file)<br>    <span class="hljs-comment">//.....</span><br>&#125;<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721151924252.png"alt="image-20250721151924252" /><figcaption aria-hidden="true">image-20250721151924252</figcaption></figure><h4 id="图片组件增加快捷操作">4、图片组件增加快捷操作</h4><p>参考<ahref="https://antdv.com/components/card-cn/#Card-">卡片组件</a></p><figure><img src="/img/pictureLibrary/image-20250721152014835.png"alt="image-20250721152014835" /><figcaption aria-hidden="true">image-20250721152014835</figcaption></figure><p>个人空间也提供编辑和删除按钮，公共图库不予展示</p><p>1）图片组件添加操作栏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #actions&gt;<br>  &lt;a-space @click=&quot;e =&gt; doEdit(picture, e)&quot;&gt;<br>    &lt;edit-outlined /&gt;<br>    编辑<br>  &lt;/a-space&gt;<br>  &lt;a-space @click=&quot;e =&gt; doDelete(picture, e)&quot;&gt;<br>    &lt;delete-outlined /&gt;<br>    删除<br>  &lt;/a-space&gt;<br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>2）取消主页展示操作栏，私有空间展示，添加showOp字段</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  dataList?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span>[]<br>  loading?: <span class="hljs-built_in">boolean</span><br>  showOp?: <span class="hljs-built_in">boolean</span><br>&#125;<br><br><span class="hljs-keyword">const</span> props = <span class="hljs-title function_">withDefaults</span>(defineProps&lt;<span class="hljs-title class_">Props</span>&gt;(), &#123;<br>  <span class="hljs-attr">dataList</span>: <span class="hljs-function">() =&gt;</span> [],<br>  <span class="hljs-attr">loading</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-attr">showOp</span>: <span class="hljs-literal">false</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>私有空间页面传递<code>showOp:true</code>参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;PictureList :dataList=&quot;dataList&quot; :showOp=&quot;true&quot; :loading=&quot;loading&quot; /&gt;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template v-if=&quot;showOp&quot; #actions&gt;<br>  &lt;a-space @click=&quot;(e) =&gt; doEdit(picture,e)&quot;&gt;<br>    &lt;edit-outlined/&gt;<br>    编辑<br>&lt;/a-space&gt;<br><br>  &lt;a-space @click=&quot;(e) =&gt; doDelete(picture,e)&quot;&gt;<br>    &lt;delete-outlined/&gt;<br>    删除<br>  &lt;/a-space&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>3）完善doEdit和doDelete函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doEdit</span> = (<span class="hljs-params">picture,e</span>) =&gt; &#123;<br>  <span class="hljs-comment">//阻止冒泡</span><br>  e.<span class="hljs-title function_">stopPropagation</span>()<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/add_picture&quot;</span>,<br>    <span class="hljs-attr">query</span>: &#123;<br>      <span class="hljs-attr">id</span>: picture.<span class="hljs-property">id</span>,<br>      <span class="hljs-attr">spaceId</span>:picture.<span class="hljs-property">spaceId</span><br>    &#125;<br>  &#125;)<br>&#125;<br><span class="hljs-comment">// 删除</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doDelete</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">picture,e</span>) =&gt; &#123;<br>  e.<span class="hljs-title function_">stopPropagation</span>()<br>  <span class="hljs-keyword">const</span> id = picture.<span class="hljs-property">id</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(id)<br>  <span class="hljs-keyword">if</span> (!id) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">deletePictureUsingPost</span>(&#123; id &#125;)<br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;删除成功&#x27;</span>)<br>    props.<span class="hljs-property">onReload</span>?.()<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;删除失败&#x27;</span>)<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意由于卡片父组件也有点击事件<code>doClickPicture</code>，我们子组件的时间会冒泡到父组件，导致最终执行的都是父组件的代码，所以我们如果不禁用冒泡的话，这里点击编辑就会跳转到图片详情页面</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">e.<span class="hljs-title function_">stopPropagation</span>() <span class="hljs-comment">//禁用冒泡</span><br></code></pre></td></tr></table></figure><p>4）删除图片，需要刷新页面</p><p>由于在PictureList中没有fetchData函数，我们可以设置新字段<code>onReload</code>，父组件传参，子组件调用</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  dataList?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span>[]<br>  loading?: <span class="hljs-built_in">boolean</span><br>  showOp?: <span class="hljs-built_in">boolean</span><br>  onReload?: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>空间详情页传递fetchData函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 图片列表 --&gt;<br>&lt;PictureList :dataList=&quot;dataList&quot; :showOp=&quot;true&quot; :loading=&quot;loading&quot; :onReload=&quot;fetchData&quot; /&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721153019197.png"alt="image-20250721153019197" /><figcaption aria-hidden="true">image-20250721153019197</figcaption></figure><h4 id="私有空间权限控制-1">5、私有空间权限控制</h4><p>图片管理页面，我们调用的是仅管理员可用的<code>listPictureByPage</code>接口，实际上图片展示的只是公共空间的，需要给参数添加nullSpaceId：true，衔接后端getWrapper</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureByPageUsingPost</span>(&#123;<br>  ...searchParams,<br>  <span class="hljs-attr">nullSpaceId</span>: <span class="hljs-literal">true</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>或者说如果想展示空间ID信息的话，不需要添加<code>nullSpaceId: true</code></p><p>添加column字段</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;空间 id&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;spaceId&#x27;</span>,<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">80</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250721160702627.png"alt="image-20250721160702627" /><figcaption aria-hidden="true">image-20250721160702627</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱6-图片优化</title>
    <link href="/2025/07/19/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B106/"/>
    <url>/2025/07/19/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B106/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/19 PM</p>          </div><h1 id="闲话环节">闲话环节</h1><p>不多说了，直接开始。。。。</p><h1 id="图片优化">图片优化</h1><h2 id="本节重点">本节重点</h2><p>迄今为止，我们的智能图库项目已经是一个可以上线的项目</p><p>但是在此之前，还有很多优化空间，在这节中会分享很多优化的技术</p><ul><li>查询优化～分布式缓存、本地缓存、多级缓存</li><li>上传优化～压缩、妙传、分片传、断点续传</li><li>加载优化～懒加载、缩略图、CDN加速、浏览器缓存</li><li>存储优化～冷热数据分离、清理策略</li></ul><h2 id="一图片查询优化">一、图片查询优化</h2><h3 id="缓存">缓存</h3><p>对于经常访问的数据，如果从数据库中(磁盘中)读取会很慢，我们可以使用更NB的存储来快速读取，即缓存</p><p><strong>什么时候使用缓存</strong></p><ul><li>高频数据</li><li>计算成本高</li><li>短延迟</li></ul><p>在我们项目中，主页调用的获取图片列表非常适合缓存，即使更新存在延迟对用户也不会产生太大影响</p><h3 id="redis分布式缓存">Redis分布式缓存</h3><blockquote><p>分布式缓存指的是存储部署在多台服务器上，高并发容错高</p></blockquote><p>优势</p><ul><li>速度快：内存读取，QPS(每秒查询次数) 高达10W次</li><li>数据结构丰富</li><li>分布式支持：提供多种架构模式，在发生故障来回切换</li></ul><h4 id="缓存设计">缓存设计</h4><p>我们需要缓存的是listPictureVOByPage这个接口。这里按照缓存三要素：<code>key、value、过期时间</code>设计</p><p>1）缓存key</p><p>查询条件不同，数据不同，我们可以对查询条件进行缓存。</p><p>可以将查询对象转为JSON格式，接着用哈希算法md5压缩key</p><p>为了明确是该业务，可以在key前拼接项目前缀</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">krpicture</span>:listPictureVOByPage:<span class="hljs-variable">$&#123;查询条件key&#125;</span><br></code></pre></td></tr></table></figure><p>2）缓存value</p><p>缓存 从数据库中查询到的Page对象，存储为什么格式呢？</p><ul><li>可读性考虑JSON</li><li>压缩空间考虑二进制</li></ul><p>对应Redis数据结构都是string</p><p>3）缓存过期时间</p><p>一定要设置，要不然缓存堵死，建议设置5 ～60分钟</p><h4 id="如何操作redis呢">如何操作Redis呢？</h4><p>Java提供了很多Redis操作库，例如Jedis，Lettuce，但是这里我们使用SpringData Redis(底层Lettuce实现) 操作Redis，更加贴合Spring Boot项目</p><h4 id="后端开发">后端开发</h4><p>1）引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Redis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>2）yml配置Redis</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">database:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">5000</span><br><br></code></pre></td></tr></table></figure><p>3）编写Junit项目，测试<code>StringRedisTemplate</code>增删改查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisStringTest</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> StringRedisTemplate stringRedisTemplate;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testRedisStringOperations</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 获取操作对象</span><br>        ValueOperations&lt;String, String&gt; valueOps = stringRedisTemplate.opsForValue();<br><br>        <span class="hljs-comment">// Key 和 Value</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;testKey&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;testValue&quot;</span>;<br><br>        <span class="hljs-comment">// 1. 测试新增或更新操作</span><br>        valueOps.set(key, value);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">storedValue</span> <span class="hljs-operator">=</span> valueOps.get(key);<br>        assertEquals(value, storedValue, <span class="hljs-string">&quot;存储的值与预期不一致&quot;</span>);<br><br>        <span class="hljs-comment">// 2. 测试修改操作</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">updatedValue</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;updatedValue&quot;</span>;<br>        valueOps.set(key, updatedValue);<br>        storedValue = valueOps.get(key);<br>        assertEquals(updatedValue, storedValue, <span class="hljs-string">&quot;更新后的值与预期不一致&quot;</span>);<br><br>        <span class="hljs-comment">// 3. 测试查询操作</span><br>        storedValue = valueOps.get(key);<br>        assertNotNull(storedValue, <span class="hljs-string">&quot;查询的值为空&quot;</span>);<br>        assertEquals(updatedValue, storedValue, <span class="hljs-string">&quot;查询的值与预期不一致&quot;</span>);<br><br>        <span class="hljs-comment">// 4. 测试删除操作</span><br>        stringRedisTemplate.delete(key);<br>        storedValue = valueOps.get(key);<br>        assertNull(storedValue, <span class="hljs-string">&quot;删除后的值不为空&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>因为它读取的配置是<code>application.yml</code>，内部没有cos相关配置会报错，想要执行成功复制粘贴，在此基础上对redis配置</p><p>4）创建使用缓存分页查询的接口</p><p>大体流程是：拿到转化为JSON的查询对象，去缓存中查询，如果有直接返回Page对象，否则的话存入缓存中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/list/page/vo/cache&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;PictureVO&gt;&gt; <span class="hljs-title function_">listPictureVOByPageWithCache</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureQueryRequest pictureQueryRequest,</span><br><span class="hljs-params">                                                             HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> pictureQueryRequest.getCurrent();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPageSize();<br>        <span class="hljs-comment">// 限制爬虫</span><br>        ThrowUtils.throwIf(size &gt; <span class="hljs-number">20</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-comment">//构建缓存Key</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">queryCondition</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureQueryRequest);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">hashKey</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex(queryCondition.getBytes());<br>        <span class="hljs-type">String</span> <span class="hljs-variable">redisKey</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;krpicture:listPictureVOByPage:&quot;</span> + hashKey;<br><br>        <span class="hljs-comment">//Redis缓存查询</span><br>        ValueOperations&lt;String, String&gt; valueOps = stringRedisTemplate.opsForValue();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheVal</span> <span class="hljs-operator">=</span> valueOps.get(redisKey);<br>        <span class="hljs-keyword">if</span>(cacheVal != <span class="hljs-literal">null</span>) &#123;<br>            Page&lt;PictureVO&gt; cachePage = JSONUtil.toBean(cacheVal, Page.class);<br>            <span class="hljs-keyword">return</span> ResultUtils.success(cachePage);<br>        &#125;<br><br>        <span class="hljs-comment">// 查询数据库</span><br>        pictureQueryRequest.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());<br>        Page&lt;Picture&gt; picturePage = pictureService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>                pictureService.getQueryWrapper(pictureQueryRequest));<br><br>        <span class="hljs-comment">//获取封装类</span><br>        Page&lt;PictureVO&gt; pictureVOPage = pictureService.getPictureVOPage(picturePage,request);<br><br>        <span class="hljs-comment">//存入Redis缓存</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheValue</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureVOPage);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">cacheExpireTime</span> <span class="hljs-operator">=</span> <span class="hljs-number">300</span> + RandomUtil.randomInt(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>);<br>        valueOps.set(redisKey,cacheValue,cacheExpireTime, TimeUnit.SECONDS);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(pictureVOPage);<br>    &#125;<br></code></pre></td></tr></table></figure><p>测试</p><p>缓存前626ms</p><figure><img src="/img/pictureLibrary/image-20250719131207543.png"alt="image-20250719131207543" /><figcaption aria-hidden="true">image-20250719131207543</figcaption></figure><p>缓存后52ms</p><figure><img src="/img/pictureLibrary/image-20250719131219569.png"alt="image-20250719131219569" /><figcaption aria-hidden="true">image-20250719131219569</figcaption></figure><p>注意：大小其实也发生了变化，这是因为JSON和Java对象转换的时候过滤掉了一些null的字段</p><h3 id="caffeine本地缓存">Caffeine本地缓存</h3><p>顾名思义，不需要通过网络、直接缓存到内存中(JVM)中</p><p>相对于分布式缓存，本地缓存更快</p><p>应用场景</p><ul><li>单机应用</li><li>数据访问量有限小型数据集</li><li>高频、低延迟</li></ul><p>本地缓存不需要引入中间件，如果只是想要提高数据访问能力，优先考虑</p><h4 id="缓存设计-1">缓存设计</h4><p>相比于Redis缓存，区别在于</p><p>1、需要自己初始化缓存结构</p><p>2、由于是单机，key可以不添加项目前缀</p><h4 id="后端开发-1">后端开发</h4><p>1）引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 本地缓存 Caffeine --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.ben-manes.caffeine<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>caffeine<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>2）构造本地缓存，设置容量和过期时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Cache&lt;String, String&gt; LOCAL_CACHE =<br>        Caffeine.newBuilder().initialCapacity(<span class="hljs-number">1024</span>)<br>                .maximumSize(<span class="hljs-number">10000L</span>)<br>                <span class="hljs-comment">// 缓存 5 分钟移除</span><br>                .expireAfterWrite(<span class="hljs-number">5L</span>, TimeUnit.MINUTES)<br>                .build();<br><br></code></pre></td></tr></table></figure><p>3）修改<code>/list/page/vo/cache</code>方法(这次使用本地缓存)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">        <span class="hljs-type">String</span> <span class="hljs-variable">queryCondition</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureQueryRequest);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">hashKey</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex(queryCondition.getBytes());<br><span class="hljs-comment">//        String redisKey = &quot;krpicture:listPictureVOByPage:&quot; + hashKey;</span><br><br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheKey</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;listPictureVOByPage:&quot;</span> + hashKey;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheValue</span> <span class="hljs-operator">=</span> LOCAL_CACHE.getIfPresent(cacheKey);<br><br>        <span class="hljs-keyword">if</span>(cacheValue != <span class="hljs-literal">null</span>) &#123;<br>            Page&lt;PictureVO&gt; cachePage = JSONUtil.toBean(cacheValue, Page.class);<br>            <span class="hljs-keyword">return</span> ResultUtils.success(cachePage);<br>        &#125;<br></code></pre></td></tr></table></figure><p>如果没有本地缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"> Page&lt;Picture&gt; picturePage = pictureService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>                pictureService.getQueryWrapper(pictureQueryRequest));<br><br>        <span class="hljs-comment">//获取封装类</span><br>        Page&lt;PictureVO&gt; pictureVOPage = pictureService.getPictureVOPage(picturePage,request);<br><br>        <span class="hljs-comment">//存入Redis缓存</span><br><span class="hljs-comment">//        String cacheValue = JSONUtil.toJsonStr(pictureVOPage);</span><br><span class="hljs-comment">//        int cacheExpireTime = 300 + RandomUtil.randomInt(0,300);</span><br><span class="hljs-comment">//        valueOps.set(redisKey,cacheValue,cacheExpireTime, TimeUnit.SECONDS);</span><br><br><br>        <span class="hljs-comment">//存入本地缓存</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheValue</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureVOPage);<br>        LOCAL_CACHE.put(cacheKey,cacheValue);<br></code></pre></td></tr></table></figure><p>4）测试</p><p>可以看到现在耗时38ms，比分布式缓存还快</p><figure><img src="/img/pictureLibrary/image-20250719133505297.png"alt="image-20250719133505297" /><figcaption aria-hidden="true">image-20250719133505297</figcaption></figure><h3 id="多级缓存">多级缓存</h3><p>工作流程</p><p>1、第一层：Caffeine本地缓存，优先从本地缓存中读取，如果命中，直接返回</p><p>2、第二层：Redis分布式缓存，如果本地缓存没命中，Redis缓存命中了，存入本地缓存，之后返回</p><p>3、数据库查询：如果都没命中，查询数据库，插入两层缓存</p><h4 id="后端开发-2">后端开发</h4><p>1）优先读取本地缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//构建缓存Key</span><br><span class="hljs-type">String</span> <span class="hljs-variable">queryCondition</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureQueryRequest);<br><span class="hljs-type">String</span> <span class="hljs-variable">hashKey</span> <span class="hljs-operator">=</span> DigestUtils.md5DigestAsHex(queryCondition.getBytes());<br><br><span class="hljs-type">String</span> <span class="hljs-variable">cacheKey</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;krpicture:listPictureVOByPage:&quot;</span> + hashKey;<br><span class="hljs-type">String</span> <span class="hljs-variable">cachedValue</span> <span class="hljs-operator">=</span> LOCAL_CACHE.getIfPresent(cacheKey);<br><br><span class="hljs-keyword">if</span>(cachedValue != <span class="hljs-literal">null</span>) &#123;<br>  Page&lt;PictureVO&gt; cachePage = JSONUtil.toBean(cachedValue, Page.class);<br>  <span class="hljs-keyword">return</span> ResultUtils.success(cachePage);<br>&#125;<br></code></pre></td></tr></table></figure><p>2）接着读取分布式缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">ValueOperations&lt;String, String&gt; valueOps = stringRedisTemplate.opsForValue();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheVal</span> <span class="hljs-operator">=</span> valueOps.get(cacheKey);<br>        <span class="hljs-keyword">if</span>(cacheVal != <span class="hljs-literal">null</span>) &#123;<br>            LOCAL_CACHE.put(cacheKey,cacheVal);<br>            Page&lt;PictureVO&gt; cachePage = JSONUtil.toBean(cacheVal, Page.class);<br>            <span class="hljs-keyword">return</span> ResultUtils.success(cachePage);<br>        &#125;<br></code></pre></td></tr></table></figure><p>3）数据库插入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">pictureQueryRequest.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());<br>Page&lt;Picture&gt; picturePage = pictureService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>                                                pictureService.getQueryWrapper(pictureQueryRequest));<br><br><span class="hljs-comment">//获取封装类</span><br>Page&lt;PictureVO&gt; pictureVOPage = pictureService.getPictureVOPage(picturePage,request);<br><br><span class="hljs-comment">//存入Redis缓存</span><br><span class="hljs-type">String</span> <span class="hljs-variable">cacheValue</span> <span class="hljs-operator">=</span> JSONUtil.toJsonStr(pictureVOPage);<br>valueOps.set(cacheKey,cacheValue,<span class="hljs-number">5</span>, TimeUnit.MINUTES);<br>LOCAL_CACHE.put(cacheKey,cacheValue);<br></code></pre></td></tr></table></figure><p>还有一些缓存相关的问题，例如缓存雪崩、缓存击穿等八股文内容，感兴趣的可以在网上了解</p><p>博主后期也会每天更新八股文的博客(等写完这个项目的)</p><h2 id="二图片上传优化">二、图片上传优化</h2><h3 id="图片压缩">图片压缩</h3><p>图片压缩往往都是将图片转化为体积更小的格式，例如webp</p><h4 id="图片压缩格式">1、图片压缩格式</h4><p>1）webp：Google开发的图片格式</p><p>相比于传统优势</p><ul><li>比png、jepg小30%左右</li><li>支持透明背景</li><li>浏览器兼容性好</li></ul><p>2）avif：基于AV1视频编码，压缩度高</p><ul><li>图片小，清晰</li><li>支持透明背景</li></ul><h4 id="图片压缩方案">2、图片压缩方案</h4><p>由于我们使用了COS，腾讯云同时提供了数据万象(CI) 对图片进行处理</p><p>参考<ahref="https://cloud.tencent.com/document/product/436/113299">官方文档</a></p><figure><img src="/img/pictureLibrary/image-20250719135418955.png"alt="image-20250719135418955" /><figcaption aria-hidden="true">image-20250719135418955</figcaption></figure><p>上图什么意思呢，可能第一次看没看懂？</p><p>意思就是我们PicOperation对象包含两个参数<code>is_pic_info</code>和<code>rules</code>两个参数</p><p><code>is_pic_info</code>的意思就是是否返回图片元信息，比如宽高。。。</p><figure><img src="/img/pictureLibrary/image-20250719140914860.png"alt="image-20250719140914860" /><figcaption aria-hidden="true">image-20250719140914860</figcaption></figure><p>rules参数内部两个参数<code>fielid</code>和<code>rule</code>，设置的对象分别是转化格式后对象本身和转化的格式</p><p><code>&lt;Format&gt;</code> 对应的是你想填入的格式</p><figure><img src="/img/pictureLibrary/image-20250719141157219.png"alt="image-20250719141157219" /><figcaption aria-hidden="true">image-20250719141157219</figcaption></figure><h4 id="后端开发-3">3、后端开发</h4><p>1）修改CosManager上传图片方法，转后缀为.webp</p><p><ahref="https://cloud.tencent.com/document/product/436/113299">参考文档</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//上传对象</span><br>    <span class="hljs-keyword">public</span> PutObjectResult <span class="hljs-title function_">putPictureObject</span><span class="hljs-params">(String key, File file)</span> &#123;<br>        <span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(cosClientConfig.getBucket(), key, file);<br>        <span class="hljs-type">PicOperations</span> <span class="hljs-variable">picOperations</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>();<br><br>        picOperations.setIsPicInfo(<span class="hljs-number">1</span>);<br>        List&lt;PicOperations.Rule&gt; rules = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br><br>        <span class="hljs-comment">//图片压缩</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">webpKey</span> <span class="hljs-operator">=</span> FileUtil.mainName(key) + <span class="hljs-string">&quot;.webp&quot;</span>;<br>        PicOperations.<span class="hljs-type">Rule</span> <span class="hljs-variable">compressRule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>.Rule();<br>        compressRule.setRule(<span class="hljs-string">&quot;imageMogr2/format/webp&quot;</span>);<br>        compressRule.setBucket(cosClientConfig.getBucket());<br>        compressRule.setFileId(webpKey);<br>        rules.add(compressRule);<br><br>        picOperations.setRules(rules);<br>        putObjectRequest.setPicOperations(picOperations);<br><br>        <span class="hljs-keyword">return</span> cosClient.putObject(putObjectRequest);<br><br><br>    &#125;<br></code></pre></td></tr></table></figure><p>2）修改PictureUploadTemplate上传图片方法，获取缩略图，设置到返回结果中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> &#123;  <br>            <span class="hljs-comment">// 3. 创建临时文件  </span><br>            file = File.createTempFile(uploadPath, <span class="hljs-literal">null</span>);  <br>            <span class="hljs-comment">// 处理文件来源（本地或 URL）  </span><br>            processFile(inputSource, file);  <br>  <br>            <span class="hljs-comment">// 4. 上传图片到对象存储  </span><br>            <span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosManager.putPictureObject(uploadPath, file);<br>            <span class="hljs-type">ImageInfo</span> <span class="hljs-variable">imageInfo</span> <span class="hljs-operator">=</span> putObjectResult.getCiUploadResult().getOriginalInfo().getImageInfo();<br>            <span class="hljs-type">ProcessResults</span> <span class="hljs-variable">processResults</span> <span class="hljs-operator">=</span> putObjectResult.getCiUploadResult().getProcessResults();<br>            List&lt;CIObject&gt; objectList = processResults.getObjectList();<br>            <span class="hljs-keyword">if</span>(CollUtil.isNotEmpty(objectList)) &#123;<br>                <span class="hljs-type">CIObject</span> <span class="hljs-variable">compressCiObject</span> <span class="hljs-operator">=</span> objectList.get(<span class="hljs-number">0</span>);<br>                <span class="hljs-keyword">return</span> buildResult(originFilename,compressCiObject);<br>            &#125;<br><br>            <span class="hljs-comment">// 5. 封装返回结果  </span><br>            <span class="hljs-keyword">return</span> buildResult(originFilename, file, uploadPath, imageInfo);  <br>        &#125;<br></code></pre></td></tr></table></figure><p>3）编写封装返回结果，从压缩图中获取图片信息，设置url</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> UploadPictureResult <span class="hljs-title function_">buildResult</span><span class="hljs-params">(String originFilename, CIObject compressedCiObject)</span> &#123;<br>    <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UploadPictureResult</span>();<br>    <span class="hljs-type">int</span> <span class="hljs-variable">picWidth</span> <span class="hljs-operator">=</span> compressedCiObject.getWidth();<br>    <span class="hljs-type">int</span> <span class="hljs-variable">picHeight</span> <span class="hljs-operator">=</span> compressedCiObject.getHeight();<br>    <span class="hljs-type">double</span> <span class="hljs-variable">picScale</span> <span class="hljs-operator">=</span> NumberUtil.round(picWidth * <span class="hljs-number">1.0</span> / picHeight, <span class="hljs-number">2</span>).doubleValue();<br>    uploadPictureResult.setPicName(FileUtil.mainName(originFilename));<br>    uploadPictureResult.setPicWidth(picWidth);<br>    uploadPictureResult.setPicHeight(picHeight);<br>    uploadPictureResult.setPicScale(picScale);<br>    uploadPictureResult.setPicFormat(compressedCiObject.getFormat());<br>    uploadPictureResult.setPicSize(compressedCiObject.getSize().longValue());<br>    <span class="hljs-comment">// 设置图片为压缩后的地址</span><br>    uploadPictureResult.setUrl(cosClientConfig.getHost() + <span class="hljs-string">&quot;/&quot;</span> + compressedCiObject.getKey());<br>    <span class="hljs-keyword">return</span> uploadPictureResult;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="测试">4、测试</h4><figure><img src="/img/pictureLibrary/image-20250719150037785.png"alt="image-20250719150037785" /><figcaption aria-hidden="true">image-20250719150037785</figcaption></figure><figure><img src="/img/pictureLibrary/image-20250719150051616.png"alt="image-20250719150051616" /><figcaption aria-hidden="true">image-20250719150051616</figcaption></figure><h2 id="三图片加载优化">三、图片加载优化</h2><p>图片加载优化的目的就是为了更快的加载图片，好让用户有一个很好的体验</p><p>这里分别从缩略图、懒加载、CDN加速、浏览器缓存来优化</p><h3 id="缩略图">缩略图</h3><h4 id="实现方案">1、实现方案</h4><p><ahref="https://cloud.tencent.com/document/product/436/113295">参考文档</a></p><figure><img src="/img/pictureLibrary/image-20250719150418373.png"alt="image-20250719150418373" /><figcaption aria-hidden="true">image-20250719150418373</figcaption></figure><h4 id="后端开发-4">2、后端开发</h4><p>1）picture表新增缩略url</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> picture<br>    <span class="hljs-comment">-- 添加新列</span><br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> thumbnailUrl <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>) <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;缩略图 url&#x27;</span>;<br><br></code></pre></td></tr></table></figure><p>2）PictureMapper.xml新增字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;result property=<span class="hljs-string">&quot;thumbnailUrl&quot;</span> column=<span class="hljs-string">&quot;thumbnailUrl&quot;</span> jdbcType=<span class="hljs-string">&quot;VARCHAR&quot;</span>/&gt;<br>&lt;!-- ... --&gt;<br>&lt;sql id=<span class="hljs-string">&quot;Base_Column_List&quot;</span>&gt;<br>    id,url,thumbnailUrl,name,<br>    introduction,category,tags,<br>    picSize,picWidth,picHeight,<br>    picScale,picFormat,userId,<br>    createTime,editTime,updateTime,<br>    isDelete<br>&lt;/sql&gt;<br><br></code></pre></td></tr></table></figure><p>3）数据模型新增字段(Picture、PictureVO、UploadPictureResult)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 缩略图 url</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> String thumbnailUrl;<br><br></code></pre></td></tr></table></figure><p>4）缩略图处理</p><figure><img src="/img/pictureLibrary/image-20250719151445010.png"alt="image-20250719151445010" /><figcaption aria-hidden="true">image-20250719151445010</figcaption></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//缩略图处理</span><br>PicOperations.<span class="hljs-type">Rule</span> <span class="hljs-variable">thumbnailRule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>.Rule();<br>thumbnailRule.setBucket(cosClientConfig.getBucket());<br><span class="hljs-type">String</span> <span class="hljs-variable">thumbnailKey</span> <span class="hljs-operator">=</span> FileUtil.mainName(key) + <span class="hljs-string">&quot;_thumbnail.&quot;</span> + FileUtil.getSuffix(key);<br>thumbnailRule.setFileId(thumbnailKey);<br>thumbnailRule.setRule(String.format(<span class="hljs-string">&quot;imageMogr2/thumbnail/%sx%s&quot;</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>));<br><br>rules.add(thumbnailRule);<br></code></pre></td></tr></table></figure><p>修改PictureUploadTemplate上传图片方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(CollUtil.isNotEmpty(objectList)) &#123;<br>                <span class="hljs-type">CIObject</span> <span class="hljs-variable">compressCiObject</span> <span class="hljs-operator">=</span> objectList.get(<span class="hljs-number">0</span>);<br>                <span class="hljs-type">CIObject</span> <span class="hljs-variable">thumbnailCiObject</span> <span class="hljs-operator">=</span> objectList.get(<span class="hljs-number">1</span>);<br>                <br>                <span class="hljs-keyword">return</span> buildResult(originFilename,compressCiObject,thumbnailCiObject);<br>            &#125;<br></code></pre></td></tr></table></figure><p>修改封装返回结果，添加缩略图路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> UploadPictureResult <span class="hljs-title function_">buildResult</span><span class="hljs-params">(String originFilename, CIObject compressedCiObject, CIObject thumbnailCiObject)</span> &#123;<br>        <span class="hljs-comment">//......</span><br><br>        uploadPictureResult.setThumbnailUrl(cosClientConfig.getHost() + <span class="hljs-string">&quot;/&quot;</span> + thumbnailCiObject.getKey());<br>        <span class="hljs-keyword">return</span> uploadPictureResult;<br>    &#125;<br></code></pre></td></tr></table></figure><p>补充PictureService上传图片方法设置thumb字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">picture.setUrl(uploadPictureResult.getUrl());<br>picture.setThumbnailUrl(uploadPictureResult.getThumbnailUrl());<br><span class="hljs-type">String</span> <span class="hljs-variable">picName</span> <span class="hljs-operator">=</span> uploadPictureResult.getPicName();<br></code></pre></td></tr></table></figure><p>5）测试结果</p><figure><img src="/img/pictureLibrary/image-20250719152344512.png"alt="image-20250719152344512" /><figcaption aria-hidden="true">image-20250719152344512</figcaption></figure><p>但是有一个小问题，如果我们上传的图像过于小的话，可能缩略图比原图都大</p><p>这里我们可以优化CosManager，保证传入的图片不能小于20KB</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (file.length() &gt; <span class="hljs-number">2</span> * <span class="hljs-number">1024</span>) &#123;<br>    PicOperations.<span class="hljs-type">Rule</span> <span class="hljs-variable">thumbnailRule</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>.Rule();<br>    thumbnailRule.setBucket(cosClientConfig.getBucket());<br>    <span class="hljs-type">String</span> <span class="hljs-variable">thumbnailKey</span> <span class="hljs-operator">=</span> FileUtil.mainName(key) + <span class="hljs-string">&quot;_thumbnail.&quot;</span> + FileUtil.getSuffix(key);<br>    thumbnailRule.setFileId(thumbnailKey);<br>    thumbnailRule.setRule(String.format(<span class="hljs-string">&quot;imageMogr2/thumbnail/%sx%s&gt;&quot;</span>, <span class="hljs-number">128</span>, <span class="hljs-number">128</span>));<br>    rules.add(thumbnailRule);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>同时修改PictureUploadTemplate，只有返回缩略图，才获取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(CollUtil.isNotEmpty(objectList)) &#123;<br>               <span class="hljs-type">CIObject</span> <span class="hljs-variable">compressCiObject</span> <span class="hljs-operator">=</span> objectList.get(<span class="hljs-number">0</span>);<br>               <span class="hljs-type">CIObject</span> <span class="hljs-variable">thumbnailCiObject</span> <span class="hljs-operator">=</span> compressCiObject;<br>               <span class="hljs-keyword">if</span>(objectList.size() &gt; <span class="hljs-number">1</span>) &#123;<br>                   thumbnailCiObject = objectList.get(<span class="hljs-number">1</span>);<br>               &#125;<br><br>               <span class="hljs-keyword">return</span> buildResult(originFilename,compressCiObject,thumbnailCiObject);<br>           &#125;<br></code></pre></td></tr></table></figure><h4 id="前端开发">3、前端开发</h4><p>首页图片优先展示缩略图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #cover&gt;<br>&lt;img<br>     style=&quot;height: 200px;object-fit: cover&quot;<br>     :alt=&quot;picture.name&quot;<br>     :src=&quot;picture.thumbnailUrl ?? picture.url&quot;<br>     loading=&quot;lazy&quot;<br>     /&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250719153048295.png"alt="image-20250719153048295" /><figcaption aria-hidden="true">image-20250719153048295</figcaption></figure><p>可以发现明显第一章图片变模糊了</p><h3 id="懒加载">懒加载</h3><p>1）使用html5种<code>loading="lazy"</code>属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;img src=&quot;image.jpg&quot; alt=&quot;示例图片&quot; loading=&quot;lazy&quot; /&gt;<br></code></pre></td></tr></table></figure><p>这种方法不支持IE，动画等复杂图片展示</p><p>2）使用JS的Intersection Observe，检测是否元素进入视觉窗口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;img data-src=<span class="hljs-string">&quot;image.jpg&quot;</span> alt=<span class="hljs-string">&quot;示例图片&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;lazy&quot;</span> /&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">data-src</span>=<span class="hljs-string">&quot;image2.jpg&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;示例图片&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;lazy&quot;</span> /&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 获取所有需要懒加载的图片</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> lazyImages = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;img.lazy&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 创建 Intersection Observer</span></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(<span class="hljs-function">(<span class="hljs-params">entries, observer</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    entries.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">entry</span> =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (entry.<span class="hljs-property">isIntersecting</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> img = entry.<span class="hljs-property">target</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 将 data-src 的值赋给 src 属性</span></span></span><br><span class="language-javascript"><span class="language-xml">        img.<span class="hljs-property">src</span> = img.<span class="hljs-property">dataset</span>.<span class="hljs-property">src</span>;</span></span><br><span class="language-javascript"><span class="language-xml">        img.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;lazy&#x27;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">        observer.<span class="hljs-title function_">unobserve</span>(img); <span class="hljs-comment">// 停止观察已加载的图片</span></span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;);</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-comment">// 观察每个图片</span></span></span><br><span class="language-javascript"><span class="language-xml">  lazyImages.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">image</span> =&gt;</span> observer.<span class="hljs-title function_">observe</span>(image));</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p>3）使用JS滑动时间，当图片进入窗口后，添加src属性</p><p>4）使用现成lazysizes库</p><p>扩展：Ant DesignVue提供了渐进加载，图片先加载模糊的，等图片完全加载后替换</p><h3 id="cdn加速">CDN加速</h3><h4 id="什么是cdn">1、什么是CDN</h4><p>内容分发网络，服务节点部署在世界各地，当用户访问图片资源去找就近节点获取资源，如果就近节点没有，它会作为代理去访问，同时缓存，方便下次用户查询</p><h4 id="cdn优势">2、CDN优势</h4><p>CDN优势主要凸显在网络请求，可以保护源站地址</p><p>而COS优势在于存储，两者搭配天衣无缝</p><h4 id="如何使用cdn">3、如何使用CDN</h4><p>使用CDN后，数据库中保存的就不再是源站地址了，而是CDN自动分配的地址</p><p>由于我们并没有需要加速的域名，等后期解析域名再来配置CDN</p><h3 id="浏览器缓存">浏览器缓存</h3><p>通过设置请求头信息，可以将浏览器资源缓存到本地，当用户再次访问，直接走本地缓存。</p><p>CDN服务提供配置浏览器缓存，后期再做</p><h2 id="四图片存储优化">四、图片存储优化</h2><h3 id="数据沉降">数据沉降</h3><p>数据沉降主要指的是一些热度低的数据可以放到低频访问存储中，防止占据重要资源。</p><p>就比如：我们将常常使用的文件放到固态中，不怎么用的放到机械硬盘中</p><p>沉降主要通过在COS中设置生命周期，明确文件创建后多天后进行沉降</p><h3 id="清理策略">清理策略</h3><p>四种典型清理方案</p><p>1）立即清理：清理图片记录，同时清理关联的COS对象存储的已上传文件</p><p>2）手动清理：管理员手动清理</p><p>3）定期清理：设置定时任务</p><p>4）惰性清理：存储空间不足了，再清理</p><h4 id="实现方案-1">实现方案</h4><p>针对于我们的项目，考虑节约成本，采用前三种</p><h4 id="后端开发-5">后端开发</h4><p>1）CosManager补充删除对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 删除对象</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> key 文件 key</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteObject</span><span class="hljs-params">(String key)</span> <span class="hljs-keyword">throws</span> CosClientException &#123;<br>    cosClient.deleteObject(cosClientConfig.getBucket(), key);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）服务开发清理对象方法</p><p>需要判断是否存在多张图片URL指向一个文件的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Async</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">clearPictureFile</span><span class="hljs-params">(Picture oldPicture)</span> &#123;<br>    <span class="hljs-comment">// 判断该图片是否被多条记录使用</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">pictureUrl</span> <span class="hljs-operator">=</span> oldPicture.getUrl();<br>    <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.lambdaQuery()<br>            .eq(Picture::getUrl, pictureUrl)<br>            .count();<br>    <span class="hljs-comment">// 有不止一条记录用到了该图片，不清理</span><br>    <span class="hljs-keyword">if</span> (count &gt; <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-comment">// FIXME 注意，这里的 url 包含了域名，实际上只要传 key 值（存储路径）就够了</span><br>    cosManager.deleteObject(oldPicture.getUrl());<br>    <span class="hljs-comment">// 清理缩略图</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">thumbnailUrl</span> <span class="hljs-operator">=</span> oldPicture.getThumbnailUrl();<br>    <span class="hljs-keyword">if</span> (StrUtil.isNotBlank(thumbnailUrl)) &#123;<br>        cosManager.deleteObject(thumbnailUrl);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>上述代码使用了@Aspect表示方法可以被异步调用，需要在启动类上添加@EnableAsync才可以使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableAsync</span><br><span class="hljs-meta">@MapperScan(&quot;com.kroot.krpicturebackend.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KrPictureBackendApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(KrPictureBackendApplication.class, args);<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="五优化用户登录">五、优化用户登录</h2><p>本项目中，我们会发现每当我们重启后，用户都需要重新登录</p><p>我们可以通过使用Redis整合Session，维护登录状态</p><h3 id="redis分布式session">Redis分布式Session</h3><p>1）引入spring-session-data-redis包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Spring Session + Redis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.session<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-session-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>2）修改yml配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-comment"># session 配置</span><br>  <span class="hljs-attr">session:</span><br>    <span class="hljs-attr">store-type:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-comment"># session 30 天过期</span><br>    <span class="hljs-attr">timeout:</span> <span class="hljs-number">2592000</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8123</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/api</span><br>    <span class="hljs-comment"># cookie 30 天过期</span><br>    <span class="hljs-attr">session:</span><br>      <span class="hljs-attr">cookie:</span><br>        <span class="hljs-attr">max-age:</span> <span class="hljs-number">2592000</span><br><br></code></pre></td></tr></table></figure><p>3）测试</p><p>这里启动报错，是因为之前User实体类忘记序列化了</p><p>初次启动登录后，重启项目我们会发现还是保持了之前的登录状态，至此搞定！！！</p>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱5-用户传图</title>
    <link href="/2025/07/18/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B105/"/>
    <url>/2025/07/18/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B105/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/18 PM</p>          </div><h1 id="闲话环节">闲话环节</h1><p>今天没有闲话。。。。</p><h2 id="一用户传图审核">一、用户传图审核</h2><h3 id="需求分析">需求分析</h3><p>1）用户上传图片，需要开放权限，也需要像管理员一样添加文件校验</p><p>2）添加审核机制，管理员可以查看到用户上传的图片信息，标记通过或者拒绝</p><h3 id="方案设计">方案设计</h3><ul><li>明确审核逻辑</li><li>设置库表结构</li></ul><h4 id="审核逻辑">1、审核逻辑</h4><p>1）审核状态转换</p><p>管理员可以将拒绝的请求改为通过，反之</p><p>2）自动过审</p><p>管理员自己创建的图片直接上传成功，同时填充信息</p><p>3）用户操作重置状态</p><p>用户在编辑和上传图片，需要将图片的状态改为待审核</p><p>4）控制内容可见性</p><p>用户只能查看到审核通过的图片，而管理员可以看到所有信息</p><p><strong>并发问题是否需要考虑？</strong></p><p>答案是不需要，因为审核都是管理员手动完成，不存在高并发的场景</p><h4 id="库表设计">2、库表设计</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> picture  <br>    <span class="hljs-comment">-- 添加新列  </span><br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> reviewStatus <span class="hljs-type">INT</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-number">0</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;审核状态：0-待审核; 1-通过; 2-拒绝&#x27;</span>,  <br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> reviewMessage <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">512</span>) <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;审核信息&#x27;</span>,  <br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> reviewerId <span class="hljs-type">BIGINT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;审核人 ID&#x27;</span>,  <br>    <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> reviewTime DATETIME <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;审核时间&#x27;</span>;  <br>  <br><span class="hljs-comment">-- 创建基于 reviewStatus 列的索引  </span><br><span class="hljs-keyword">CREATE</span> INDEX idx_reviewStatus <span class="hljs-keyword">ON</span> picture (reviewStatus);<br><br></code></pre></td></tr></table></figure><p>注意：</p><p>使用INT标记每一种审核状态，而不是字符串效率低</p><p>后期需要通过审核状态查询，添加索引</p><h3 id="后端开发">后端开发</h3><h4 id="数据模型开发">1、数据模型开发</h4><p>1）Picture新增字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 状态：0-待审核; 1-通过; 2-拒绝  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> Integer reviewStatus;  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 审核信息  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> String reviewMessage;  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 审核人 id  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> Long reviewerId;  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 审核时间  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> Date reviewTime;<br><br></code></pre></td></tr></table></figure><p>2）图片查询请求新增</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 状态：0-待审核; 1-通过; 2-拒绝  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> Integer reviewStatus;  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 审核信息  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> String reviewMessage;  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 审核人 id  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">private</span> Long reviewerId;<br><br></code></pre></td></tr></table></figure><p>3）新增审核状态枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Getter</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">PictureReviewStatusEnum</span> &#123;  <br>    REVIEWING(<span class="hljs-string">&quot;待审核&quot;</span>, <span class="hljs-number">0</span>),  <br>    PASS(<span class="hljs-string">&quot;通过&quot;</span>, <span class="hljs-number">1</span>),  <br>    REJECT(<span class="hljs-string">&quot;拒绝&quot;</span>, <span class="hljs-number">2</span>);  <br>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String text;  <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> value;  <br>  <br>    PictureReviewStatusEnum(String text, <span class="hljs-type">int</span> value) &#123;  <br>        <span class="hljs-built_in">this</span>.text = text;  <br>        <span class="hljs-built_in">this</span>.value = value;  <br>    &#125;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 根据 value 获取枚举  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PictureReviewStatusEnum <span class="hljs-title function_">getEnumByValue</span><span class="hljs-params">(Integer value)</span> &#123;  <br>        <span class="hljs-keyword">if</span> (ObjUtil.isEmpty(value)) &#123;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>        &#125;  <br>        <span class="hljs-keyword">for</span> (PictureReviewStatusEnum pictureReviewStatusEnum : PictureReviewStatusEnum.values()) &#123;  <br>            <span class="hljs-keyword">if</span> (pictureReviewStatusEnum.value == value) &#123;  <br>                <span class="hljs-keyword">return</span> pictureReviewStatusEnum;  <br>            &#125;  <br>        &#125;  <br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="管理员审核功能">2、管理员审核功能</h4><p>1）开发请求包装类，包含审核图片ID、<code>reviewStatus</code>、<code>reviewMessage</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureReviewRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * id  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long id;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 状态：0-待审核, 1-通过, 2-拒绝  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Integer reviewStatus;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 审核信息  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String reviewMessage;  <br>  <br>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）开发审核服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">void</span> <span class="hljs-title function_">doPictureReview</span><span class="hljs-params">(PictureReviewRequest pictureReviewRequest, User loginUser)</span>;<br></code></pre></td></tr></table></figure><p>实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPictureReview</span><span class="hljs-params">(PictureReviewRequest pictureReviewRequest, User loginUser)</span> &#123;<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureReviewRequest.getId();<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">reviewStatus</span> <span class="hljs-operator">=</span> pictureReviewRequest.getReviewStatus();<br>        <span class="hljs-type">PictureReviewStatusEnum</span> <span class="hljs-variable">reviewStatusEnum</span> <span class="hljs-operator">=</span> PictureReviewStatusEnum.getEnumByValue(reviewStatus);<br><br>        <span class="hljs-keyword">if</span>(id == <span class="hljs-literal">null</span> || reviewStatusEnum == <span class="hljs-literal">null</span> || PictureReviewStatusEnum.REVIEWING.equals(reviewStatus)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(id);<br>        ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>,ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-keyword">if</span>(oldPicture.getReviewStatus().equals(reviewStatus)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;请勿重复审核&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">updatePicture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        BeanUtils.copyProperties(pictureReviewRequest,updatePicture);<br>        updatePicture.setReviewerId(loginUser.getId());<br>        updatePicture.setReviewTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.updateById(updatePicture);<br>        ThrowUtils.throwIf(!res,ErrorCode.OPERATION_ERROR);<br><br>    &#125;<br></code></pre></td></tr></table></figure><p>3）开发审核接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/review&quot;)</span>  <br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span>  <br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">doPictureReview</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureReviewRequest pictureReviewRequest,  </span><br><span class="hljs-params">                                             HttpServletRequest request)</span> &#123;  <br>    ThrowUtils.throwIf(pictureReviewRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);  <br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);  <br>    pictureService.doPictureReview(pictureReviewRequest, loginUser);  <br>    <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="审核状态设置">3、审核状态设置</h4><p>1）权限控制</p><p>由于图片上传也是支持图片编辑功能的，需要做好编辑权限控制(仅本人和管理员)</p><p>修改uploadPicture方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (pictureId != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(pictureId);<br>            ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR,<span class="hljs-string">&quot;图片不存在&quot;</span>);<br><br>            <span class="hljs-keyword">if</span>(!oldPicture.getUserId().equals(loginUser.getId()) || !UserConstant.ADMIN_ROLE.equals(loginUser.getUserRole())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><p>2）设置审核状态</p><p>管理员自动过审，同时填充审核参数；用户上传或编辑图片，审核状态改为待审核</p><p>由于填充审核参数管理员用户都需要使用，这里写一个通用的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">fillReviewParams</span><span class="hljs-params">(Picture picture, User loginUser)</span> &#123;  <br>    <span class="hljs-keyword">if</span> (userService.isAdmin(loginUser)) &#123;  <br>        <span class="hljs-comment">// 管理员自动过审  </span><br>        picture.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());  <br>        picture.setReviewerId(loginUser.getId());  <br>        picture.setReviewMessage(<span class="hljs-string">&quot;管理员自动过审&quot;</span>);  <br>        picture.setReviewTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());  <br>    &#125; <span class="hljs-keyword">else</span> &#123;  <br>        <span class="hljs-comment">// 非管理员，创建或编辑都要改为待审核  </span><br>        picture.setReviewStatus(PictureReviewStatusEnum.REVIEWING.getValue());  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>分别给需要使用的方法调用通用接口</p><p>修改updatePicture接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureUpdateRequest.getId();<br><span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br>ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br><br><span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>pictureService.fillReviewParams(oldPicture,loginUser);<br><br><span class="hljs-comment">// 操作数据库</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> pictureService.updateById(picture);<br>ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR);<br></code></pre></td></tr></table></figure><p>修改editPicture接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (!oldPicture.getUserId().equals(loginUser.getId()) &amp;&amp; !userService.isAdmin(loginUser)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br>pictureService.fillReviewParams(oldPicture,loginUser);<br></code></pre></td></tr></table></figure><p>修改上传图片服务实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">picture.setPicFormat(uploadPictureResult.getPicFormat());<br>picture.setUserId(loginUser.getId());<br>fillReviewParams(picture,loginUser);<br><span class="hljs-comment">// 如果 pictureId 不为空，表示更新，否则是新增</span><br><span class="hljs-keyword">if</span> (pictureId != <span class="hljs-literal">null</span>) &#123;<br>  <span class="hljs-comment">// 如果是更新，需要补充 id 和编辑时间</span><br>  picture.setId(pictureId);<br>  picture.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="控制内容可见性">4、控制内容可见性</h4><p>目前只有主页给用户看，保证用户看到的是过审的，数据又是从/list/page/vo接口中获得，所以修改listPictureVOByPage接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">pictureQueryRequest.setReviewStatus(PictureReviewStatusEnum.PASS.getValue());<br>Page&lt;Picture&gt; picturePage = pictureService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>pictureService.getQueryWrapper(pictureQueryRequest));<br></code></pre></td></tr></table></figure><p>同时修改getQueryWrapper，确保查询条件正确</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Integer</span> <span class="hljs-variable">reviewStatus</span> <span class="hljs-operator">=</span> pictureQueryRequest.getReviewStatus();<br><span class="hljs-type">Long</span> <span class="hljs-variable">reviewerId</span> <span class="hljs-operator">=</span> pictureQueryRequest.getReviewerId();<br><span class="hljs-type">String</span> <span class="hljs-variable">reviewMessage</span> <span class="hljs-operator">=</span> pictureQueryRequest.getReviewMessage();<br>queryWrapper.eq(ObjUtil.isNotEmpty(reviewStatus),<span class="hljs-string">&quot;reviewStatus&quot;</span>,reviewStatus);<br>queryWrapper.eq(StrUtil.isNotBlank(reviewMessage),<span class="hljs-string">&quot;reviewMessage&quot;</span>,reviewMessage);<br>queryWrapper.eq(ObjUtil.isNotEmpty(reviewerId),<span class="hljs-string">&quot;reviewerId&quot;</span>,reviewerId);<br></code></pre></td></tr></table></figure><p>这样依赖，后端也也支持根据审核字段查询了</p><p>至此后端部分完成</p><h3 id="前端开发">前端开发</h3><p>控制首页展示审核通过已经通过后端实现，现在只需要开发审核页面即可</p><h4 id="定义审核常量">1、定义审核常量</h4><p>新建<code>constants/picture.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PIC_REVIEW_STATUS_ENUM</span> = &#123;  <br>  <span class="hljs-attr">REVIEWING</span>: <span class="hljs-number">0</span>,  <br>  <span class="hljs-attr">PASS</span>: <span class="hljs-number">1</span>,  <br>  <span class="hljs-attr">REJECT</span>: <span class="hljs-number">2</span>,  <br>&#125;  <br>  <br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PIC_REVIEW_STATUS_MAP</span> = &#123;  <br>  <span class="hljs-number">0</span>: <span class="hljs-string">&#x27;待审核&#x27;</span>,  <br>  <span class="hljs-number">1</span>: <span class="hljs-string">&#x27;通过&#x27;</span>,  <br>  <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;拒绝&#x27;</span>,  <br>&#125;  <br>  <br><span class="hljs-comment">//方便options 从其中取值</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PIC_REVIEW_STATUS_OPTIONS</span> = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(<span class="hljs-variable constant_">PIC_REVIEW_STATUS_MAP</span>).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">key</span>) =&gt;</span> &#123;  <br>  <span class="hljs-keyword">return</span> &#123;  <br>    <span class="hljs-attr">label</span>: <span class="hljs-variable constant_">PIC_REVIEW_STATUS_MAP</span>[key],  <br>    <span class="hljs-attr">value</span>: key,  <br>  &#125;  <br>&#125;)<br><br></code></pre></td></tr></table></figure><h4 id="管理员审核">2、管理员审核</h4><p>1）column新增审核信息</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;审核状态&#x27;</span>,<br>  <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;reviewMessage&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>2）自定义审核信息展示内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template v-if=&quot;column.dataIndex === &#x27;reviewMessage&#x27;&quot;&gt;<br>  &lt;div&gt;审核状态：&#123;&#123; PIC_REVIEW_STATUS_MAP[record.reviewStatus] &#125;&#125;&lt;/div&gt;<br>  &lt;div&gt;审核信息：&#123;&#123; record.reviewMessage &#125;&#125;&lt;/div&gt;<br>  &lt;div&gt;审核人：&#123;&#123; record.reviewerId &#125;&#125;&lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p>3）添加过审和拒绝操作</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;template v-<span class="hljs-keyword">else</span>-<span class="hljs-keyword">if</span>=<span class="hljs-string">&quot;column.key === &#x27;action&#x27;&quot;</span>&gt;  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-space</span> <span class="hljs-attr">wrap</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-button</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;record.reviewStatus !== PIC_REVIEW_STATUS_ENUM.PASS&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleReview(record, PIC_REVIEW_STATUS_ENUM.PASS)&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span>  </span><br><span class="language-xml">      通过  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-button</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;record.reviewStatus !== PIC_REVIEW_STATUS_ENUM.REJECT&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">danger</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleReview(record, PIC_REVIEW_STATUS_ENUM.REJECT)&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span>  </span><br><span class="language-xml">      拒绝  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&quot;`/add_picture?id=$&#123;record.id&#125;`&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      &gt;</span>编辑  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">danger</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;doDelete(record.id)&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-space</span>&gt;</span></span>  <br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>4）编写审核函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleReview</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">record</span>: API.<span class="hljs-title class_">Picture</span>, <span class="hljs-attr">reviewStatus</span>: <span class="hljs-built_in">number</span></span>) =&gt; &#123;  <br>  <span class="hljs-keyword">const</span> reviewMessage = reviewStatus === <span class="hljs-variable constant_">PIC_REVIEW_STATUS_ENUM</span>.<span class="hljs-property">PASS</span> ? <span class="hljs-string">&#x27;管理员操作通过&#x27;</span> : <span class="hljs-string">&#x27;管理员操作拒绝&#x27;</span>  <br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">doPictureReviewUsingPost</span>(&#123;  <br>    <span class="hljs-attr">id</span>: record.<span class="hljs-property">id</span>,  <br>    reviewStatus,  <br>    reviewMessage,  <br>  &#125;)  <br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;  <br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;审核操作成功&#x27;</span>)  <br>    <span class="hljs-comment">// 重新获取列表  </span><br>    <span class="hljs-title function_">fetchData</span>()  <br>  &#125; <span class="hljs-keyword">else</span> &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;审核操作失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)  <br>  &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="按照审核状态分页查询">3、按照审核状态分页查询</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-form-item label=<span class="hljs-string">&quot;审核状态&quot;</span> name=<span class="hljs-string">&quot;reviewStatus&quot;</span>&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-select</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;searchParams.reviewStatus&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;PIC_REVIEW_STATUS_OPTIONS&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入审核状态&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;min-width: 180px&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">allow-clear</span></span></span><br><span class="hljs-tag"><span class="language-xml">  /&gt;</span></span><br>&lt;/a-form-item&gt;<br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250718153633152.png"alt="image-20250718153633152" /><figcaption aria-hidden="true">image-20250718153633152</figcaption></figure><p>这里有个小问题：用户被拒绝后是看不到自己被拒绝的图片的，后续做空间模块会做</p><h2 id="二url导入图片">二、URL导入图片</h2><h3 id="需求分析-1">需求分析</h3><p>除了上传本地图片，我们还可以开发一种通过输入URL，将远程图片保存到图库中的功能</p><h3 id="方案设计-1">方案设计</h3><p>1）下载图片</p><p>后端使用Hutool的HttpUtil包下的downloadFile函数下载</p><p>2）校验图片</p><p><strong>是下载到本地再校验，还是说有别的方法？</strong></p><p>我们可以对URL字符串本身校验是否完整，或者说可以获取请求头元信息(大小、格式等)，直接校验，节约流量。</p><p>3）上传图片</p><p>校验通过的，直接传入到COS服务器</p><h3 id="后端开发-1">后端开发</h3><h4 id="服务开发">1、服务开发</h4><p>URL上传图片大部分都是和之前写过的<code>uploadPicture</code>方法一致，只需要做以下更改</p><ul><li>参数类型：MultipartFile 类型改为String</li><li>校验图片：先前校验文件，现在校验URL</li><li>获取图片名称：URL获取名称</li><li>临时文件保存：先前是直接保存到临时文件，现在是URL下载文件然后存入临时文件中</li></ul><p>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> UploadPictureResult <span class="hljs-title function_">uploadPictureByUrl</span><span class="hljs-params">(String fileUrl, String uploadPathPrefix)</span> &#123;<br>       <span class="hljs-comment">// 校验图片</span><br>       validPicture(fileUrl);<br>       <span class="hljs-comment">// 图片上传地址</span><br>       <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> RandomUtil.randomString(<span class="hljs-number">16</span>);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">originFilename</span> <span class="hljs-operator">=</span> FileUtil.mainName(fileUrl);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">uploadFilename</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s_%s.%s&quot;</span>, DateUtil.formatDate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()), uuid,<br>               FileUtil.getSuffix(originFilename));<br>       <span class="hljs-type">String</span> <span class="hljs-variable">uploadPath</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;/%s/%s&quot;</span>, uploadPathPrefix, uploadFilename);<br>       <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>       <span class="hljs-keyword">try</span> &#123;<br>           <span class="hljs-comment">// 创建临时文件</span><br>           file = File.createTempFile(uploadPath, <span class="hljs-literal">null</span>);<br>           HttpUtil.downloadFile(fileUrl,file);<br>           <span class="hljs-comment">// 上传图片</span><br>           <span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosManager.putPictureObject(uploadPath, file);<br>           <span class="hljs-type">ImageInfo</span> <span class="hljs-variable">imageInfo</span> <span class="hljs-operator">=</span> putObjectResult.getCiUploadResult().getOriginalInfo().getImageInfo();<br>           <span class="hljs-comment">// 封装返回结果</span><br>           <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UploadPictureResult</span>();<br>           <span class="hljs-type">int</span> <span class="hljs-variable">picWidth</span> <span class="hljs-operator">=</span> imageInfo.getWidth();<br>           <span class="hljs-type">int</span> <span class="hljs-variable">picHeight</span> <span class="hljs-operator">=</span> imageInfo.getHeight();<br>           <span class="hljs-type">double</span> <span class="hljs-variable">picScale</span> <span class="hljs-operator">=</span> NumberUtil.round(picWidth * <span class="hljs-number">1.0</span> / picHeight, <span class="hljs-number">2</span>).doubleValue();<br>           uploadPictureResult.setPicName(FileUtil.mainName(originFilename));<br>           uploadPictureResult.setPicWidth(picWidth);<br>           uploadPictureResult.setPicHeight(picHeight);<br>           uploadPictureResult.setPicScale(picScale);<br>           uploadPictureResult.setPicFormat(imageInfo.getFormat());<br>           uploadPictureResult.setPicSize(FileUtil.size(file));<br>           uploadPictureResult.setUrl(cosClientConfig.getHost() + <span class="hljs-string">&quot;/&quot;</span> + uploadPath);<br>           <span class="hljs-keyword">return</span> uploadPictureResult;<br>       &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>           log.error(<span class="hljs-string">&quot;图片上传到对象存储失败&quot;</span>, e);<br>           <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="hljs-string">&quot;上传失败&quot;</span>);<br>       &#125; <span class="hljs-keyword">finally</span> &#123;<br>           <span class="hljs-built_in">this</span>.deleteTempFile(file);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><h4 id="校验url">2、校验URL</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(String fileUrl)</span> &#123;<br>        ThrowUtils.throwIf(StrUtil.isBlank(fileUrl), ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;URL地址不能为空&quot;</span>);<br><br>        <span class="hljs-comment">//1.校验URL格式</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(fileUrl);<br>        &#125; <span class="hljs-keyword">catch</span> (MalformedURLException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件格式不正确&quot;</span>);<br>        &#125;<br><br><br>        <span class="hljs-comment">// 2. 校验协议</span><br>        ThrowUtils.throwIf(!(fileUrl.startsWith(<span class="hljs-string">&quot;http://&quot;</span>) || fileUrl.startsWith(<span class="hljs-string">&quot;https://&quot;</span>)),ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;仅支持Http和Https协议&quot;</span>);<br><br>        <span class="hljs-comment">//3. 发送HEAD请求验证文件是否存在</span><br>        <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            response = HttpUtil.createRequest(Method.HEAD,fileUrl).execute();<br><br>            <span class="hljs-keyword">if</span>(response.getStatus() != HttpStatus.HTTP_OK) &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-comment">//4. 校验文件类型</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">contentType</span> <span class="hljs-operator">=</span> response.header(<span class="hljs-string">&quot;Content-Type&quot;</span>);<br>            <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(contentType)) &#123;<br>                <span class="hljs-keyword">final</span> List&lt;String&gt; ALLOW_CONTENT_TYPES = Arrays.asList(<span class="hljs-string">&quot;image/jpeg&quot;</span>,<span class="hljs-string">&quot;image/jpg&quot;</span>,<span class="hljs-string">&quot;image/png&quot;</span>,<span class="hljs-string">&quot;image/webp&quot;</span>);<br>                ThrowUtils.throwIf(!ALLOW_CONTENT_TYPES.contains(contentType.toLowerCase()),ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件类型错误&quot;</span>);<br>            &#125;<br><br><br>            <span class="hljs-comment">//5.校验文件大小</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">contentLengthStr</span> <span class="hljs-operator">=</span> response.header(<span class="hljs-string">&quot;Content-Length&quot;</span>);<br>            <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(contentLengthStr)) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-type">long</span> <span class="hljs-variable">contentLength</span> <span class="hljs-operator">=</span> Long.parseLong(contentLengthStr);<br>                    <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">TWO_MB</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024L</span>;<br>                    ThrowUtils.throwIf(contentLength &gt; TWO_MB,ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件大小不能超过2M&quot;</span>);<br>                &#125;<span class="hljs-keyword">catch</span> (NumberFormatException e) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件大小格式错误&quot;</span>);<br>                &#125;<br>            &#125;<br><br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span>(response != <span class="hljs-literal">null</span>) &#123;<br>                response.close();<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>注意</p><ul><li>发送HTTP请求后，最后需要释放资源</li><li>这里发送HEAD请求，HEAD请求访问失败不会报错，并且不用执行后续校验</li></ul><h4 id="代码优化">3、代码优化</h4><p>观察发现，代码方法重复，我们可以使用模版代码模式，将公共的部分提取出来</p><p>分析流程，我们的代码流程大抵都是</p><ul><li>校验图片、URL</li><li>构造上传地址</li><li>存储本地临时文件</li><li>上传</li><li>封装返回图片信息</li><li>清理</li></ul><p>我们可以将流程定义为抽象类，每一步都定义为一个抽象方法</p><p>接下来创建<code>/manager/upload</code>包，模版代码统一管理</p><p>1）定义上传图片模版抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Slf4j</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureUploadTemplate</span> &#123;  <br>  <br>    <span class="hljs-meta">@Resource</span>  <br>    <span class="hljs-keyword">protected</span> CosManager cosManager;  <br>  <br>    <span class="hljs-meta">@Resource</span>  <br>    <span class="hljs-keyword">protected</span> CosClientConfig cosClientConfig;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 模板方法，定义上传流程  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> UploadPictureResult <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(Object inputSource, String uploadPathPrefix)</span> &#123;  <br>        <span class="hljs-comment">// 1. 校验图片  </span><br>        validPicture(inputSource);  <br>  <br>        <span class="hljs-comment">// 2. 图片上传地址  </span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> RandomUtil.randomString(<span class="hljs-number">16</span>);  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">originFilename</span> <span class="hljs-operator">=</span> getOriginFilename(inputSource);  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadFilename</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s_%s.%s&quot;</span>, DateUtil.formatDate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()), uuid,  <br>                FileUtil.getSuffix(originFilename));  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadPath</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;/%s/%s&quot;</span>, uploadPathPrefix, uploadFilename);  <br>  <br>        <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;  <br>        <span class="hljs-keyword">try</span> &#123;  <br>            <span class="hljs-comment">// 3. 创建临时文件  </span><br>            file = File.createTempFile(uploadPath, <span class="hljs-literal">null</span>);  <br>            <span class="hljs-comment">// 处理文件来源（本地或 URL）  </span><br>            processFile(inputSource, file);  <br>  <br>            <span class="hljs-comment">// 4. 上传图片到对象存储  </span><br>            <span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosManager.putPictureObject(uploadPath, file);  <br>            <span class="hljs-type">ImageInfo</span> <span class="hljs-variable">imageInfo</span> <span class="hljs-operator">=</span> putObjectResult.getCiUploadResult().getOriginalInfo().getImageInfo();  <br>  <br>            <span class="hljs-comment">// 5. 封装返回结果  </span><br>            <span class="hljs-keyword">return</span> buildResult(originFilename, file, uploadPath, imageInfo);  <br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;  <br>            log.error(<span class="hljs-string">&quot;图片上传到对象存储失败&quot;</span>, e);  <br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="hljs-string">&quot;上传失败&quot;</span>);  <br>        &#125; <span class="hljs-keyword">finally</span> &#123;  <br>            <span class="hljs-comment">// 6. 清理临时文件  </span><br>            deleteTempFile(file);  <br>        &#125;  <br>    &#125;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 校验输入源（本地文件或 URL）  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(Object inputSource)</span>;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 获取输入源的原始文件名  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title function_">getOriginFilename</span><span class="hljs-params">(Object inputSource)</span>;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 处理输入源并生成本地临时文件  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processFile</span><span class="hljs-params">(Object inputSource, File file)</span> <span class="hljs-keyword">throws</span> Exception;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 封装返回结果  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> UploadPictureResult <span class="hljs-title function_">buildResult</span><span class="hljs-params">(String originFilename, File file, String uploadPath, ImageInfo imageInfo)</span> &#123;  <br>        <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UploadPictureResult</span>();  <br>        <span class="hljs-type">int</span> <span class="hljs-variable">picWidth</span> <span class="hljs-operator">=</span> imageInfo.getWidth();  <br>        <span class="hljs-type">int</span> <span class="hljs-variable">picHeight</span> <span class="hljs-operator">=</span> imageInfo.getHeight();  <br>        <span class="hljs-type">double</span> <span class="hljs-variable">picScale</span> <span class="hljs-operator">=</span> NumberUtil.round(picWidth * <span class="hljs-number">1.0</span> / picHeight, <span class="hljs-number">2</span>).doubleValue();  <br>        uploadPictureResult.setPicName(FileUtil.mainName(originFilename));  <br>        uploadPictureResult.setPicWidth(picWidth);  <br>        uploadPictureResult.setPicHeight(picHeight);  <br>        uploadPictureResult.setPicScale(picScale);  <br>        uploadPictureResult.setPicFormat(imageInfo.getFormat());  <br>        uploadPictureResult.setPicSize(FileUtil.size(file));  <br>        uploadPictureResult.setUrl(cosClientConfig.getHost() + <span class="hljs-string">&quot;/&quot;</span> + uploadPath);  <br>        <span class="hljs-keyword">return</span> uploadPictureResult;  <br>    &#125;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 删除临时文件  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deleteTempFile</span><span class="hljs-params">(File file)</span> &#123;  <br>        <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">null</span>) &#123;  <br>            <span class="hljs-keyword">return</span>;  <br>        &#125;  <br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">deleteResult</span> <span class="hljs-operator">=</span> file.delete();  <br>        <span class="hljs-keyword">if</span> (!deleteResult) &#123;  <br>            log.error(<span class="hljs-string">&quot;file delete error, filepath = &#123;&#125;&quot;</span>, file.getAbsolutePath());  <br>        &#125;  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>上述代码将每一个公共的步骤都抽象出来了</p><p>为了同时兼容MultipartFile和String，定义统一类型Object</p><p>2）编写上传本地图片自类，继承抽象类，同时打上<code>@Service</code>生成Bean实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilePictureUpload</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PictureUploadTemplate</span> &#123;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(Object inputSource)</span> &#123;  <br>        <span class="hljs-type">MultipartFile</span> <span class="hljs-variable">multipartFile</span> <span class="hljs-operator">=</span> (MultipartFile) inputSource;  <br>        ThrowUtils.throwIf(multipartFile == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件不能为空&quot;</span>);  <br>        <span class="hljs-comment">// 1. 校验文件大小  </span><br>        <span class="hljs-type">long</span> <span class="hljs-variable">fileSize</span> <span class="hljs-operator">=</span> multipartFile.getSize();  <br>        <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">ONE_M</span> <span class="hljs-operator">=</span> <span class="hljs-number">1024</span> * <span class="hljs-number">1024L</span>;  <br>        ThrowUtils.throwIf(fileSize &gt; <span class="hljs-number">2</span> * ONE_M, ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件大小不能超过 2M&quot;</span>);  <br>        <span class="hljs-comment">// 2. 校验文件后缀  </span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileSuffix</span> <span class="hljs-operator">=</span> FileUtil.getSuffix(multipartFile.getOriginalFilename());  <br>        <span class="hljs-comment">// 允许上传的文件后缀  </span><br>        <span class="hljs-keyword">final</span> List&lt;String&gt; ALLOW_FORMAT_LIST = Arrays.asList(<span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>, <span class="hljs-string">&quot;webp&quot;</span>);  <br>        ThrowUtils.throwIf(!ALLOW_FORMAT_LIST.contains(fileSuffix), ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件类型错误&quot;</span>);  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> String <span class="hljs-title function_">getOriginFilename</span><span class="hljs-params">(Object inputSource)</span> &#123;  <br>        <span class="hljs-type">MultipartFile</span> <span class="hljs-variable">multipartFile</span> <span class="hljs-operator">=</span> (MultipartFile) inputSource;  <br>        <span class="hljs-keyword">return</span> multipartFile.getOriginalFilename();  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processFile</span><span class="hljs-params">(Object inputSource, File file)</span> <span class="hljs-keyword">throws</span> Exception &#123;  <br>        <span class="hljs-type">MultipartFile</span> <span class="hljs-variable">multipartFile</span> <span class="hljs-operator">=</span> (MultipartFile) inputSource;  <br>        multipartFile.transferTo(file);  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）编写URL上传图片，继承模版类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.manager.upload;<br><br><span class="hljs-keyword">import</span> cn.hutool.core.io.FileUtil;<br><span class="hljs-keyword">import</span> cn.hutool.core.util.StrUtil;<br><span class="hljs-keyword">import</span> cn.hutool.http.HttpResponse;<br><span class="hljs-keyword">import</span> cn.hutool.http.HttpStatus;<br><span class="hljs-keyword">import</span> cn.hutool.http.HttpUtil;<br><span class="hljs-keyword">import</span> cn.hutool.http.Method;<br><span class="hljs-keyword">import</span> com.kroot.krpicturebackend.exception.BusinessException;<br><span class="hljs-keyword">import</span> com.kroot.krpicturebackend.exception.ErrorCode;<br><span class="hljs-keyword">import</span> com.kroot.krpicturebackend.exception.ThrowUtils;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.net.MalformedURLException;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@Service</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UrlPictureUpload</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PictureUploadTemplate</span> &#123;  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(Object inputSource)</span> &#123;  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> (String) inputSource;  <br>        ThrowUtils.throwIf(StrUtil.isBlank(fileUrl), ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件地址不能为空&quot;</span>);<br>        <span class="hljs-comment">//1.校验URL格式</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(fileUrl);<br>        &#125; <span class="hljs-keyword">catch</span> (MalformedURLException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件格式不正确&quot;</span>);<br>        &#125;<br><br><br>        <span class="hljs-comment">// 2. 校验协议</span><br>        ThrowUtils.throwIf(!(fileUrl.startsWith(<span class="hljs-string">&quot;http://&quot;</span>) || fileUrl.startsWith(<span class="hljs-string">&quot;https://&quot;</span>)),ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;仅支持Http和Https协议&quot;</span>);<br><br>        <span class="hljs-comment">//3. 发送HEAD请求验证文件是否存在</span><br>        <span class="hljs-type">HttpResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            response = HttpUtil.createRequest(Method.HEAD,fileUrl).execute();<br><br>            <span class="hljs-keyword">if</span>(response.getStatus() != HttpStatus.HTTP_OK) &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-comment">//4. 校验文件类型</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">contentType</span> <span class="hljs-operator">=</span> response.header(<span class="hljs-string">&quot;Content-Type&quot;</span>);<br>            <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(contentType)) &#123;<br>                <span class="hljs-keyword">final</span> List&lt;String&gt; ALLOW_CONTENT_TYPES = Arrays.asList(<span class="hljs-string">&quot;image/jpeg&quot;</span>,<span class="hljs-string">&quot;image/jpg&quot;</span>,<span class="hljs-string">&quot;image/png&quot;</span>,<span class="hljs-string">&quot;image/webp&quot;</span>);<br>                ThrowUtils.throwIf(!ALLOW_CONTENT_TYPES.contains(contentType.toLowerCase()),ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件类型错误&quot;</span>);<br>            &#125;<br><br><br>            <span class="hljs-comment">//5.校验文件大小</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">contentLengthStr</span> <span class="hljs-operator">=</span> response.header(<span class="hljs-string">&quot;Content-Length&quot;</span>);<br>            <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(contentLengthStr)) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-type">long</span> <span class="hljs-variable">contentLength</span> <span class="hljs-operator">=</span> Long.parseLong(contentLengthStr);<br>                    <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">TWO_MB</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024L</span>;<br>                    ThrowUtils.throwIf(contentLength &gt; TWO_MB,ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件大小不能超过2M&quot;</span>);<br>                &#125;<span class="hljs-keyword">catch</span> (NumberFormatException e) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;文件大小格式错误&quot;</span>);<br>                &#125;<br>            &#125;<br><br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span>(response != <span class="hljs-literal">null</span>) &#123;<br>                response.close();<br>            &#125;<br>        &#125;<br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> String <span class="hljs-title function_">getOriginFilename</span><span class="hljs-params">(Object inputSource)</span> &#123;  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> (String) inputSource;  <br>        <span class="hljs-comment">// 从 URL 中提取文件名  </span><br>        <span class="hljs-keyword">return</span> FileUtil.mainName(fileUrl);  <br>    &#125;  <br>  <br>    <span class="hljs-meta">@Override</span>  <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processFile</span><span class="hljs-params">(Object inputSource, File file)</span> <span class="hljs-keyword">throws</span> Exception &#123;  <br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> (String) inputSource;  <br>        <span class="hljs-comment">// 下载文件到临时目录  </span><br>        HttpUtil.downloadFile(fileUrl, file);  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>优化完后，将原方法FileManager 打上<code>@Deprecated</code>注解</p><h4 id="图片上传服务支持url上传">4、图片上传服务支持URL上传</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">PictureVO <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(Object inputSource, PictureUploadRequest pictureUploadRequest, User loginUser)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> PictureVO <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(Object inputSource, PictureUploadRequest pictureUploadRequest, User loginUser)</span> &#123;<br>        ThrowUtils.throwIf(inputSource == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;图片为空&quot;</span>);<br>        <span class="hljs-comment">// 用于判断是新增还是更新图片</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">pictureId</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span> (pictureUploadRequest != <span class="hljs-literal">null</span>) &#123;<br>            pictureId = pictureUploadRequest.getId();<br>        &#125;<br>        <span class="hljs-comment">// 如果是更新图片，需要校验图片是否存在</span><br>        <span class="hljs-keyword">if</span> (pictureId != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getById(pictureId);<br>            ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR,<span class="hljs-string">&quot;图片不存在&quot;</span>);<br><br>            <span class="hljs-keyword">if</span>(!oldPicture.getUserId().equals(loginUser.getId()) || !UserConstant.ADMIN_ROLE.equals(loginUser.getUserRole())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// 上传图片，得到信息</span><br>        <span class="hljs-comment">// 按照用户 id 划分目录</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadPathPrefix</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;public/%s&quot;</span>, loginUser.getId());<br>        <span class="hljs-type">PictureUploadTemplate</span> <span class="hljs-variable">pictureUploadTemplate</span> <span class="hljs-operator">=</span> filePictureUpload;<br><br>        <span class="hljs-keyword">if</span>(inputSource <span class="hljs-keyword">instanceof</span> String) &#123;<br>            pictureUploadTemplate = urlPictureUpload;<br>        &#125;<br><br>        <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> pictureUploadTemplate.uploadPicture(inputSource,uploadPathPrefix);<br>        <span class="hljs-comment">// 构造要入库的图片信息</span><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        picture.setUrl(uploadPictureResult.getUrl());<br>        picture.setName(uploadPictureResult.getPicName());<br>        picture.setPicSize(uploadPictureResult.getPicSize());<br>        picture.setPicWidth(uploadPictureResult.getPicWidth());<br>        picture.setPicHeight(uploadPictureResult.getPicHeight());<br>        picture.setPicScale(uploadPictureResult.getPicScale());<br>        picture.setPicFormat(uploadPictureResult.getPicFormat());<br>        picture.setUserId(loginUser.getId());<br>        fillReviewParams(picture,loginUser);<br>        <span class="hljs-comment">// 如果 pictureId 不为空，表示更新，否则是新增</span><br>        <span class="hljs-keyword">if</span> (pictureId != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-comment">// 如果是更新，需要补充 id 和编辑时间</span><br>            picture.setId(pictureId);<br>            picture.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>        &#125;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.saveOrUpdate(picture);<br>        ThrowUtils.throwIf(!result, ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;图片上传失败&quot;</span>);<br>        <span class="hljs-keyword">return</span> PictureVO.objToVo(picture);<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="接口开发">5、接口开发</h4><p>1）图片上传封装类新增fileUrl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureUploadRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片 id（用于修改）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-keyword">private</span> String fileUrl;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）PictureController 新增<code>/upload/url</code>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/upload/url&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;PictureVO&gt; <span class="hljs-title function_">uploadPictureByUrl</span><span class="hljs-params">(</span><br><span class="hljs-params">        <span class="hljs-meta">@RequestBody</span> PictureUploadRequest pictureUploadRequest,</span><br><span class="hljs-params">        HttpServletRequest request)</span> &#123;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> pictureUploadRequest.getFileUrl();<br>    <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> pictureService.uploadPicture(fileUrl, pictureUploadRequest, loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(pictureVO);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="前端开发-1">前端开发</h3><p>我们先开发一个像上传本地图片一样的URL上传的界面</p><h4 id="开发url上传组件">1、开发URL上传组件</h4><p>输入框 + 提交按钮</p><p>这里使用<ahref="https://antdv.com/components/input-cn#components-input-demo-group">复合输入框</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;url-picture-upload&quot;&gt;  <br>  &lt;a-input-group compact style=&quot;margin-bottom: 16px&quot;&gt;  <br>    &lt;a-input v-model:value=&quot;fileUrl&quot; style=&quot;width: calc(100% - 120px)&quot; placeholder=&quot;请输入图片 URL&quot; /&gt;  <br>    &lt;a-button type=&quot;primary&quot; :loading=&quot;loading&quot; @click=&quot;handleUpload&quot; style=&quot;width: 120px&quot;&gt;提交&lt;/a-button&gt;  <br>  &lt;/a-input-group&gt;  <br>  &lt;img v-if=&quot;picture?.url&quot; :src=&quot;picture?.url&quot; alt=&quot;avatar&quot; /&gt;  <br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>调用后端接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> loading = ref&lt;<span class="hljs-built_in">boolean</span>&gt;(<span class="hljs-literal">false</span>)  <br><span class="hljs-keyword">const</span> fileUrl = ref&lt;<span class="hljs-built_in">string</span>&gt;()  <br>  <br><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 上传  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleUpload</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;  <br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>  <br>  <span class="hljs-keyword">try</span> &#123;  <br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">params</span>: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureUploadRequest</span> = &#123; <span class="hljs-attr">fileUrl</span>: fileUrl.<span class="hljs-property">value</span> &#125;  <br>    <span class="hljs-keyword">if</span> (props.<span class="hljs-property">picture</span>) &#123;  <br>      params.<span class="hljs-property">id</span> = props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span>  <br>    &#125;  <br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureByUrlUsingPost</span>(params)  <br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;  <br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;图片上传成功&#x27;</span>)  <br>      <span class="hljs-comment">// 将上传成功的图片信息传递给父组件  </span><br>      props.<span class="hljs-property">onSuccess</span>?.(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>)  <br>    &#125; <span class="hljs-keyword">else</span> &#123;  <br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)  <br>    &#125;  <br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败&#x27;</span>)  <br>  &#125; <span class="hljs-keyword">finally</span> &#123;  <br>    loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>  <br>  &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="开发创建页面">2、开发创建页面</h4><p>之前做了上传本地图片，我们可以将这两种方式通过<ahref="https://antdv.com/components/tabs-cn">Tabs</a>包裹，用户去自己选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-tabs v-model:activeKey=&quot;uploadType&quot;<br>&gt;&gt;<br>  &lt;a-tab-pane key=&quot;file&quot; tab=&quot;文件上传&quot;&gt;<br>    &lt;PictureUpload :picture=&quot;picture&quot; :onSuccess=&quot;onSuccess&quot; /&gt;<br>  &lt;/a-tab-pane&gt;<br>  &lt;a-tab-pane key=&quot;url&quot; tab=&quot;URL 上传&quot; force-render&gt;<br>    &lt;UrlPictureUpload :picture=&quot;picture&quot; :onSuccess=&quot;onSuccess&quot; /&gt;<br>  &lt;/a-tab-pane&gt;<br>&lt;/a-tabs&gt;<br></code></pre></td></tr></table></figure><p>默认情况下选择file本地上传</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> uploadType = ref&lt;<span class="hljs-string">&#x27;file&#x27;</span> | <span class="hljs-string">&#x27;url&#x27;</span>&gt;(<span class="hljs-string">&#x27;file&#x27;</span>)<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250718175408869.png"alt="image-20250718175408869" /><figcaption aria-hidden="true">image-20250718175408869</figcaption></figure><h2 id="三批量抓取和创建图片">三、批量抓取和创建图片</h2><h3 id="需求分析-2">需求分析</h3><p>为了快速丰富我们的图库，我们需要利用爬虫去网上抓取数据</p><p>这个功能只能给普通用户开放权限，防止网站被目标源封IP</p><h3 id="方案设计-2">方案设计</h3><ul><li>怎么抓图片</li><li>抓取和导入规则</li></ul><h4 id="如何抓取图片">1、如何抓取图片</h4><p>因为大部分图片资源网站都是有版权，推荐在搜索引擎中抓取，这里我们选择bing图库</p><p>可以看到有很多图片，接下俩我们怎么抓取呢？</p><figure><img src="/img/pictureLibrary/image-20250718175928544.png"alt="image-20250718175928544" /><figcaption aria-hidden="true">image-20250718175928544</figcaption></figure><p>这里分为两种方法</p><ul><li>解析网站HTML页面，提取图片地址，再通过URL下载</li><li>直接调用后端图片地址接口</li></ul><p>如何获取到获取图片地址接口？</p><p>打开F12网络，在主页刷新我们并不清楚哪一个是调用后端获取图片的接口</p><p>但是你想网页往往采用懒加载，那我们向下滑动去刷新新页面，那不就会调用后端接口</p><figure><img src="/img/pictureLibrary/image-20250718181030548.png"alt="image-20250718181030548" /><figcaption aria-hidden="true">image-20250718181030548</figcaption></figure><p>我们会发现他请求的网址是<code>https://cn.bing.com/images/async?....</code>拿到url一个一个删除属性，最终可以确定https://cn.bing.com/images/async?q=s&amp;mmasync=1是我们想要的获取图片数据的接口</p><p>由于该接口返回的是HTML文档，我们可以使用Java中的jsoup解析图片地址</p><p>但是需要我们提前知道图片的标签元素，最外层我们可以定位到dgControl，内层我们会发现每张图片都设置了<code>class=ming</code></p><figure><img src="/img/pictureLibrary/image-20250718182100989.png"alt="image-20250718182100989" /><figcaption aria-hidden="true">image-20250718182100989</figcaption></figure><p>注意：图片附加参数需要清除，否则会影响图片质量，还会因为转义字符报错</p><h4 id="抓取和导入规则">2、抓取和导入规则</h4><p>在抓取前，我们应该明确管理员传入参数</p><ul><li>关键词</li><li>抓取数量</li></ul><h3 id="后端">后端</h3><h4 id="封装请求题">1、封装请求题</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureUploadByBatchRequest</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 搜索词  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String searchText;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 抓取数量  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Integer</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务开发-1">2、服务开发</h4><p>1）引入jsoup</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- HTML 解析：https://jsoup.org/ --&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.jsoup<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jsoup<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.15.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>2）开发批量抓取服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">Integer <span class="hljs-title function_">uploadPictureByBatch</span><span class="hljs-params">(PictureUploadByBatchRequest pictureUploadByBatchRequest, User loginUser)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">uploadPictureByBatch</span><span class="hljs-params">(PictureUploadByBatchRequest pictureUploadByBatchRequest, User loginUser)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">searchText</span> <span class="hljs-operator">=</span> pictureUploadByBatchRequest.getSearchText();<br>        <span class="hljs-comment">// 格式化数量</span><br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> pictureUploadByBatchRequest.getCount();<br>        ThrowUtils.throwIf(count &gt; <span class="hljs-number">30</span>, ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;最多 30 条&quot;</span>);<br>        <span class="hljs-comment">// 要抓取的地址</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fetchUrl</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;https://cn.bing.com/images/async?q=%s&amp;mmasync=1&quot;</span>, searchText);<br>        Document document;<br>        <span class="hljs-keyword">try</span> &#123;<br>            document = Jsoup.connect(fetchUrl).get();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            log.error(<span class="hljs-string">&quot;获取页面失败&quot;</span>, e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;获取页面失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">Element</span> <span class="hljs-variable">div</span> <span class="hljs-operator">=</span> document.getElementsByClass(<span class="hljs-string">&quot;dgControl&quot;</span>).first();<br>        <span class="hljs-keyword">if</span> (ObjUtil.isNull(div)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.OPERATION_ERROR, <span class="hljs-string">&quot;获取元素失败&quot;</span>);<br>        &#125;<br>        <span class="hljs-type">Elements</span> <span class="hljs-variable">imgElementList</span> <span class="hljs-operator">=</span> div.select(<span class="hljs-string">&quot;img.mimg&quot;</span>);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">uploadCount</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (Element imgElement : imgElementList) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> imgElement.attr(<span class="hljs-string">&quot;src&quot;</span>);<br>            <span class="hljs-keyword">if</span> (StrUtil.isBlank(fileUrl)) &#123;<br>                log.info(<span class="hljs-string">&quot;当前链接为空，已跳过: &#123;&#125;&quot;</span>, fileUrl);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-comment">// 处理图片上传地址，防止出现转义问题</span><br>            <span class="hljs-type">int</span> <span class="hljs-variable">questionMarkIndex</span> <span class="hljs-operator">=</span> fileUrl.indexOf(<span class="hljs-string">&quot;?&quot;</span>);<br>            <span class="hljs-keyword">if</span> (questionMarkIndex &gt; -<span class="hljs-number">1</span>) &#123;<br>                fileUrl = fileUrl.substring(<span class="hljs-number">0</span>, questionMarkIndex);<br>            &#125;<br>            <span class="hljs-comment">// 上传图片</span><br>            <span class="hljs-type">PictureUploadRequest</span> <span class="hljs-variable">pictureUploadRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PictureUploadRequest</span>();<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.uploadPicture(fileUrl, pictureUploadRequest, loginUser);<br>                log.info(<span class="hljs-string">&quot;图片上传成功, id = &#123;&#125;&quot;</span>, pictureVO.getId());<br>                uploadCount++;<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                log.error(<span class="hljs-string">&quot;图片上传失败&quot;</span>, e);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (uploadCount &gt;= count) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> uploadCount;<br>    &#125;<br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>如果想要抓取更多数量，建议设置<code>Thread.sleep</code>等待一段时间再抓</p><h4 id="接口开发-1">3、接口开发</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/upload/batch&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Integer&gt; <span class="hljs-title function_">uploadPictureByBatch</span><span class="hljs-params">(</span><br><span class="hljs-params">        <span class="hljs-meta">@RequestBody</span> PictureUploadByBatchRequest pictureUploadByBatchRequest,</span><br><span class="hljs-params">        HttpServletRequest request)</span> &#123;<br>    ThrowUtils.throwIf(pictureUploadByBatchRequest == <span class="hljs-literal">null</span>,ErrorCode.PARAMS_ERROR);<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">uploadCount</span> <span class="hljs-operator">=</span> pictureService.uploadPictureByBatch(pictureUploadByBatchRequest,loginUser);<br>    <span class="hljs-keyword">return</span> ResultUtils.success(uploadCount);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="批量插入图片设置名称">4、批量插入图片设置名称</h4><p>我们批量导入的图片的名称取决于其URL，名称是乱七八糟的，我们其实可以在搜索关键词的基础上加上后缀</p><p>例如搜索 美食，获取到的图片是美食1，美食2。。。。</p><p>下面介绍如何实现</p><p>1）PictureUploadByBatchRequest请求类添加namePrefix字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> String namePrefix;<br></code></pre></td></tr></table></figure><p>2）图片名称是在uploadPicture方法中通过UploadPictureResult设置给图片的，如果像自定义，可以在该方法PictureUploadRequest补充参数picName</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> String picName;<br></code></pre></td></tr></table></figure><p>3）修改服务方法，设置名称为我们自定义的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>picture.setUrl(uploadPictureResult.getUrl());<br><span class="hljs-type">String</span> <span class="hljs-variable">picName</span> <span class="hljs-operator">=</span> uploadPictureResult.getPicName();<br><span class="hljs-keyword">if</span>(pictureUploadRequest != <span class="hljs-literal">null</span> &amp;&amp; StrUtil.isNotBlank(pictureUploadRequest.getPicName())) &#123;<br>  picName = pictureUploadRequest.getPicName();<br>&#125;<br>picture.setName(picName);<br></code></pre></td></tr></table></figure><p>4）修改批量上传服务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">namePrefix</span> <span class="hljs-operator">=</span> pictureUploadByBatchRequest.getNamePrefix();<br><span class="hljs-comment">// 上传图片</span><br><span class="hljs-type">PictureUploadRequest</span> <span class="hljs-variable">pictureUploadRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PictureUploadRequest</span>();<br><span class="hljs-keyword">if</span>(StrUtil.isNotBlank(namePrefix)) &#123;<br>pictureUploadRequest.setPicName(namePrefix + (uploadCount + <span class="hljs-number">1</span>));<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口测试">5、接口测试</h4><figure><img src="/img/pictureLibrary/image-20250719115455843.png"alt="image-20250719115455843" /><figcaption aria-hidden="true">image-20250719115455843</figcaption></figure><h3 id="前端开发-2">前端开发</h3><p>刚刚我们已经完成了批量创建的接口，接下来需要创建批量创建的页面</p><h4 id="图片管理页面补充批量创建">1、图片管理页面补充批量创建</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-space&gt;  <br>  &lt;a-button type=&quot;primary&quot; href=&quot;/add_picture&quot; target=&quot;_blank&quot;&gt;+ 创建图片&lt;/a-button&gt;  <br>  &lt;a-button type=&quot;primary&quot; href=&quot;/add_picture/batch&quot; target=&quot;_blank&quot; ghost&gt;+ 批量创建图片&lt;/a-button&gt;  <br>&lt;/a-space&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250719115822048.png"alt="image-20250719115822048" /><figcaption aria-hidden="true">image-20250719115822048</figcaption></figure><h4 id="开发批量创建页面">2、开发批量创建页面</h4><p>1）添加路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/add_picture/batch&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;批量创建图片&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">AddPictureBatchPage</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p>注意：这个页面是限制用户访问的</p><p>2）复制粘贴AddPicturePage，修改表单项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;addPictureBatchPage&quot;&gt;  <br>  &lt;h2 style=&quot;margin-bottom: 16px&quot;&gt;批量创建图片&lt;/h2&gt;  <br>  &lt;a-form layout=&quot;vertical&quot; :model=&quot;formData&quot; @finish=&quot;handleSubmit&quot;&gt;  <br>    &lt;a-form-item label=&quot;关键词&quot; name=&quot;searchText&quot;&gt;  <br>      &lt;a-input v-model:value=&quot;formData.searchText&quot; placeholder=&quot;请输入关键词&quot; /&gt;  <br>    &lt;/a-form-item&gt;  <br>    &lt;a-form-item label=&quot;抓取数量&quot; name=&quot;count&quot;&gt;  <br>      &lt;a-input-number  <br>        v-model:value=&quot;formData.count&quot;  <br>        placeholder=&quot;请输入数量&quot;  <br>        style=&quot;min-width: 180px&quot;  <br>        :min=&quot;1&quot;  <br>        :max=&quot;30&quot;  <br>        allow-clear  <br>      /&gt;  <br>    &lt;/a-form-item&gt;  <br>    &lt;a-form-item label=&quot;名称前缀&quot; name=&quot;namePrefix&quot;&gt;  <br>      &lt;a-input v-model:value=&quot;formData.namePrefix&quot; placeholder=&quot;请输入名称前缀，会自动补充序号&quot; /&gt;  <br>    &lt;/a-form-item&gt;  <br>    &lt;a-form-item&gt;  <br>      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100%&quot; :loading=&quot;loading&quot;&gt;  <br>        执行任务  <br>      &lt;/a-button&gt;  <br>    &lt;/a-form-item&gt;  <br>  &lt;/a-form&gt;  <br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>定义数据项以及加载情况</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> formData = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureUploadByBatchRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">count</span>: <span class="hljs-number">10</span><br>&#125;)<br><br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">false</span>)<br></code></pre></td></tr></table></figure><h4 id="简单讲一下-ref和reactive的区别">简单讲一下ref和reactive的区别</h4><table><thead><tr><th>ref</th><th>reactive</th></tr></thead><tbody><tr><td>修饰基本类型和对象</td><td>仅对象</td></tr><tr><td>需要通过.value访问</td><td>可以直接访问</td></tr><tr><td>解构后保持响应式</td><td>解构失去响应式可以通过toRefs解决</td></tr></tbody></table><p>添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#addPictureBatchPage</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">720px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）编写提交函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>()<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureByBatchUsingPost</span>(&#123;<br>    ...formData<br>  &#125;);<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;批量创建成功&#x27;</span>)<br>    router.<span class="hljs-title function_">push</span>(&#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>    &#125;)<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;批量创建失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>效果展示</p><figure><img src="/img/pictureLibrary/image-20250719121442242.png"alt="image-20250719121442242" /><figcaption aria-hidden="true">image-20250719121442242</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱4-图片模块</title>
    <link href="/2025/07/16/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B104/"/>
    <url>/2025/07/16/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B104/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/16 PM</p>          </div><h1 id="每日闲话环节">每日闲话环节</h1><p>今天是7月16号，博主已经鸽了2天了，这个项目我需要在8月分之前完成，好作为我的实习项目</p><p>鸽了两天干什么去了？额博主偷懒去了，感觉做什么事情都没有什么动力。。。。</p><p>今天玩逃生试炼遇到了一个新手老外，起初他拉我组队，我点错了同意了，进去后我寻思两个人就玩嘛</p><p>看着它懵懵懂懂的样子，感觉很有意思，在做一些简单的事情，我会让他做，复杂的都交给我这个老手</p><p>Steam交流我就问他来自哪一些客套话，大部分情况还是不怎么交流的</p><p>玩了大概3个小时，他不玩了说"它先下了，以后再玩，祝你有很好的一天"，突然就感觉我的付出没有白费hhh</p><p>也谢谢他 给我一个很好的面对生活的态度，让我不至于在游戏中堕落下去</p><p>不煽情了，来补一下之前的内容吧</p><h2 id="图片模块前端模块">图片模块（前端模块）</h2><h3 id="图片创建页面">图片创建页面</h3><p>创建<code>/pages/AddPicturePage</code>界面</p><h4 id="添加路由和菜单项">1）添加路由和菜单项</h4><p>路由添加</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/add_picture&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;创建图片&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">AddPicturePage</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p>GlobalHeader菜单项添加</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/add_picture&#x27;</span>,<br>  <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;创建图片&#x27;</span>,<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建图片&#x27;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><h4 id="上传图片组件引入">2）上传图片组件引入</h4><p>1、这里使用Ant Design Vue 的upload组件</p><p><ahref="https://antdv.com/components/upload-cn#components-upload-demo-avatar">参考文档</a></p><figure><img src="/img/pictureLibrary/image-20250714112127767.png"alt="image-20250714112127767" /><figcaption aria-hidden="true">image-20250714112127767</figcaption></figure><p>2、该组件为受控组件，需要父组件传递图片信息</p><p>子组件代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> &#123;<br>  picture?: <span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span><br>  onSuccess?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">newPicture</span>:API.<span class="hljs-title class_">PictureVO</span></span>) =&gt;</span> <span class="hljs-built_in">void</span><br>&#125;<br><br><span class="hljs-keyword">const</span> props = defineProps&lt;<span class="hljs-title class_">Props</span>&gt;()<br></code></pre></td></tr></table></figure><p><code>defineProps&lt;Props&gt;</code>在这里起到了什么作用？</p><p>个人理解：声明接口Props内部信息，供外部使用</p><p><code>onSuccess</code>函数会在图片上传后，将得到的图片信息返回给父组件</p><p>父组件给子组件传参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;PictureUpload :picture=&quot;picture&quot; :onSuccess=&quot;onSuccess&quot;/&gt;<br></code></pre></td></tr></table></figure><p>父组件代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> picture = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span>&gt;()<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSuccess</span> = (<span class="hljs-params"><span class="hljs-attr">newPicture</span>:API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;<br>  picture.<span class="hljs-property">value</span> = newPicture<br>&#125;<br></code></pre></td></tr></table></figure><p>3、页面结构代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;picture-upload&quot;&gt;  <br>  &lt;a-upload  <br>    list-type=&quot;picture-card&quot;  <br>    :show-upload-list=&quot;false&quot;  <br>    :custom-request=&quot;handleUpload&quot;  <br>    :before-upload=&quot;beforeUpload&quot;  <br>  &gt;  <br>    &lt;img v-if=&quot;picture?.url&quot; :src=&quot;picture?.url&quot; alt=&quot;avatar&quot; /&gt;  <br>    &lt;div v-else&gt;  <br>      &lt;loading-outlined v-if=&quot;loading&quot;&gt;&lt;/loading-outlined&gt;  <br>      &lt;plus-outlined v-else&gt;&lt;/plus-outlined&gt;  <br>      &lt;div class=&quot;ant-upload-text&quot;&gt;点击或拖拽上传图片&lt;/div&gt;  <br>    &lt;/div&gt;  <br>  &lt;/a-upload&gt;  <br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>4、上传前图片校验</p><p>使用默认校验规则</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">beforeUpload</span> = (<span class="hljs-params"><span class="hljs-attr">file</span>: <span class="hljs-title class_">UploadProps</span>[<span class="hljs-string">&#x27;fileList&#x27;</span>][<span class="hljs-built_in">number</span>]</span>) =&gt; &#123;  <br>  <span class="hljs-keyword">const</span> isJpgOrPng = file.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;image/jpeg&#x27;</span> || file.<span class="hljs-property">type</span> === <span class="hljs-string">&#x27;image/png&#x27;</span>  <br>  <span class="hljs-keyword">if</span> (!isJpgOrPng) &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;不支持上传该格式的图片，推荐 jpg 或 png&#x27;</span>)  <br>  &#125;  <br>  <span class="hljs-keyword">const</span> isLt2M = file.<span class="hljs-property">size</span> / <span class="hljs-number">1024</span> / <span class="hljs-number">1024</span> &lt; <span class="hljs-number">2</span>  <br>  <span class="hljs-keyword">if</span> (!isLt2M) &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;不能上传超过 2M 的图片&#x27;</span>)  <br>  &#125;  <br>  <span class="hljs-keyword">return</span> isJpgOrPng &amp;&amp; isLt2M  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>上传图片，调用后端接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleUpload</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">&#123;file&#125;: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>;<br><br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> params = props.<span class="hljs-property">picture</span> ? &#123;<span class="hljs-attr">id</span>: props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span>&#125; : &#123;&#125;;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">uploadPictureUsingPost</span>(params,&#123;&#125;,file)<br><br>    <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;图片上传成功&#x27;</span>);<br>      <span class="hljs-comment">//将上传成功的图片信息返回给父元素</span><br>      props.<span class="hljs-property">onSuccess</span>?.(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>)<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;图片上传失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>);<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;图片上传失败&#x27;</span>)<br>  &#125; <span class="hljs-keyword">finally</span> &#123;<br>    loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span><br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>在调用上传图片接口的时候，如果已经存在pictureId，需要对上传的图片进行更新，将ID参数添加到请求中，防止出现创建新图片记录</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> params = props.<span class="hljs-property">picture</span> ? &#123; <span class="hljs-attr">id</span>: props.<span class="hljs-property">picture</span>.<span class="hljs-property">id</span> &#125; : &#123;&#125;;<br></code></pre></td></tr></table></figure><p>5、增加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#picture-upload</span> :<span class="hljs-built_in">deep</span>(.ant-upload) &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span> <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span> <span class="hljs-meta">!important</span>;<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">152px</span>;<br>  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">152px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#picture-upload</span> <span class="hljs-selector-tag">img</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">max-height</span>: <span class="hljs-number">480px</span>;<br>&#125;<br><br><span class="hljs-selector-class">.ant-upload-select-picture-card</span> <span class="hljs-selector-tag">i</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">32px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#999</span>;<br>&#125;<br><br><span class="hljs-selector-class">.ant-upload-select-picture-card</span> <span class="hljs-selector-class">.ant-upload-text</span> &#123;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#666</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="开发创建图片页面">3）开发创建图片页面</h4><p>刚刚我们完成了上传组件</p><p>在此基础上，我们需要添加一些描述信息，分类等表单组件</p><p>这里我们使用<ahref="https://antdv.com/components/input-cn#components-input-demo-basic">图片名称</a>、<ahref="https://antdv.com/components/input-cn#components-input-demo-autosize-textarea">简介</a>、<ahref="https://antdv.com/components/select-cn#components-select-demo-tags">标签</a>、<ahref="https://antdv.com/components/auto-complete-cn">分类</a></p><p><strong>AutoComplete是一个带提示的文本输入框，用户可以自由输入，关键词是辅助输入。</strong></p><p>1）开发页面结构、及变量获取、样式调节</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;addPicturePage&quot;&gt;<br>    &lt;h2 style=&quot;margin-bottom: 20px&quot;&gt;&#123;&#123;route.query?.id ? &#x27;修改图片&#x27; : &#x27;创建图片&#x27;&#125;&#125;&lt;/h2&gt;<br>    &lt;PictureUpload :picture=&quot;picture&quot; :onSuccess=&quot;onSuccess&quot; /&gt;<br><br><br>    &lt;a-form v-if=&quot;picture&quot; layout=&quot;vertical&quot; :model=&quot;pictureForm&quot; @finish=&quot;handleSubmit&quot;&gt;<br>      &lt;a-form-item label=&quot;名称&quot; name=&quot;name&quot;&gt;<br>        &lt;a-input v-model:value=&quot;pictureForm.name&quot; placeholder=&quot;请输入名称&quot; /&gt;<br>      &lt;/a-form-item&gt;<br><br><br>      &lt;a-form-item label=&quot;简介&quot; name=&quot;introduction&quot;&gt;<br>        &lt;a-textarea v-model:value=&quot;pictureForm.introduction&quot; placeholder=&quot;请输入简介&quot; :rows=&quot;4&quot; allowClear autoSize/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;a-form-item label=&quot;分类&quot; name=&quot;category&quot;&gt;<br>        &lt;a-auto-complete<br>          v-model:value=&quot;pictureForm.category&quot;<br>          :options=&quot;categoryOptions&quot;<br>          placeholder=&quot;请输入分类&quot;<br>          allow-clear<br>        /&gt;<br>      &lt;/a-form-item&gt;<br><br><br>      &lt;a-form-item label=&quot;标签&quot; name=&quot;tags&quot;&gt;<br>        &lt;a-select<br>          v-model:value=&quot;pictureForm.tags&quot;<br>          mode=&quot;tags&quot;<br>          :options=&quot;tagOptions&quot;<br>          placeholder=&quot;请输入标签&quot;<br>          allow-clear<br>        &gt;&lt;/a-select&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;a-form-item&gt;<br>        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100%&quot;&gt;创建&lt;/a-button&gt;<br>      &lt;/a-form-item&gt;<br>    &lt;/a-form&gt;<br>  &lt;/div&gt;<br></code></pre></td></tr></table></figure><p>至于每一个标签参数怎么写，参考文档</p><p>打个比方，我们使用<code>a-textarea</code>，属性怎么写呢？参考<ahref="https://antdv.com/components/input-cn/#textarea">https://antdv.com/components/input-cn/#textarea</a></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> picture = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span>&gt;()<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSuccess</span> = (<span class="hljs-params"><span class="hljs-attr">newPicture</span>:API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;<br>  picture.<span class="hljs-property">value</span> = newPicture<br>&#125;<br><span class="hljs-keyword">const</span> pictureForm = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureEditRequest</span>&gt;(&#123;&#125;);<br></code></pre></td></tr></table></figure><p>样式添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#addPicturePage</span> &#123;  <br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">720px</span>;  <br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>效果如下：</p><figure><img src="/img/pictureLibrary/image-20250716214243282.png"alt="image-20250716214243282" /><figcaption aria-hidden="true">image-20250716214243282</figcaption></figure><p>2）上传图片，将图片名称赋值</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">onSuccess</span> = (<span class="hljs-params"><span class="hljs-attr">newPicture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;  <br>  picture.<span class="hljs-property">value</span> = newPicture  <br>  pictureForm.<span class="hljs-property">name</span> = newPicture.<span class="hljs-property">name</span>  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）编写提交表单函数，需要携带图片ID调用修改图片接口</p><p>提交表单步骤主要分为</p><ol type="1"><li>构造请求参数</li><li>调用接口</li><li>校验是否成功，是否跳转路由</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">values</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br><br>  <span class="hljs-comment">//构造参数</span><br>  <span class="hljs-keyword">const</span> pictureId = picture.<span class="hljs-property">value</span>?.<span class="hljs-property">id</span>;<br>  <span class="hljs-keyword">if</span>(!pictureId) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  <span class="hljs-comment">//发送后端请求</span><br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">editPictureUsingPost</span>(&#123;<br>    <span class="hljs-attr">id</span>: pictureId,<br>    ...values<br>  &#125;)<br><br>  <span class="hljs-comment">//校验请求结果</span><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&quot;创建图片成功&quot;</span>);<br>    router.<span class="hljs-title function_">push</span>(&#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">`/picture/<span class="hljs-subst">$&#123;pictureId&#125;</span>`</span><br>    &#125;)<br><br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;创建图片失败&quot;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>4）为分类和标签添加后台死数据</p><p>定义tagList、categoryList接收对象</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> categoryOptions = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br><span class="hljs-keyword">const</span> tagOptions = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br></code></pre></td></tr></table></figure><p>调用后端接口，赋值给我门定义的变量</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">getTagOrCategory</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureTagCategoryUsingGet</span>()<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    categoryOptions.<span class="hljs-property">value</span> = (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">categoryList</span> ?? []).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">data</span>: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">value</span>: data,<br>        <span class="hljs-attr">label</span>: data<br>      &#125;<br>    &#125;)<br><br>    tagOptions.<span class="hljs-property">value</span> = (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">tagList</span> ?? []).<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">data</span>: <span class="hljs-built_in">string</span></span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">value</span>: data,<br>        <span class="hljs-attr">label</span>: data<br>      &#125;<br>    &#125;)<br><br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取选项失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>);<br>  &#125;<br>&#125;<br><br><br><span class="hljs-comment">//声明周期钩子，在页面加载前调用</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">getTagOrCategory</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><p>给组件补充Option</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-form-item label=<span class="hljs-string">&quot;分类&quot;</span> name=<span class="hljs-string">&quot;category&quot;</span>&gt;  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-auto-complete</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;pictureForm.category&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;categoryOptions&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入分类&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">allowClear</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">  /&gt;</span></span>  <br>&lt;/a-form-item&gt;  <br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;标签&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;tags&quot;</span>&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;<span class="hljs-name">a-select</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;pictureForm.tags&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">:options</span>=<span class="hljs-string">&quot;tagOptions&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;tags&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入标签&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    <span class="hljs-attr">allowClear</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">  /&gt;</span>  </span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a-form-item</span>&gt;</span></span><br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250716191843496.png"alt="image-20250716191843496" /><figcaption aria-hidden="true">image-20250716191843496</figcaption></figure><p>优化：在我们上传图片后，才可以填写图片信息</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-form v-<span class="hljs-keyword">if</span>=<span class="hljs-string">&quot;picture&quot;</span> layout=<span class="hljs-string">&quot;vertical&quot;</span> :model=<span class="hljs-string">&quot;pictureForm&quot;</span> <span class="hljs-meta">@finish</span>=<span class="hljs-string">&quot;handleSubmit&quot;</span>&gt;&lt;/a-form&gt;<br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250716192004445.png"alt="image-20250716192004445" /><figcaption aria-hidden="true">image-20250716192004445</figcaption></figure><h3 id="图片修改页面">图片修改页面</h3><p>修改主要采用的逻辑为取URL中<code>?id=xxx</code>，根据ID查询数据填充表单</p><p>1）根据ID，判断是否已有修改图片</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">getOldPicture</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> id = route.<span class="hljs-property">query</span>?.<span class="hljs-property">id</span>;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(id)<br>  <span class="hljs-keyword">if</span>(id) &#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getPictureVoByIdUsingGet</span>(id.<span class="hljs-title function_">toString</span>())<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res)<br><br>    <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      <span class="hljs-keyword">const</span> data = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>;<br>      picture.<span class="hljs-property">value</span> = data;<br>      pictureForm.<span class="hljs-property">name</span> = data.<span class="hljs-property">name</span>;<br>      pictureForm.<span class="hljs-property">introduction</span> = data.<span class="hljs-property">introduction</span>;<br>      pictureForm.<span class="hljs-property">category</span> = data.<span class="hljs-property">category</span>;<br>      pictureForm.<span class="hljs-property">tags</span> = data.<span class="hljs-property">tags</span>;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2）修改页面标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;h2 style=&quot;margin-bottom: 20px&quot;&gt;&#123;&#123;route.query?.id ? &#x27;修改图片&#x27; : &#x27;创建图片&#x27;&#125;&#125;&lt;/h2&gt;<br></code></pre></td></tr></table></figure><p>当我们访问之前已经创建过的图片<code>http://localhost:5173/add_picture?id=1945491351449268226</code>他会调用getPictureVoUsingGet 接口，前端加载后端返回的数据</p><figure><img src="/img/pictureLibrary/image-20250716223705867.png"alt="image-20250716223705867" /><figcaption aria-hidden="true">image-20250716223705867</figcaption></figure><p>注意：像我上面说的这么访问，会发现页面并没有跳转到之前的编辑页面，这是因为传递ID参数在前端属于number类型，后端属于Long类型，传递会出现精度丢失的情况</p><p>这里有两种做法</p><ul><li>将前端类型转为BigInt类型，后端使用String类型，试过没整明白</li><li>前后端统一为String类型(推荐)，接下来会告诉你改哪里</li></ul><p>修改前端接口和调用接口函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">//使用params传递String id</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getPictureVoByIdUsingGet</span>(<span class="hljs-params"></span><br><span class="hljs-params">  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>,</span><br><span class="hljs-params">  options?: &#123; [key: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span> &#125;</span><br><span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(<span class="hljs-string">&#x27;/api/picture/get/vo&#x27;</span>, &#123;<br>    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,<br>    <span class="hljs-attr">params</span>: &#123;<br>      <span class="hljs-attr">id</span>: id<br>    &#125;,<br>    ...(options || &#123;&#125;),<br>  &#125;)<br>&#125;<br><br><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getPictureVoByIdUsingGet</span>(id.<span class="hljs-title function_">toString</span>())<br></code></pre></td></tr></table></figure><p>后端</p><p><code>/get/vo</code>接收参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/get/vo&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;PictureVO&gt; <span class="hljs-title function_">getPictureVOById</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam</span> String id, HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">longId</span> <span class="hljs-operator">=</span> Long.parseLong(id);<br>        ThrowUtils.throwIf(longId &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-comment">// 查询数据库</span><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br>        ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>, ErrorCode.NOT_FOUND_ERROR);<br>        <span class="hljs-comment">// 获取封装类</span><br>        <span class="hljs-keyword">return</span> ResultUtils.success(pictureService.getPictureVO(picture, request));<br>    &#125;<br></code></pre></td></tr></table></figure><p>更改PictureVO ID类型，随之Picture和PictureVO之间添加setID</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><span class="hljs-keyword">private</span> String id;<br>&#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 封装类转对象</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Picture <span class="hljs-title function_">voToObj</span><span class="hljs-params">(PictureVO pictureVO)</span> &#123;<br>        <span class="hljs-keyword">if</span> (pictureVO == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        BeanUtils.copyProperties(pictureVO, picture);<br>        <span class="hljs-comment">// 类型不同，需要转换  </span><br>        picture.setTags(JSONUtil.toJsonStr(pictureVO.getTags()));<br>        picture.setId(Long.parseLong(pictureVO.getId()));<br>        <span class="hljs-keyword">return</span> picture;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 对象转封装类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PictureVO <span class="hljs-title function_">objToVo</span><span class="hljs-params">(Picture picture)</span> &#123;<br>        <span class="hljs-keyword">if</span> (picture == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>        <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PictureVO</span>();<br>        BeanUtils.copyProperties(picture, pictureVO);<br>        <span class="hljs-comment">// 类型不同，需要转换  </span><br>        pictureVO.setTags(JSONUtil.toList(picture.getTags(), String.class));<br>        pictureVO.setId(Long.toString(picture.getId()));<br>        <span class="hljs-keyword">return</span> pictureVO;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="图片管理页面">图片管理页面</h3><h4 id="section"></h4><h4 id="新建路由">1）新建路由</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/pictureManage&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片管理&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">PictureManagerPage</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/admin/pictureManage&#x27;</span>,<br>  <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;图片管理&#x27;</span>,<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;图片管理&#x27;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><h4 id="开发管理界面">2）开发管理界面</h4><p>和用户管理一样，直接复制粘贴</p><p>1、修改column字段</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> columns = [  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;id&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;id&#x27;</span>,  <br>    <span class="hljs-attr">width</span>: <span class="hljs-number">80</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;图片&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;url&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;名称&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;name&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;简介&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;introduction&#x27;</span>,  <br>    <span class="hljs-attr">ellipsis</span>: <span class="hljs-literal">true</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;类型&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;category&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;标签&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;tags&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;图片信息&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;picInfo&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;用户 id&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userId&#x27;</span>,  <br>    <span class="hljs-attr">width</span>: <span class="hljs-number">80</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建时间&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;编辑时间&#x27;</span>,  <br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;editTime&#x27;</span>,  <br>  &#125;,  <br>  &#123;  <br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;操作&#x27;</span>,  <br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;action&#x27;</span>,  <br>  &#125;,  <br>]<br><br></code></pre></td></tr></table></figure><p>2、调用后端接口，获取后端数据</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> dataList = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">UserVO</span>[]&gt;([])<br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><br><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">UserQueryRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span>,<br>  <span class="hljs-attr">sortField</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&#x27;descend&#x27;</span><br>&#125;)<br><br><span class="hljs-keyword">const</span> pagination = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">current</span>: searchParams.<span class="hljs-property">current</span> ?? <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">pageSize</span>: searchParams.<span class="hljs-property">pageSize</span> ?? <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">total</span>: total.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">showSizeChanger</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">showTotal</span>: <span class="hljs-function">(<span class="hljs-params">total</span>) =&gt;</span> <span class="hljs-string">`共<span class="hljs-subst">$&#123;total&#125;</span>条`</span>,<br>  &#125;<br>&#125;)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doTableChange</span> = (<span class="hljs-params"><span class="hljs-attr">page</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = page.<span class="hljs-property">current</span><br>  searchParams.<span class="hljs-property">pageSize</span> = page.<span class="hljs-property">pageSize</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureByPageUsingPost</span>(&#123;<br>    ...searchParams<br>  &#125;)<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []<br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span><br><br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取分页数据失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = <span class="hljs-number">1</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><p>注意：和用户管理不同的是</p><ul><li>searchParams 参数不一致，需要让最新的图片在上面</li><li>调用接口不同，调用<code>listPictureByPageUsingPost</code>和<code>deletePictureUsingPost</code>接口</li><li>不需要删除图片的接口</li></ul><p>3、更新前端代码，按照自定义列展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #bodyCell=&quot;&#123; column, record &#125;&quot;&gt;  <br>  &lt;template v-if=&quot;column.dataIndex === &#x27;url&#x27;&quot;&gt;  <br>    &lt;a-image :src=&quot;record.url&quot; :width=&quot;120&quot; /&gt;  <br>  &lt;/template&gt;  <br>  &lt;!-- 标签 --&gt;  <br>  &lt;template v-if=&quot;column.dataIndex === &#x27;tags&#x27;&quot;&gt;  <br>    &lt;a-space wrap&gt;  <br>      &lt;a-tag v-for=&quot;tag in JSON.parse(record.tags || &#x27;[]&#x27;)&quot; :key=&quot;tag&quot;&gt;&#123;&#123; tag &#125;&#125;&lt;/a-tag&gt;  <br>    &lt;/a-space&gt;  <br>  &lt;/template&gt;  <br>  &lt;!-- 图片信息 --&gt;  <br>  &lt;template v-if=&quot;column.dataIndex === &#x27;picInfo&#x27;&quot;&gt;  <br>    &lt;div&gt;格式：&#123;&#123; record.picFormat &#125;&#125;&lt;/div&gt;  <br>    &lt;div&gt;宽度：&#123;&#123; record.picWidth &#125;&#125;&lt;/div&gt;  <br>    &lt;div&gt;高度：&#123;&#123; record.picHeight &#125;&#125;&lt;/div&gt;  <br>    &lt;div&gt;宽高比：&#123;&#123; record.picScale &#125;&#125;&lt;/div&gt;  <br>    &lt;div&gt;大小：&#123;&#123; (record.picSize / 1024).toFixed(2) &#125;&#125;KB&lt;/div&gt;  <br>  &lt;/template&gt;  <br>  &lt;template v-else-if=&quot;column.dataIndex === &#x27;createTime&#x27;&quot;&gt;  <br>    &#123;&#123; dayjs(record.createTime).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;  <br>  &lt;/template&gt;  <br>  &lt;template v-else-if=&quot;column.dataIndex === &#x27;editTime&#x27;&quot;&gt;  <br>    &#123;&#123; dayjs(record.editTime).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;) &#125;&#125;  <br>  &lt;/template&gt;  <br>  &lt;template v-else-if=&quot;column.key === &#x27;action&#x27;&quot;&gt;  <br>    &lt;a-button type=&quot;link&quot; danger @click=&quot;doDelete(record.id)&quot;&gt;删除&lt;/a-button&gt;  <br>  &lt;/template&gt;  <br>&lt;/template&gt;<br><br></code></pre></td></tr></table></figure><p>由于后端返回的是字符串类型，需要使用<code>Json.parse</code>转化为JS数组</p><p>4）开发搜索表单</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-form layout=<span class="hljs-string">&quot;inline&quot;</span> :model=<span class="hljs-string">&quot;searchParams&quot;</span> <span class="hljs-meta">@finish</span>=<span class="hljs-string">&quot;doSearch&quot;</span>&gt;  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;关键词&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;searchText&quot;</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-input</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;searchParams.searchText&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;从名称和简介搜索&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">allow-clear</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    /&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-form-item</span>&gt;</span></span>  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;类型&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;category&quot;</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-input</span> <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;searchParams.category&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入类型&quot;</span> <span class="hljs-attr">allow-clear</span> /&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-form-item</span>&gt;</span></span>  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;标签&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;tags&quot;</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-select</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">v-model:value</span>=<span class="hljs-string">&quot;searchParams.tags&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;tags&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入标签&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;min-width: 180px&quot;</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">allow-clear</span>  </span></span><br><span class="hljs-tag"><span class="language-xml">    /&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-form-item</span>&gt;</span></span>  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-form-item</span>&gt;</span>  </span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">html-type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span>搜索<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span>  </span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">a-form-item</span>&gt;</span></span>  <br>&lt;/a-form&gt;<br><br></code></pre></td></tr></table></figure><p>5）添加标题、补充编辑按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-flex justify=&quot;space-between&quot;&gt;  <br>  &lt;h2&gt;图片管理&lt;/h2&gt;  <br>  &lt;a-button type=&quot;primary&quot; href=&quot;/add_picture&quot; target=&quot;_blank&quot;&gt;+ 创建图片&lt;/a-button&gt;  <br>&lt;/a-flex&gt;<br><br></code></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;a-space&gt;  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&quot;`/add_picture?id=$&#123;record.id&#125;`&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span>  <br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">a-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">danger</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;doDelete(record.id)&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">a-button</span>&gt;</span></span>  <br>&lt;/a-space&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下：</p><figure><img src="/img/pictureLibrary/image-20250718101506023.png"alt="image-20250718101506023" /><figcaption aria-hidden="true">image-20250718101506023</figcaption></figure><h3 id="主页图片列表展示">主页图片列表展示</h3><h4 id="分页列表开发">1、分页列表开发</h4><p>1）使用<ahref="https://antdv.com/components/list-cn#components-list-demo-resposive">响应式List组件</a>，根据屏幕大小调整展示图片数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 图片列表 --&gt;  <br>&lt;a-list  <br>  :grid=&quot;&#123; gutter: 16, xs: 1, sm: 2, md: 3, lg: 4, xl: 5, xxl: 6 &#125;&quot;  <br>  :data-source=&quot;dataList&quot;  <br>  :pagination=&quot;pagination&quot;  <br>  :loading=&quot;loading&quot;  <br>&gt;  <br>  &lt;template #renderItem=&quot;&#123; item: picture &#125;&quot;&gt;  <br>    &lt;a-list-item&gt;  <br>      &lt;!-- 单张图片 --&gt;  <br>    &lt;/a-list-item&gt;  <br>  &lt;/template&gt;  <br>&lt;/a-list&gt;<br><br></code></pre></td></tr></table></figure><p>2）定义分页数据(复制粘贴图片管理)</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 数据  </span><br><span class="hljs-keyword">const</span> dataList = <span class="hljs-title function_">ref</span>([])  <br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)  <br><span class="hljs-keyword">const</span> loading = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">true</span>)  <br>  <br><span class="hljs-comment">// 搜索条件  </span><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureQueryRequest</span>&gt;(&#123;  <br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,  <br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">12</span>,  <br>  <span class="hljs-attr">sortField</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,  <br>  <span class="hljs-attr">sortOrder</span>: <span class="hljs-string">&#x27;descend&#x27;</span>,  <br>&#125;)  <br>  <br><span class="hljs-comment">// 分页参数  </span><br><span class="hljs-keyword">const</span> pagination = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;  <br>  <span class="hljs-keyword">return</span> &#123;  <br>    <span class="hljs-attr">current</span>: searchParams.<span class="hljs-property">current</span> ?? <span class="hljs-number">1</span>,  <br>    <span class="hljs-attr">pageSize</span>: searchParams.<span class="hljs-property">pageSize</span> ?? <span class="hljs-number">10</span>,  <br>    <span class="hljs-attr">total</span>: total.<span class="hljs-property">value</span>,  <br>    <span class="hljs-comment">// 切换页号时，会修改搜索参数并获取数据  </span><br>    <span class="hljs-attr">onChange</span>: <span class="hljs-function">(<span class="hljs-params">page, pageSize</span>) =&gt;</span> &#123;  <br>      searchParams.<span class="hljs-property">current</span> = page  <br>      searchParams.<span class="hljs-property">pageSize</span> = pageSize  <br>      <span class="hljs-title function_">fetchData</span>()  <br>    &#125;,  <br>  &#125;  <br>&#125;)  <br>  <br><span class="hljs-comment">// 获取数据  </span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;  <br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>  <br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureVoByPageUsingPost</span>(searchParams)  <br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;  <br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []  <br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span>  <br>  &#125; <span class="hljs-keyword">else</span> &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)  <br>  &#125;  <br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>  <br>&#125;  <br>  <br><span class="hljs-comment">// 页面加载时请求一次  </span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;  <br>  <span class="hljs-title function_">fetchData</span>()  <br>&#125;)<br><br></code></pre></td></tr></table></figure><p>3）<ahref="https://antdv.com/components/card-cn#components-card-demo-flexible-content">Card组件</a>展示图片及描述信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-list-item style=&quot;padding: 0&quot;&gt;  <br>  &lt;!-- 单张图片 --&gt;  <br>  &lt;a-card hoverable&gt;  <br>    &lt;template #cover&gt;  <br>      &lt;img  <br>        style=&quot;height: 180px; object-fit: cover&quot;  <br>        :alt=&quot;picture.name&quot;  <br>        :src=&quot;picture.url&quot;  <br>      /&gt;  <br>    &lt;/template&gt;  <br>    &lt;a-card-meta :title=&quot;picture.name&quot;&gt;  <br>      &lt;template #description&gt;  <br>        &lt;a-flex&gt;  <br>          &lt;a-tag color=&quot;green&quot;&gt;  <br>            &#123;&#123; picture.category ?? &#x27;默认&#x27; &#125;&#125;  <br>          &lt;/a-tag&gt;  <br>          &lt;a-tag v-for=&quot;tag in picture.tags&quot; :key=&quot;tag&quot;&gt;  <br>            &#123;&#123; tag &#125;&#125;  <br>          &lt;/a-tag&gt;  <br>        &lt;/a-flex&gt;  <br>      &lt;/template&gt;  <br>    &lt;/a-card-meta&gt;  <br>  &lt;/a-card&gt;  <br>&lt;/a-list-item&gt;<br><br></code></pre></td></tr></table></figure><p>为了让图片填满容器，我们可以使用<code>object-fit: cover</code></p><p>object-fit属性值可以有四种，分别是<code>fill</code>、<code>contains</code>、<code>cover</code>、<code>none</code>，可以自己每一个用一遍</p><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250718105331825.png"alt="image-20250718105331825" /><figcaption aria-hidden="true">image-20250718105331825</figcaption></figure><h4 id="搜索功能开发">2、搜索功能开发</h4><p>1）开发搜索框</p><p>参考<ahref="https://antdv.com/components/input-cn#components-input-demo-search-input">input-Search组件</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;search-bar&quot;&gt;<br>      &lt;a-input-search<br>        v-model:value=&quot;searchParams.searchText&quot;<br>        placeholder=&quot;海量资源任你搜索&quot;<br>        enter-button=&quot;Search&quot;<br>        size=&quot;large&quot;<br>        @search=&quot;doSearch&quot;<br>      /&gt;<br>    &lt;/div&gt;<br></code></pre></td></tr></table></figure><p>2）完善doSearch功能</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = <span class="hljs-number">1</span>;<br>  <span class="hljs-title function_">fetchData</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>3）优化搜索框样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#homePage</span> <span class="hljs-selector-class">.search-bar</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">480px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto <span class="hljs-number">16px</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="添加分类和标签筛选">3、添加分类和标签筛选</h4><p>1）开发页面结构。分类支持单选，标签支持多选</p><p>分页使用<ahref="https://antdv.com/components/tabs-cn#components-tabs-demo-basic">tabs组件</a>，标签使用<ahref="https://antdv.com/components/tag-cn">tags组件</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- 分类 + 标签 --&gt;  <br>&lt;a-tabs v-model:activeKey=&quot;selectedCategory&quot; @change=&quot;doSearch&quot;&gt;  <br>  &lt;a-tab-pane key=&quot;all&quot; tab=&quot;全部&quot; /&gt;  <br>  &lt;a-tab-pane v-for=&quot;category in categoryList&quot; :key=&quot;category&quot; :tab=&quot;category&quot; /&gt;  <br>&lt;/a-tabs&gt;  <br>&lt;div class=&quot;tag-bar&quot;&gt;  <br>  &lt;span style=&quot;margin-right: 8px&quot;&gt;标签：&lt;/span&gt;  <br>  &lt;a-space :size=&quot;[0, 8]&quot; wrap&gt;  <br>    &lt;a-checkable-tag  <br>      v-for=&quot;(tag, index) in tagList&quot;  <br>      :key=&quot;tag&quot;  <br>      v-model:checked=&quot;selectedTagList[index]&quot;  <br>      @change=&quot;doSearch&quot;  <br>    &gt;  <br>      &#123;&#123; tag &#125;&#125;  <br>    &lt;/a-checkable-tag&gt;  <br>  &lt;/a-space&gt;  <br>&lt;/div&gt;<br><br></code></pre></td></tr></table></figure><p>2）添加分类列表和标签列表，并设置选中属性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> categoryList = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br><span class="hljs-keyword">const</span> selectedCategory = ref&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-string">&#x27;all&#x27;</span>)<br><span class="hljs-keyword">const</span> tagList = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br><span class="hljs-keyword">const</span> selectedTagList = ref&lt;<span class="hljs-built_in">string</span>[]&gt;([])<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getTagOrCategory</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureTagCategoryUsingGet</span>()<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    categoryList.<span class="hljs-property">value</span> = (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">categoryList</span> ?? [])<br><br>    tagList.<span class="hljs-property">value</span> = (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">tagList</span> ?? [])<br><br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取选项失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意：categoryList和tagList返回结果可不是添加页面中的<code>&#123;value: ?，label: ?&#125;</code>，之前是因为使用为了迎合options属性，让我们多了可选的情况，这里不需要选择只需要获取数据</p><p>3）修改fetchData，确保将选中的分类和标签作为参数传递</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;  <br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">true</span>  <br>  <span class="hljs-comment">// 转换搜索参数  </span><br>  <span class="hljs-keyword">const</span> params = &#123;  <br>    ...searchParams,  <br>    <span class="hljs-attr">tags</span>: [],  <br>  &#125;  <br>  <span class="hljs-keyword">if</span> (selectedCategory.<span class="hljs-property">value</span> !== <span class="hljs-string">&#x27;all&#x27;</span>) &#123;  <br>    params.<span class="hljs-property">category</span> = selectedCategory.<span class="hljs-property">value</span>  <br>  &#125;  <br>  selectedTagList.<span class="hljs-property">value</span>.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">useTag, index</span>) =&gt;</span> &#123;  <br>    <span class="hljs-keyword">if</span> (useTag) &#123;  <br>      params.<span class="hljs-property">tags</span>.<span class="hljs-title function_">push</span>(tagList.<span class="hljs-property">value</span>[index])  <br>    &#125;  <br>  &#125;)  <br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listPictureVoByPageUsingPost</span>(params)  <br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;  <br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []  <br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span>  <br>  &#125; <span class="hljs-keyword">else</span> &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取数据失败，&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)  <br>  &#125;  <br>  loading.<span class="hljs-property">value</span> = <span class="hljs-literal">false</span>  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>4）为图片绑定详情页面，确保点击跳转</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-card hoverable @click=&quot;doClickPicture(picture)&quot;&gt;<br></code></pre></td></tr></table></figure><p>实现doClickPicture功能</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>()<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doClickPicture</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">picture</span>: API.<span class="hljs-title class_">PictureVO</span></span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">`/picture/<span class="hljs-subst">$&#123;picture.id&#125;</span>`</span><br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><p>最终页面效果如下</p><figure><img src="/img/pictureLibrary/image-20250718115449391.png"alt="image-20250718115449391" /><figcaption aria-hidden="true">image-20250718115449391</figcaption></figure><h3 id="图片详情页">图片详情页</h3><h4 id="新建路由-1">1、新建路由</h4><p>新建PictureDetailPage页面，同时定义<code>/picture/:id</code>路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts">&#123;<br>  <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/picture/:id&#x27;</span>,<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;图片详情&#x27;</span>,<br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">PictureDetailPage</span>,<br>  <span class="hljs-attr">props</span>: <span class="hljs-literal">true</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>因为图片详情页需要根据ID跳转页面，需要设置动态路由。使用props获取动态参数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> props = defineProps&lt;&#123;<span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span> &#125;&gt;()<br></code></pre></td></tr></table></figure><p>通过props传来的ID，调用后端接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> picture = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">PictureVO</span>&gt;(&#123;&#125;)<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchPictureDetail</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getPictureVoByIdUsingGet</span>(props.<span class="hljs-property">id</span>)<br><br>    <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>      picture.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>;<br><br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取图片资源失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>    &#125;<br>  &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取图片资源失败&#x27;</span> + e.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchPictureDetail</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="完善页面">2、完善页面</h4><p>1）详情页主要分为左边的图片，以及右边的描述信息</p><p>分别参考 <a href="https://antdv.com/components/image-cn">a-image</a>以及<ahref="https://antdv.com/components/descriptions-cn#components-descriptions-demo-vertical">a-descriptions</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-row :gutter=&quot;[16, 16]&quot;&gt;  <br>  &lt;!-- 图片展示区 --&gt;  <br>  &lt;a-col :sm=&quot;24&quot; :md=&quot;16&quot; :xl=&quot;18&quot;&gt;  <br>    &lt;a-card title=&quot;图片预览&quot;&gt;  <br>      &lt;a-image  <br>        style=&quot;max-height: 600px; object-fit: contain&quot;  <br>        :src=&quot;picture.url&quot;  <br>      /&gt;  <br>    &lt;/a-card&gt;  <br>  &lt;/a-col&gt;  <br>  &lt;!-- 图片信息区 --&gt;  <br>  &lt;a-col :sm=&quot;24&quot; :md=&quot;8&quot; :xl=&quot;6&quot;&gt;  <br>    &lt;a-card title=&quot;图片信息&quot;&gt;  <br>      &lt;a-descriptions :column=&quot;1&quot;&gt;  <br>        &lt;a-descriptions-item label=&quot;作者&quot;&gt;  <br>          &lt;a-space&gt;  <br>            &lt;a-avatar :size=&quot;24&quot; :src=&quot;picture.user?.userAvatar&quot; /&gt;  <br>            &lt;div&gt;&#123;&#123; picture.user?.userName &#125;&#125;&lt;/div&gt;  <br>          &lt;/a-space&gt;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;名称&quot;&gt;  <br>          &#123;&#123; picture.name ?? &#x27;未命名&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;简介&quot;&gt;  <br>          &#123;&#123; picture.introduction ?? &#x27;-&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;分类&quot;&gt;  <br>          &#123;&#123; picture.category ?? &#x27;默认&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;标签&quot;&gt;  <br>          &lt;a-tag v-for=&quot;tag in picture.tags&quot; :key=&quot;tag&quot;&gt;  <br>            &#123;&#123; tag &#125;&#125;  <br>          &lt;/a-tag&gt;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;格式&quot;&gt;  <br>          &#123;&#123; picture.picFormat ?? &#x27;-&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;宽度&quot;&gt;  <br>          &#123;&#123; picture.picWidth ?? &#x27;-&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;高度&quot;&gt;  <br>          &#123;&#123; picture.picHeight ?? &#x27;-&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;宽高比&quot;&gt;  <br>          &#123;&#123; picture.picScale ?? &#x27;-&#x27; &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>        &lt;a-descriptions-item label=&quot;大小&quot;&gt;  <br>          &#123;&#123; formatSize(picture.picSize) &#125;&#125;  <br>        &lt;/a-descriptions-item&gt;  <br>      &lt;/a-descriptions&gt;  <br>    &lt;/a-card&gt;  <br>  &lt;/a-col&gt;  <br>&lt;/a-row&gt;<br><br></code></pre></td></tr></table></figure><p>简单解释一下响应式栅格布局</p><p><code>a-row :gutter="[16, 16]"</code> 设置子元素<code>a-col</code>之间的水平和垂直间距</p><p><code>a-col :sm="24" :md="8" :xl="6"</code>小屏模式独占一行，中屏模式图片占8，描述占16，大屏模式图片占16，描述占8</p><p>更多API参考<ahref="https://antdv.com/components/grid-cn#api">https://antdv.com/components/grid-cn#api</a></p><p>对于图片的大小，默认情况是B为单位，我们可以格式化单位</p><p>新建<code>utils/index.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">formatSize</span> = (<span class="hljs-params">size?: <span class="hljs-built_in">number</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span> (!size) <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;未知&#x27;</span><br>  <span class="hljs-keyword">if</span> (size &lt; <span class="hljs-number">1024</span>) <span class="hljs-keyword">return</span> size + <span class="hljs-string">&#x27; B&#x27;</span><br>  <span class="hljs-keyword">if</span> (size &lt; <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>) <span class="hljs-keyword">return</span> (size / <span class="hljs-number">1024</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; KB&#x27;</span><br>  <span class="hljs-keyword">return</span> (size / (<span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>)).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27; MB&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>2）描述列表新增操作按钮及编辑和删除图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-space wrap&gt;  <br>  &lt;a-button v-if=&quot;canEdit&quot; type=&quot;default&quot; @click=&quot;doEdit&quot;&gt;  <br>    编辑  <br>    &lt;template #icon&gt;  <br>      &lt;EditOutlined /&gt;  <br>    &lt;/template&gt;  <br>  &lt;/a-button&gt;  <br>  &lt;a-button v-if=&quot;canEdit&quot; danger @click=&quot;doDelete&quot;&gt;  <br>    删除  <br>    &lt;template #icon&gt;  <br>      &lt;DeleteOutlined /&gt;  <br>    &lt;/template&gt;  <br>  &lt;/a-button&gt;  <br>&lt;/a-space&gt;<br><br></code></pre></td></tr></table></figure><p>注意：</p><p><code>&lt;template #icon&gt;</code>等同于具名插槽<code>v-slot:icon</code>，将内部内容插入到指定位置</p><p>编辑和删除按钮只有是图片创建者和管理员可以修改</p><p>编写canEdit函数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> loginUserStore = <span class="hljs-title function_">useLoginUserStore</span>()<br><span class="hljs-keyword">const</span> canEdit = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> loginUser = loginUserStore.<span class="hljs-property">loginUser</span>;<br>  <span class="hljs-keyword">if</span> (!loginUser.<span class="hljs-property">id</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>  &#125;<br>  <span class="hljs-keyword">const</span> user = picture.<span class="hljs-property">value</span>.<span class="hljs-property">user</span> || &#123;&#125;<br>  <span class="hljs-keyword">return</span> loginUser.<span class="hljs-property">id</span> === user.<span class="hljs-property">id</span> || loginUser.<span class="hljs-property">userRole</span> === <span class="hljs-string">&#x27;admin&#x27;</span><br>&#125;)<br><br></code></pre></td></tr></table></figure><p>编写按钮点击事件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">// 编辑  </span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doEdit</span> = (<span class="hljs-params"></span>) =&gt; &#123;  <br>  router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;/add_picture?id=&#x27;</span> + picture.<span class="hljs-property">value</span>.<span class="hljs-property">id</span>)  <br>&#125;  <br><span class="hljs-comment">// 删除  </span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">doDelete</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;  <br>  <span class="hljs-keyword">const</span> id = picture.<span class="hljs-property">value</span>.<span class="hljs-property">id</span>  <br>  <span class="hljs-keyword">if</span> (!id) &#123;  <br>    <span class="hljs-keyword">return</span>  <br>  &#125;  <br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">deletePictureUsingPost</span>(&#123; id &#125;)  <br>  <span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;  <br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;删除成功&#x27;</span>)  <br>  &#125; <span class="hljs-keyword">else</span> &#123;  <br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;删除失败&#x27;</span>)  <br>  &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="图片下载">图片下载</h3><p>下载的逻辑是通过COS存储地址进行下载</p><p>这里前端需要用到<code>file-saver</code>库</p><h4 id="安装">1）安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install file-saver  <br>npm i --save-dev @types/file-saver<br></code></pre></td></tr></table></figure><h4 id="补充按钮">2）补充按钮</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-button type=&quot;primary&quot; @click=&quot;doDownload&quot;&gt;  <br>  免费下载  <br>  &lt;template #icon&gt;  <br>    &lt;DownloadOutlined /&gt;  <br>  &lt;/template&gt;  <br>&lt;/a-button&gt;<br></code></pre></td></tr></table></figure><p>3）编写下载事件</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doDownload</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-title function_">downloadImage</span>(picture.<span class="hljs-property">value</span>.<span class="hljs-property">url</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>4）工具类utils中 补全下载功能</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">downloadImage</span>(<span class="hljs-params">url?: <span class="hljs-built_in">string</span>,fileName?: <span class="hljs-built_in">string</span></span>) &#123;<br>  <span class="hljs-keyword">if</span>(!url) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  <span class="hljs-title function_">saveAs</span>(url,fileName);<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250718125525856.png"alt="image-20250718125525856" /><figcaption aria-hidden="true">image-20250718125525856</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱3-用户模块</title>
    <link href="/2025/07/13/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B103/"/>
    <url>/2025/07/13/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B103/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/13 PM</p>          </div><h1 id="闲话微叙">闲话微叙</h1><p>昨天和朋友时隔多年小聚，休息一天</p><p>我发现我认知中的和朋友聚会的场所永远都是网吧，还没怎么去过别的地方</p><p>可能是我比较喜欢网吧吧，吹着空调打着游戏岂不美哉！</p><p>不多说了，今天让我们来完成图片模块(后端部分)</p><p>Let us go！！！</p><h2 id="一需求分析">一、需求分析</h2><p>1）管理员</p><ul><li>图片上传、创建</li><li>图片管理</li><li>修改图片</li></ul><p>2）用户</p><ul><li>主页查看搜索图片</li><li>图片详情</li><li>图片下载</li></ul><h2 id="二方案设计">二、方案设计</h2><p>1、图片库表设计</p><p>2、图片上传和下载如何实现</p><p>3、创建图片流程</p><p>4、如何解析图片数据</p><h3 id="库表设计">库表设计</h3><p>像<code>user</code>表一样，我们同样要存储图片到本地，接下来我们将设计<code>picture</code>表</p><p>为了保证和教程一致，我直接拷贝</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 图片表  </span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> picture  <br>(  <br>    id           <span class="hljs-type">bigint</span> auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-keyword">primary</span> key,  <br>    url          <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                       <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片 url&#x27;</span>,  <br>    name         <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>)                       <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片名称&#x27;</span>,  <br>    introduction <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                       <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;简介&#x27;</span>,  <br>    category     <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>)                        <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;分类&#x27;</span>,  <br>    tags         <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                      <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;标签（JSON 数组）&#x27;</span>,  <br>    picSize      <span class="hljs-type">bigint</span>                             <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片体积&#x27;</span>,  <br>    picWidth     <span class="hljs-type">int</span>                                <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片宽度&#x27;</span>,  <br>    picHeight    <span class="hljs-type">int</span>                                <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片高度&#x27;</span>,  <br>    picScale     <span class="hljs-keyword">double</span>                             <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片宽高比例&#x27;</span>,  <br>    picFormat    <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>)                        <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;图片格式&#x27;</span>,  <br>    userId       <span class="hljs-type">bigint</span>                             <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建用户 id&#x27;</span>,  <br>    createTime   datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,  <br>    editTime     datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;编辑时间&#x27;</span>,  <br>    updateTime   datetime <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,  <br>    isDelete     tinyint  <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除&#x27;</span>,  <br>    INDEX idx_name (name),                 <span class="hljs-comment">-- 提升基于图片名称的查询性能  </span><br>    INDEX idx_introduction (introduction), <span class="hljs-comment">-- 用于模糊搜索图片简介  </span><br>    INDEX idx_category (category),         <span class="hljs-comment">-- 提升基于分类的查询性能  </span><br>    INDEX idx_tags (tags),                 <span class="hljs-comment">-- 提升基于标签的查询性能  </span><br>    INDEX idx_userId (userId)              <span class="hljs-comment">-- 提升基于用户 ID 的查询性能  </span><br>) comment <span class="hljs-string">&#x27;图片&#x27;</span> <span class="hljs-keyword">collate</span> <span class="hljs-operator">=</span> utf8mb4_unicode_ci;<br><br></code></pre></td></tr></table></figure><p>针对于图片我们需要的字段往往包含，图片名称、url、简介、标签、分类、格式方面、创建用户、创建更新时间以及逻辑删除</p><p>为了方便我们通过名称、标签、分类、创建用户、简介查询，我们需要为其设置索引</p><h3 id="图片上传下载如何实现">图片上传、下载如何实现？</h3><p><strong>思考图片上传到哪里？从哪里下载？</strong></p><p>最简单的方式是使用Java API将图片上传至后端JavaWeb服务器，ex：Tomcat</p><p>显然这是不现实的，像tomcat服务器这种往往空间都是有限的，在更换服务器资源迁移是很费劲的，只能通过文件管理器管理</p><p>所以这种简单的方式只适用于存储临时文件</p><p>这里我们使用第三方工具，腾讯云<ahref="https://console.cloud.tencent.com/cos">对象存储COS</a>，或者阿里云(OSS)</p><p>COS 在存储图片的同时，为每一张图片分配URL对应数据库中URL</p><p>购买资源包，这里不掩饰了，第一次购买只需要1元</p><h3 id="创建图片流程">创建图片流程</h3><p>上传图片 + 图片保存至数据库</p><p>这里主要包含两种形式</p><p>1）上传图片后，生成URL后用户填写任意信息，点击提交后保存数据库</p><p>2）上传图片，系统自动生成其他信息，无需点击提交，直接保存至数据库，后续再创建已有图片，在此基础上修改</p><p>方案一固然简单，但是用户不提交，图片资源残留，浪费空间，所以我们选择第二种方式</p><h3 id="如何解析图片信息">如何解析图片信息</h3><p>两种形式</p><p>1）Java 自带处理图片库</p><p>2）第三方云存储</p><p>腾讯云COS提供了数据万象CI 直接提取图片元数据</p><p><ahref="https://console.cloud.tencent.com/ci">数据万象</a>需要自己开通</p><h2 id="三后端开发">三、后端开发</h2><h3 id="创建使用存储桶">创建使用存储桶</h3><p>所属地域选择离自己近的，因为作者是辽宁的，这里选择北京</p><p>权限控制方面选择公有读私有写，保证用户可以查看公有图片，但是无法查看存储桶中的资源</p><p>默认告警打开，对象存储和访问是计费的，防止出现扣费不知道的情况</p><figure><img src="/img/pictureLibrary/image-20250713115045934.png"alt="image-20250713115045934" /><figcaption aria-hidden="true">image-20250713115045934</figcaption></figure><p>这里直接下一步</p><figure><img src="/img/pictureLibrary/image-20250713115432785.png"alt="image-20250713115432785" /><figcaption aria-hidden="true">image-20250713115432785</figcaption></figure><p>下一步点击创建成功即可</p><h4 id="手动上传图片测试">手动上传图片测试</h4><p>可以看到COS为我们上传的图片分配了一个URL</p><figure><img src="/img/pictureLibrary/image-20250713120032390.png"alt="image-20250713120032390" /><figcaption aria-hidden="true">image-20250713120032390</figcaption></figure><p>注意如果使用默认域名会报高风险的提示，因为默认域名一旦设置无法更改，暴露出去被攻击后，只能换一个存储桶了，后续讲该如何解决。</p><h3 id="后端操作cos">后端操作COS</h3><p>现在我们已经配置好了COS，该如何去操作他呢？</p><p>没错，需要我们引入COS 的Java SDK，去使用内部各式各样的方法</p><p>可以参考<ahref="https://cloud.tencent.com/document/product/436/10199">快速上手</a></p><h4 id="初始化客户端">1、初始化客户端</h4><p>1）引入COS 依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 腾讯云 cos 服务 --&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.qcloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>cos_api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.6.227<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>2）编写CosClientConfig类，并创建一个COS客户端的Bean</p><p>官方给出了两种CosClient的写法，这里我们使用永久密钥</p><figure><img src="/img/pictureLibrary/image-20250713122011086.png"alt="image-20250713122011086" /><figcaption aria-hidden="true">image-20250713122011086</figcaption></figure><p>参考示例代码，我们实际上只需要传入secretId、secretKey以及根据region创建的clientConfig，就可以创建最后的cosClient</p><p><code>@ConfigurationProperties(prefix = "cos.client")</code>会从配置文件<code>application.yml</code>中读取所有以<code>cos.client</code>开头的属性，将属性注入到CosClientConfig类中对应的字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;cos.client&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CosClientConfig</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 域名  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String host;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * secretId  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String secretId;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 密钥（注意不要泄露）  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String secretKey;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 区域  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String region;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 桶名  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String bucket;  <br>  <br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> COSClient <span class="hljs-title function_">cosClient</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 初始化用户身份信息(secretId, secretKey)  </span><br>        <span class="hljs-type">COSCredentials</span> <span class="hljs-variable">cred</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BasicCOSCredentials</span>(secretId, secretKey);<br>        <span class="hljs-comment">// 设置bucket的区域, COS地域的简称请参照 https://www.qcloud.com/document/product/436/6224  </span><br>        <span class="hljs-type">ClientConfig</span> <span class="hljs-variable">clientConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClientConfig</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Region</span>(region));<br>        <span class="hljs-comment">// 生成cos客户端  </span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">COSClient</span>(cred, clientConfig);  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）填写配置文件</p><p>为了防止敏感信息泄漏，我们可以新建<code>application-local.yml</code>，并在<code>.gitignore</code>中忽略该文件提交</p><p><code>.gitignore</code>翻译过来就是git忽略，可以帮助我们在git提交的时候忽略某些特定文件</p><figure><img src="/img/pictureLibrary/image-20250713122849681.png"alt="image-20250713122849681" /><figcaption aria-hidden="true">image-20250713122849681</figcaption></figure><p>application-local.yml配置如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 对象存储配置（需要从腾讯云获取）  </span><br><span class="hljs-attr">cos:</span>  <br>  <span class="hljs-attr">client:</span>  <br>    <span class="hljs-attr">host:</span> <span class="hljs-string">xxx</span>  <br>    <span class="hljs-attr">secretId:</span> <span class="hljs-string">xxx</span>  <br>    <span class="hljs-attr">secretKey:</span> <span class="hljs-string">xxx</span>  <br>    <span class="hljs-attr">region:</span> <span class="hljs-string">xxx</span>  <br>    <span class="hljs-attr">bucket:</span> <span class="hljs-string">xxx</span><br><br></code></pre></td></tr></table></figure><p>如何获取各个信息呢</p><p>host</p><p>点击桶详情</p><figure><img src="/img/pictureLibrary/image-20250713123744582.png"alt="image-20250713123744582" /><figcaption aria-hidden="true">image-20250713123744582</figcaption></figure><p>secretID、secretKey参考<ahref="https://console.cloud.tencent.com/cam/capi">https://console.cloud.tencent.com/cam/capi</a>，新建密钥，复制粘贴</p><p>region参考<ahref="https://cloud.tencent.com/document/product/436/6224">https://cloud.tencent.com/document/product/436/6224</a>根据创建的桶选择地域简称</p><p>bucket 名称</p><figure><img src="/img/pictureLibrary/image-20250713123953119.png"alt="image-20250713123953119" /><figcaption aria-hidden="true">image-20250713123953119</figcaption></figure><h4 id="通用功能类">2、通用功能类</h4><p>新建manager包，创建CosManager类，提供文件上传、文件下载等功能</p><p>注入对象存储配置类和COSClient，用于与COS交互</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CosManager</span> &#123;  <br>  <br>    <span class="hljs-meta">@Resource</span>  <br>    <span class="hljs-keyword">private</span> CosClientConfig cosClientConfig;  <br>  <br>    <span class="hljs-meta">@Resource</span>  <br>    <span class="hljs-keyword">private</span> COSClient cosClient;  <br>    <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="文件上传">3、文件上传</h4><p>参考<ahref="https://cloud.tencent.com/document/product/436/65935">文档</a>，对象上传部分</p><p>这里我们选择简单接口里的上传本地文件</p><figure><img src="/img/pictureLibrary/image-20250713125018437.png"alt="image-20250713125018437" /><figcaption aria-hidden="true">image-20250713125018437</figcaption></figure><p>通过观察，我们会发现最核心的代码只有两句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(bucketName, key, localFile);<br><span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosClient.putObject(putObjectRequest);<br></code></pre></td></tr></table></figure><p>1）CosManager新增上传对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> PutObjectResult <span class="hljs-title function_">putObject</span><span class="hljs-params">(String key, File file)</span> &#123;<br>    <span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(cosClientConfig.getBucket(), key, file);<br>    <span class="hljs-keyword">return</span> cosClient.putObject(putObjectRequest);<br>&#125;<br></code></pre></td></tr></table></figure><p>2）创建FileController 测试接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/test/upload&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">testUploadFile</span><span class="hljs-params">(<span class="hljs-meta">@RequestPart(&quot;file&quot;)</span> MultipartFile multipartFile)</span> &#123;<br>        <span class="hljs-comment">//文件目录</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> multipartFile.getOriginalFilename();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">filepath</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;/test/%s&quot;</span>,fileName);<br>        <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//上传文件</span><br>            file = File.createTempFile(filepath,<span class="hljs-literal">null</span>);<br>            multipartFile.transferTo(file);<br>            cosManager.putObject(filepath,file);<br><br>            <span class="hljs-keyword">return</span> ResultUtils.success(filepath);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;file upload error&quot;</span> + filepath,e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR,<span class="hljs-string">&quot;上传失败&quot;</span>);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">if</span>(file != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">del</span> <span class="hljs-operator">=</span> file.delete();<br>                <span class="hljs-keyword">if</span>(!del) &#123;<br>                    log.error(<span class="hljs-string">&quot;file delete error,filepath=&#123;&#125;&quot;</span>,filepath);<br>                &#125;<br>            &#125;<br>        &#125;<br><br><br>    &#125;<br></code></pre></td></tr></table></figure><p>这里我起初对<code>file = File.createTempFile(filepath,null);</code>这串代码有疑问，不理解参数的含义</p><p>通过查看源码我们可以发现createTempFile可以两个参数也可以三个参数</p><p><code>createTempFile(prefix, suffix,directory)</code>参数分别为前缀后缀以及临时文件存放在哪里(默认根据操作系统存放指定路径)</p><p>例如prefix = "hhhh",sufffix = ".txt"结果就是<code>hhhh.txt</code></p><p>对比<code>multipartFile.transferTo(file);</code>前后，我们会发现在此之前File.length()是0，而之后就是你传入文件的字节大小了</p><p>应用<code>application-local.yml</code>配置</p><figure><img src="/img/pictureLibrary/image-20250713133454692.png"alt="image-20250713133454692" /><figcaption aria-hidden="true">image-20250713133454692</figcaption></figure><p>打开Swagger，测试文件上传</p><figure><img src="/img/pictureLibrary/image-20250713133724807.png"alt="image-20250713133724807" /><figcaption aria-hidden="true">image-20250713133724807</figcaption></figure><h4 id="文件下载">4、文件下载</h4><p>COS主要提供三种下载文件的方式</p><p>1）将COS文件存储到后端服务器</p><p>2）获取文件下载输入流</p><p>3）URL下载</p><p>针对于我们的项目，图片是公开的，直接使用第三种方式</p><p>同理，观察示例代码，提取核心部分</p><figure><img src="/img/pictureLibrary/image-20250713140240788.png"alt="image-20250713140240788" /><figcaption aria-hidden="true">image-20250713140240788</figcaption></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">GetObjectRequest</span> <span class="hljs-variable">getObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GetObjectRequest</span>(bucketName, key);<br><span class="hljs-type">COSObject</span> <span class="hljs-variable">cosObject</span> <span class="hljs-operator">=</span> cosClient.getObject(getObjectRequest);<br></code></pre></td></tr></table></figure><p>1）CosManager新增下载对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> COSObject <span class="hljs-title function_">getObject</span><span class="hljs-params">(String key)</span> &#123;<br>        <span class="hljs-type">GetObjectRequest</span> <span class="hljs-variable">getObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GetObjectRequest</span>(cosClientConfig.getBucket(), key);<br>        <span class="hljs-keyword">return</span> cosClient.getObject(getObjectRequest);<br>    &#125;<br></code></pre></td></tr></table></figure><p>2）FileController测试下载对象接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**  </span><br><span class="hljs-comment"> * 测试文件下载  </span><br><span class="hljs-comment"> *  </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> filepath 文件路径  </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> response 响应对象  </span><br><span class="hljs-comment"> */</span>  <br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span>  <br><span class="hljs-meta">@GetMapping(&quot;/test/download/&quot;)</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testDownloadFile</span><span class="hljs-params">(String filepath, HttpServletResponse response)</span> <span class="hljs-keyword">throws</span> IOException &#123;  <br>    <span class="hljs-type">COSObjectInputStream</span> <span class="hljs-variable">cosObjectInput</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;  <br>    <span class="hljs-keyword">try</span> &#123;  <br>      <span class="hljs-comment">//根据路径获取COS对象</span><br>        <span class="hljs-type">COSObject</span> <span class="hljs-variable">cosObject</span> <span class="hljs-operator">=</span> cosManager.getObject(filepath);  <br>      <span class="hljs-comment">//将对象文件输入流</span><br>        cosObjectInput = cosObject.getObjectContent();  <br>        <span class="hljs-comment">// 处理下载到的流  </span><br>        <span class="hljs-type">byte</span>[] bytes = IOUtils.toByteArray(cosObjectInput);  <br>        <span class="hljs-comment">// 设置响应头  </span><br>        response.setContentType(<span class="hljs-string">&quot;application/octet-stream;charset=UTF-8&quot;</span>);  <br>        response.setHeader(<span class="hljs-string">&quot;Content-Disposition&quot;</span>, <span class="hljs-string">&quot;attachment; filename=&quot;</span> + filepath);  <br>        <span class="hljs-comment">// 写入响应  </span><br>        response.getOutputStream().write(bytes);  <br>        response.getOutputStream().flush();  <br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;  <br>        log.error(<span class="hljs-string">&quot;file download error, filepath = &quot;</span> + filepath, e);  <br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR, <span class="hljs-string">&quot;下载失败&quot;</span>);  <br>    &#125; <span class="hljs-keyword">finally</span> &#123;  <br>        <span class="hljs-keyword">if</span> (cosObjectInput != <span class="hljs-literal">null</span>) &#123;  <br>            cosObjectInput.close();  <br>        &#125;  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>打开Swagger，调用该接口</p><figure><img src="/img/pictureLibrary/image-20250713154408587.png"alt="image-20250713154408587" /><figcaption aria-hidden="true">image-20250713154408587</figcaption></figure><p>根据状态吗和大小可以判断已经下载成功了，但是由于我们并没有指定本地路径，所以暂时什么都看不到</p><h3 id="图片代码生成">图片代码生成</h3><p>同理，利用Mybatis-plusX生成图片的基础层级结构</p><p>优化Picture实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@TableId(type = IdType.ASSIGN_ID)</span><br><span class="hljs-keyword">private</span> Long id;<br><br><span class="hljs-meta">@TableLogic</span><br><span class="hljs-keyword">private</span> Integer isDelete;<br></code></pre></td></tr></table></figure><h3 id="图片上传">图片上传</h3><h4 id="图片上传封装类">1）图片上传封装类</h4><p>新建<code>/dto/picture</code>，由于支持重复上传，我们需要保留图片ID</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureUploadRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片 id（用于修改）  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long id;  <br>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>在我们上传成功后，需要返回给前端返回上传成功的信息</p><p>编写PictureVO，同时提供 PictureVO和Picture互相转换的函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * id  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long id;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片 url  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String url;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片名称  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String name;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 简介  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String introduction;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 标签  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> List&lt;String&gt; tags;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 分类  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String category;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 文件体积  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long picSize;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片宽度  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Integer picWidth;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片高度  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Integer picHeight;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片比例  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Double picScale;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片格式  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String picFormat;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 用户 id  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long userId;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 创建时间  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Date createTime;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 编辑时间  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Date editTime;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 更新时间  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Date updateTime;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 创建用户信息  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> UserVO user;  <br>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 封装类转对象  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Picture <span class="hljs-title function_">voToObj</span><span class="hljs-params">(PictureVO pictureVO)</span> &#123;  <br>        <span class="hljs-keyword">if</span> (pictureVO == <span class="hljs-literal">null</span>) &#123;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>        &#125;  <br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();  <br>        BeanUtils.copyProperties(pictureVO, picture);  <br>        <span class="hljs-comment">// 类型不同，需要转换  </span><br>        picture.setTags(JSONUtil.toJsonStr(pictureVO.getTags()));  <br>        <span class="hljs-keyword">return</span> picture;  <br>    &#125;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 对象转封装类  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PictureVO <span class="hljs-title function_">objToVo</span><span class="hljs-params">(Picture picture)</span> &#123;  <br>        <span class="hljs-keyword">if</span> (picture == <span class="hljs-literal">null</span>) &#123;  <br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  <br>        &#125;  <br>        <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PictureVO</span>();  <br>        BeanUtils.copyProperties(picture, pictureVO);  <br>        <span class="hljs-comment">// 类型不同，需要转换  </span><br>        pictureVO.setTags(JSONUtil.toList(picture.getTags(), String.class));  <br>        <span class="hljs-keyword">return</span> pictureVO;  <br>    &#125;  <br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="通用文件上传服务类">2）通用文件上传服务类</h4><p>虽然说之前编写了COS对象存储操作管理类CosManager，但是没有任何校验机制，需要我们指定</p><p>这里我们编写图片上传服务FileManager，该服务提供图片上传后返回信息的接口</p><p>FileManager可以理解成服务实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileManager</span> &#123;  <br>  <br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> CosClientConfig cosClientConfig;<br>  <br>    <span class="hljs-meta">@Resource</span>  <br>    <span class="hljs-keyword">private</span> CosManager cosManager;  <br>  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>图片解析结果包装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UploadPictureResult</span> &#123;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片地址  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String url;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片名称  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String picName;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 文件体积  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Long picSize;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片宽度  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> picWidth;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片高度  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> picHeight;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片宽高比  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> Double picScale;  <br>  <br>    <span class="hljs-comment">/**  </span><br><span class="hljs-comment">     * 图片格式  </span><br><span class="hljs-comment">     */</span>  <br>    <span class="hljs-keyword">private</span> String picFormat;  <br>  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>采用数据万象，增添<ahref="https://cloud.tencent.com/document/product/436/55377">持久化处理</a></p><figure><img src="/img/pictureLibrary/image-20250713160825149.png"alt="image-20250713160825149" /><figcaption aria-hidden="true">image-20250713160825149</figcaption></figure><p>核心代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(bucketName, key, localFile);<br><span class="hljs-type">PicOperations</span> <span class="hljs-variable">picOperations</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>();<br><br>putObjectRequest.setPicOperations(picOperations);<br><br><span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosClient.putObject(putObjectRequest);<br></code></pre></td></tr></table></figure><p>CosManager 更新方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//上传对象</span><br><span class="hljs-keyword">public</span> PutObjectResult <span class="hljs-title function_">putPictureObject</span><span class="hljs-params">(String key, File file)</span> &#123;<br>  <span class="hljs-type">PutObjectRequest</span> <span class="hljs-variable">putObjectRequest</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PutObjectRequest</span>(cosClientConfig.getBucket(), key, file);<br>  <span class="hljs-type">PicOperations</span> <span class="hljs-variable">picOperations</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PicOperations</span>();<br><br>  picOperations.setIsPicInfo(<span class="hljs-number">1</span>);<br><br>  putObjectRequest.setPicOperations(picOperations);<br><br>  <span class="hljs-keyword">return</span> cosClient.putObject(putObjectRequest);<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>针对于之前的putObject有什么区别吗？</strong></p><blockquote><p>putPictureObject有图片处理的机制，以及可以返回图片元信息，后续允许图片裁剪、缩放等功能</p></blockquote><h4 id="filemanager编写图片上传">3）FileManager编写图片上传</h4><p>开始前讲一下MultipartFile和File的关系</p><p>在浏览器上传本地文件后，会在请求头中添加以下代码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Content-Disposition: form-data; <span class="hljs-attribute">name</span>=<span class="hljs-string">&quot;file&quot;</span>; <span class="hljs-attribute">filename</span>=<span class="hljs-string">&quot;example.jpg&quot;</span><br></code></pre></td></tr></table></figure><p>这串代码可以通过Spring的MultipartFile解析成为File对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MultipartFile</span> &#123;<br>    String <span class="hljs-title function_">getOriginalFilename</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 获取客户端原始文件名</span><br>    InputStream <span class="hljs-title function_">getInputStream</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 获取文件流</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">transferTo</span><span class="hljs-params">(File dest)</span>;   <span class="hljs-comment">// 转存为本地文件</span><br>    <span class="hljs-comment">// ...其他方法</span><br>&#125;<br></code></pre></td></tr></table></figure><p><strong>上传图片</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> UploadPictureResult <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(MultipartFile multipartFile, String uploadPrefix)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//检查文件是否合法</span><br>        validPicture(multipartFile);<br><br>        <span class="hljs-comment">//图片上传地址</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> RandomUtil.randomString(<span class="hljs-number">16</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">originalFilename</span> <span class="hljs-operator">=</span> multipartFile.getOriginalFilename();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadFilename</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s_%s.%s&quot;</span>, DateUtil.formatDate(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()), uuid, FileUtil.getSuffix(originalFilename));<br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadPath</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;/%s/%s&quot;</span>, uploadPrefix, uploadFilename);<br>        <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            file = File.createTempFile(<span class="hljs-string">&quot;aaa&quot;</span>, <span class="hljs-string">&quot;.png&quot;</span>);<br>            multipartFile.transferTo(file);<br><br>            <span class="hljs-comment">//上传图片</span><br>            <span class="hljs-type">PutObjectResult</span> <span class="hljs-variable">putObjectResult</span> <span class="hljs-operator">=</span> cosManager.putPictureObject(uploadPath, file);<br>            <span class="hljs-type">ImageInfo</span> <span class="hljs-variable">imageInfo</span> <span class="hljs-operator">=</span> putObjectResult.getCiUploadResult().getOriginalInfo().getImageInfo();<br><br>            <span class="hljs-comment">//封装返回结果</span><br>            <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UploadPictureResult</span>();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">picWidth</span> <span class="hljs-operator">=</span> imageInfo.getWidth();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">picHeight</span> <span class="hljs-operator">=</span> imageInfo.getHeight();<br>            <span class="hljs-type">double</span> <span class="hljs-variable">picScale</span> <span class="hljs-operator">=</span> NumberUtil.round(picWidth * <span class="hljs-number">1.0</span> / picHeight, <span class="hljs-number">2</span>).doubleValue();<br>            uploadPictureResult.setPicName(FileUtil.mainName(originalFilename));<br>            uploadPictureResult.setPicSize(FileUtil.size(file));<br>            uploadPictureResult.setPicWidth(picWidth);<br>            uploadPictureResult.setPicHeight(picHeight);<br>            uploadPictureResult.setPicScale(picScale);<br>            uploadPictureResult.setPicFormat(imageInfo.getFormat());<br>            uploadPictureResult.setUrl(cosClientConfig.getHost() + <span class="hljs-string">&quot;/&quot;</span> + uploadPath);<br><br>            <span class="hljs-keyword">return</span> uploadPictureResult;<br><br><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            log.error(<span class="hljs-string">&quot;上传图片到COS失败&quot;</span>,e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.SYSTEM_ERROR,<span class="hljs-string">&quot;上传失败&quot;</span>);<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            deletePicture(file);<br>        &#125;<br><br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(MultipartFile multipartFile)</span> &#123;<br>        ThrowUtils.throwIf(multipartFile == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件不能为空&quot;</span>);<br><br>        <span class="hljs-comment">//1.校验文件大小</span><br>        <span class="hljs-type">long</span> <span class="hljs-variable">fileSize</span> <span class="hljs-operator">=</span> multipartFile.getSize();<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">ONE_MB</span> <span class="hljs-operator">=</span> <span class="hljs-number">1024</span> * <span class="hljs-number">1024L</span>;<br>        ThrowUtils.throwIf(fileSize &gt; <span class="hljs-number">2</span> * ONE_MB, ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件大小不能大于2MB&quot;</span>);<br>        <span class="hljs-comment">//2.检查文件后缀</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileSuffix</span> <span class="hljs-operator">=</span> FileUtil.getSuffix(multipartFile.getOriginalFilename());<br><br>        <span class="hljs-comment">//允许上传的后缀</span><br>        <span class="hljs-keyword">final</span> List&lt;String&gt; ALLOW_FORMAT_LIST = Arrays.asList(<span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>, <span class="hljs-string">&quot;webp&quot;</span>);<br><br>        ThrowUtils.throwIf(!ALLOW_FORMAT_LIST.contains(fileSuffix), ErrorCode.PARAMS_ERROR, <span class="hljs-string">&quot;文件类型出错&quot;</span>);<br><br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">deletePicture</span><span class="hljs-params">(File file)</span> &#123;<br>        <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">deleteResult</span> <span class="hljs-operator">=</span> file.delete();<br>        <span class="hljs-keyword">if</span>(!deleteResult) &#123;<br>            log.error(<span class="hljs-string">&quot;file delete error&quot;</span>);<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>乍眼一看有点复杂，其实还好这里简单解释一下代码</p><p>文件名构造 = 日期 + 随机数 + 原始图片后缀</p><p>路径 = / + 用户传入的路径 + / + 文件名</p><p>首先应该校验文件大小和文件格式是否满足条件</p><p>内部代码将传入文件放入临时文件，上传完图片后，数据万象解析出图片信息，将信息填充到上传文件返回结果通用类，文件用完后占用空间，最后需要删除</p><p>我觉得最难的可能是Hutool工具类中的方法，有点恶心，有点多，虽然说这个东西忘了就查，但是常用的还是简单记一下</p><h4 id="服务开发">4）服务开发</h4><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">PictureVO <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(MultipartFile file, PictureUploadRequest pictureUploadRequest, User loginUser)</span>;<br></code></pre></td></tr></table></figure><p>接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> PictureVO <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(MultipartFile multipartFile, PictureUploadRequest pictureUploadRequest, User loginUser)</span> &#123;<br>        ThrowUtils.throwIf(loginUser == <span class="hljs-literal">null</span>, ErrorCode.NO_AUTH_ERROR);<br><br><br>        <span class="hljs-comment">//判断是新增图片还是更新图片</span><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">pictureId</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span>(pictureUploadRequest != <span class="hljs-literal">null</span>) &#123;<br>            pictureId = pictureUploadRequest.getId();<br>        &#125;<br><br>        <span class="hljs-comment">//更新图片</span><br>        <span class="hljs-keyword">if</span>(pictureId != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">exists</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.lambdaQuery()<br>                    .eq(picture -&gt; picture.getId(),pictureId)<br>                    .exists();<br><br>            ThrowUtils.throwIf(!exists,ErrorCode.NOT_FOUND_ERROR,<span class="hljs-string">&quot;图片不存在&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//用户ID划分目录</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">uploadPathPrefix</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;public/%s&quot;</span>,loginUser.getId());<br>        <span class="hljs-type">UploadPictureResult</span> <span class="hljs-variable">uploadPictureResult</span> <span class="hljs-operator">=</span> fileManager.uploadPicture(multipartFile,uploadPathPrefix);<br><br>        <span class="hljs-comment">//构造入库信息</span><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        picture.setUrl(uploadPictureResult.getUrl());<br>        picture.setName(uploadPictureResult.getPicName());<br>        picture.setPicSize(uploadPictureResult.getPicSize());<br>        picture.setPicWidth(uploadPictureResult.getPicWidth());<br>        picture.setPicHeight(uploadPictureResult.getPicHeight());<br>        picture.setPicScale(uploadPictureResult.getPicScale());<br>        picture.setPicFormat(uploadPictureResult.getPicFormat());<br>        picture.setUserId(loginUser.getId());<br><br><br>        <span class="hljs-comment">//如果图片是更新</span><br>        <span class="hljs-keyword">if</span>(pictureId != <span class="hljs-literal">null</span>) &#123;<br>            picture.setId(pictureId);<br>            picture.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br>        &#125;<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.saveOrUpdate(picture);<br>        ThrowUtils.throwIf(!res, ErrorCode.OPERATION_ERROR,<span class="hljs-string">&quot;图片上传失败&quot;</span>);<br><br>        <span class="hljs-keyword">return</span> PictureVO.objToVo(picture);<br><br>    &#125;<br></code></pre></td></tr></table></figure><p>注意点</p><p>1、这里我们使用/public/用户ID作为文件目录</p><p>2、通过检查传入参数PictureID是否有与之对应的图片，来决定是更新还是创建</p><h4 id="接口开发">5）接口开发</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/upload&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;PictureVO&gt; <span class="hljs-title function_">uploadPicture</span><span class="hljs-params">(<span class="hljs-meta">@RequestPart(&quot;file&quot;)</span> MultipartFile multipartFile, PictureUploadRequest pictureUploadRequest, HttpServletRequest request)</span> &#123;<br>    <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br><br>    <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> pictureService.uploadPicture(multipartFile, pictureUploadRequest, loginUser);<br><br>    <span class="hljs-keyword">return</span> ResultUtils.success(pictureVO);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>当我们上传图片过大的时候，会报错。这是因为Tomcat限制了请求文件上传的大小，可以更改<code>application.yml</code>解除限制</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">spring:</span>  <br>  <span class="hljs-comment"># 开放更大的文件上传体积  </span><br>  <span class="hljs-attr">servlet:</span>  <br>    <span class="hljs-attr">multipart:</span>  <br>      <span class="hljs-attr">max-file-size:</span> <span class="hljs-string">10MB</span><br></code></pre></td></tr></table></figure><p>测试，成功！！！</p><p>如果新建图片的话，保证<code>PictureUploadRequest</code>为空，只有当更新图片才传入ID</p><figure><img src="/img/pictureLibrary/image-20250713173905563.png"alt="image-20250713173905563" /><figcaption aria-hidden="true">image-20250713173905563</figcaption></figure><p>扩展</p><p>当然在我们文件上传的时候，总是要创建临时文件赋值。为了提高性能可以通过流的方式将请求的文件上传到COS</p><h3 id="图片管理">图片管理</h3><h4 id="需求分析">需求分析</h4><ul><li>根据ID删除图片(管理员)</li><li>更新图片(管理员)</li><li>分页获取图片列表(管理员)</li><li>根据ID获取图片(管理员)</li><li>分页获取图片列表(需要脱敏)</li><li>修改图片</li></ul><h4 id="请求类封装">请求类封装</h4><p>1）图片更新请求封装类(管理员)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureUpdateRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String introduction;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String category;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 标签</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; tags;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>2）图片更新请求封装类(用户)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureEditRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String introduction;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String category;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 标签</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; tags;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）图片分页查询请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PictureQueryRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PageRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String introduction;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分类</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String category;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 标签</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; tags;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 文件体积</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long picSize;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片宽度</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer picWidth;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片高度</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer picHeight;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片比例</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Double picScale;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 图片格式</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String picFormat;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 搜索词（同时搜名称、简介等）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String searchText;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long userId;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务开发-1">服务开发</h4><p>1）由于需要频繁验证用户身份，userService新增isAdmin实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span>  <br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isAdmin</span><span class="hljs-params">(User user)</span> &#123;  <br>    <span class="hljs-keyword">return</span> user != <span class="hljs-literal">null</span> &amp;&amp; UserRoleEnum.ADMIN.getValue().equals(user.getUserRole());  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>2）针对于图片分页查询，需要设计与用户getQueryWrapper一样的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> QueryWrapper&lt;Picture&gt; <span class="hljs-title function_">getQueryWrapper</span><span class="hljs-params">(PictureQueryRequest pictureQueryRequest)</span> &#123;<br><br>        QueryWrapper&lt;Picture&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        <span class="hljs-keyword">if</span>(pictureQueryRequest == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> queryWrapper;<br>        &#125;<br><br>        <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureQueryRequest.getId();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> pictureQueryRequest.getName();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">introduction</span> <span class="hljs-operator">=</span> pictureQueryRequest.getIntroduction();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">category</span> <span class="hljs-operator">=</span> pictureQueryRequest.getCategory();<br>        List&lt;String&gt; tags = pictureQueryRequest.getTags();<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">picSize</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPicSize();<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">picWidth</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPicWidth();<br>        <span class="hljs-type">Integer</span> <span class="hljs-variable">picHeight</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPicHeight();<br>        <span class="hljs-type">Double</span> <span class="hljs-variable">picScale</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPicScale();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">picFormat</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPicFormat();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">searchText</span> <span class="hljs-operator">=</span> pictureQueryRequest.getSearchText();<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> pictureQueryRequest.getUserId();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">sortField</span> <span class="hljs-operator">=</span> pictureQueryRequest.getSortField();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">sortOrder</span> <span class="hljs-operator">=</span> pictureQueryRequest.getSortOrder();<br><br>        <span class="hljs-comment">//从多个字段中搜索</span><br>        <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(searchText)) &#123;<br>            queryWrapper.and(qw -&gt; qw.like(<span class="hljs-string">&quot;name&quot;</span>,searchText)<br>                    .or()<br>                    .like(<span class="hljs-string">&quot;introduction&quot;</span>,searchText)<br>            );<br>        &#125;<br><br><br>        queryWrapper.eq(ObjUtil.isNotEmpty(id),<span class="hljs-string">&quot;id&quot;</span>,id);<br>        queryWrapper.eq(ObjUtil.isNotEmpty(userId),<span class="hljs-string">&quot;userId&quot;</span>,userId);<br>        queryWrapper.like(StrUtil.isNotBlank(name),<span class="hljs-string">&quot;name&quot;</span>,name);<br>        queryWrapper.like(StrUtil.isNotBlank(introduction),<span class="hljs-string">&quot;introduction&quot;</span>,introduction);<br>        queryWrapper.like(StrUtil.isNotBlank(picFormat),<span class="hljs-string">&quot;picFormat&quot;</span>,picFormat);<br>        queryWrapper.eq(StrUtil.isNotBlank(category),<span class="hljs-string">&quot;category&quot;</span>,category);<br>        queryWrapper.eq(ObjUtil.isNotEmpty(picSize),<span class="hljs-string">&quot;picSize&quot;</span>,picSize);<br>        queryWrapper.eq(ObjUtil.isNotEmpty(picWidth),<span class="hljs-string">&quot;picWidth&quot;</span>,picWidth);<br>        queryWrapper.eq(ObjUtil.isNotEmpty(picHeight),<span class="hljs-string">&quot;picHeight&quot;</span>,picHeight);<br>        queryWrapper.eq(ObjUtil.isNotEmpty(picScale),<span class="hljs-string">&quot;picScale&quot;</span>,picScale);<br><br>        <span class="hljs-keyword">if</span>(CollUtil.isNotEmpty(tags)) &#123;<br>            <span class="hljs-keyword">for</span>(String tag : tags) &#123;<br>                queryWrapper.like(<span class="hljs-string">&quot;tags&quot;</span>,<span class="hljs-string">&quot;\&quot;&quot;</span> + tag + <span class="hljs-string">&quot;\&quot;&quot;</span>);<br>            &#125;<br>        &#125;<br><br>        queryWrapper.orderBy(StrUtil.isNotEmpty(sortField),sortOrder.equals(<span class="hljs-string">&quot;ascend&quot;</span>),sortField);<br><br>        <span class="hljs-keyword">return</span> queryWrapper;<br>    &#125;<br></code></pre></td></tr></table></figure><p>注意</p><p>1、searchText 是从name和introduction中搜索</p><p>2、tags在数据库中存储的是JSON格式字符串，提取出的每一个标签都需要模糊查询</p><p>3）编写获取图片封装方法，关联创建用户信息</p><p>获取单张图片封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> PictureVO <span class="hljs-title function_">getPictureVO</span><span class="hljs-params">(Picture picture, HttpServletRequest request)</span> &#123;<br>    <span class="hljs-type">PictureVO</span> <span class="hljs-variable">pictureVO</span> <span class="hljs-operator">=</span> PictureVO.objToVo(picture);<br><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> pictureVO.getUserId();<br>    <span class="hljs-keyword">if</span>(userId != <span class="hljs-literal">null</span> &amp;&amp; userId &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.getById(userId);<br>        <span class="hljs-type">UserVO</span> <span class="hljs-variable">userVO</span> <span class="hljs-operator">=</span> userService.getUserVO(user);<br><br>        pictureVO.setUser(userVO);<br><br>    &#125;<br>    <span class="hljs-keyword">return</span> pictureVO;<br>&#125;<br></code></pre></td></tr></table></figure><p>分页获取图片封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> Page&lt;PictureVO&gt; <span class="hljs-title function_">getPictureVOPage</span><span class="hljs-params">(Page&lt;Picture&gt; picturePage, HttpServletRequest request)</span> &#123;<br>    List&lt;Picture&gt; pictureList = picturePage.getRecords();<br>    Page&lt;PictureVO&gt; pictureVOPage = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(picturePage.getCurrent(), picturePage.getSize(),picturePage.getTotal());<br><br>    <span class="hljs-keyword">if</span>(CollUtil.isEmpty(pictureList)) &#123;<br>        <span class="hljs-keyword">return</span> pictureVOPage;<br>    &#125;<br><br><br>    List&lt;PictureVO&gt; pictureVOList = pictureList.stream().map(PictureVO::objToVo).collect(Collectors.toList());<br><br>    Set&lt;Long&gt; userIdSet = pictureVOList.stream().map(PictureVO::getUserId).collect(Collectors.toSet());<br>    Map&lt;Long, List&lt;User&gt;&gt; userIdUserListMap = userService.listByIds(userIdSet).stream().collect(Collectors.groupingBy(User::getId));<br><br><br>    pictureVOList.forEach(pictureVO -&gt; &#123;<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> pictureVO.getUserId();<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">if</span>(userIdUserListMap.containsKey(userId)) &#123;<br>            user = userIdUserListMap.get(userId).get(<span class="hljs-number">0</span>);<br>        &#125;<br><br>        pictureVO.setUser(userService.getUserVO(user));<br>    &#125;);<br><br>    pictureVOPage.setRecords(pictureVOList);<br><br><br>    <span class="hljs-keyword">return</span> pictureVOPage;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>上面代码可能有些复杂，但归根结底只做了<code>Page&lt;Picture&gt;</code>转化为<code>Page&lt;PictureVO&gt;</code>，为内部PictureVO插入创建用户字段</p><p>4）编写图片数据校验方法，在图片更新和修改的时候判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">validPicture</span><span class="hljs-params">(Picture picture)</span> &#123;<br>    ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>,ErrorCode.PARAMS_ERROR);<br><br>    <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> picture.getId();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> picture.getUrl();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">introduction</span> <span class="hljs-operator">=</span> picture.getIntroduction();<br><br>    ThrowUtils.throwIf(ObjUtil.isNull(id),ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;id不能为空&quot;</span>);<br>    <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(url)) &#123;<br>        ThrowUtils.throwIf(url.length() &gt; <span class="hljs-number">1024</span>,ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;url过长&quot;</span>);<br>    &#125;<br><br><br>    <span class="hljs-keyword">if</span>(StrUtil.isNotBlank(introduction)) &#123;<br>        ThrowUtils.throwIf(introduction.length() &gt; <span class="hljs-number">800</span>,ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;简介过长&quot;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>这里主要对图片id、url、introduction进行约束，如果想要增添规则自己加</p><h4 id="接口开发-1">接口开发</h4><p>上述功能都是样板代码，俗称增删改查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/delete&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">deletePicture</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> DeleteRequest deleteRequest, HttpServletRequest request)</span> &#123;<br>        ThrowUtils.throwIf(deleteRequest == <span class="hljs-literal">null</span> || deleteRequest.getId() &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>        <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> deleteRequest.getId();<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br>        ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-keyword">if</span> (!loginUser.getId().equals(picture.getUserId()) &amp;&amp; !UserConstant.ADMIN_ROLE.equals(loginUser.getUserRole())) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br><br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> pictureService.removeById(picture);<br>        ThrowUtils.throwIf(!res, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br>    &#125;<br><br><br><br>    <span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br>    <span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">updatePicture</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureUpdateRequest pictureUpdateRequest)</span> &#123;<br>        ThrowUtils.throwIf(pictureUpdateRequest == <span class="hljs-literal">null</span> || pictureUpdateRequest.getId() &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        BeanUtils.copyProperties(pictureUpdateRequest,picture);<br>        <br>        picture.setTags(JSONUtil.toJsonStr(pictureUpdateRequest.getTags()));<br>        <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureUpdateRequest.getId();<br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br><br>        ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR);<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> pictureService.updateById(picture);<br>        ThrowUtils.throwIf(!res,ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/get&quot;)</span><br>    <span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Picture&gt; <span class="hljs-title function_">getPicture</span><span class="hljs-params">(<span class="hljs-type">long</span> id)</span> &#123;<br>        ThrowUtils.throwIf(id &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br><br>        ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(picture);<br>    &#125;<br><br><br>    <span class="hljs-meta">@GetMapping(&quot;/get/vo&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;PictureVO&gt; <span class="hljs-title function_">getPictureVO</span><span class="hljs-params">(<span class="hljs-type">long</span> id,HttpServletRequest request)</span> &#123;<br>        ThrowUtils.throwIf(id &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br><br>        ThrowUtils.throwIf(picture == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR);<br><br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(pictureService.getPictureVO(picture,request));<br>    &#125;<br><br><br><br>    <span class="hljs-meta">@PostMapping(&quot;/list/page&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;Picture&gt;&gt; <span class="hljs-title function_">listPictureByPage</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureQueryRequest pictureQueryRequest)</span> &#123;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> pictureQueryRequest.getCurrent();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPageSize();<br><br>        <span class="hljs-comment">// 限制爬虫</span><br>        ThrowUtils.throwIf(size &gt; <span class="hljs-number">20</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-comment">// 查询数据库</span><br>        Page&lt;Picture&gt; picturePage = pictureService.page(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>                pictureService.getQueryWrapper(pictureQueryRequest)<br>        );<br><br>        <span class="hljs-comment">// 获取封装类</span><br>        <span class="hljs-keyword">return</span> ResultUtils.success(picturePage);<br>    &#125;<br><br><br>    <span class="hljs-meta">@PostMapping(&quot;/list/page/vo&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;PictureVO&gt;&gt; <span class="hljs-title function_">listPictureVOByPage</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureQueryRequest pictureQueryRequest,HttpServletRequest request)</span> &#123;<br>        <span class="hljs-type">long</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> pictureQueryRequest.getCurrent();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> pictureQueryRequest.getPageSize();<br><br>        <span class="hljs-comment">// 限制爬虫</span><br>        ThrowUtils.throwIf(size &gt; <span class="hljs-number">20</span>, ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-comment">// 查询数据库</span><br>        Page&lt;Picture&gt; picturePage = pictureService.page(<br>                <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current, size),<br>                pictureService.getQueryWrapper(pictureQueryRequest)<br>        );<br><br>        <span class="hljs-comment">// 获取封装类</span><br>        <span class="hljs-keyword">return</span> ResultUtils.success(pictureService.getPictureVOPage(picturePage, request));<br>    &#125;<br><br><br>    <span class="hljs-comment">//编辑图片(用户)</span><br>    <span class="hljs-meta">@PostMapping(&quot;/edit&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">editPicture</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> PictureEditRequest pictureEditRequest,HttpServletRequest request)</span> &#123;<br>        ThrowUtils.throwIf(pictureEditRequest == <span class="hljs-literal">null</span> || pictureEditRequest.getId() &lt;= <span class="hljs-number">0</span>,ErrorCode.PARAMS_ERROR);<br><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Picture</span>();<br>        BeanUtils.copyProperties(pictureEditRequest,picture);<br><br>        picture.setTags(JSONUtil.toJsonStr(pictureEditRequest.getTags()));<br>        picture.setEditTime(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>());<br><br>        <span class="hljs-type">long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> pictureEditRequest.getId();<br>        <span class="hljs-type">Picture</span> <span class="hljs-variable">oldPicture</span> <span class="hljs-operator">=</span> pictureService.getById(id);<br>        ThrowUtils.throwIf(oldPicture == <span class="hljs-literal">null</span>,ErrorCode.NOT_FOUND_ERROR);<br><br>        <span class="hljs-comment">//仅本人和管理员可以编辑</span><br>        <span class="hljs-keyword">if</span>(!oldPicture.getUserId().equals(loginUser.getId()) || !UserConstant.ADMIN_ROLE.equals(loginUser.getUserRole())) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br><br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> pictureService.updateById(oldPicture);<br><br>        ThrowUtils.throwIf(!res,ErrorCode.OPERATION_ERROR);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br><br>    &#125;<br></code></pre></td></tr></table></figure><p>注意，编辑和更新图片的时候，由于tags类型不一致，我们需要将List集合转化为字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">picture.setTags(JSONUtil.toJsonStr(pictureEditRequest.getTags()));<br></code></pre></td></tr></table></figure><h3 id="设置预置标签和类型">设置预置标签和类型</h3><p>用户需要通过标签和类型进行搜索图片</p><p>我们可以设置一组固定的数值初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/tag_category&quot;)</span>  <br><span class="hljs-keyword">public</span> BaseResponse&lt;PictureTagCategory&gt; <span class="hljs-title function_">listPictureTagCategory</span><span class="hljs-params">()</span> &#123;  <br>    <span class="hljs-type">PictureTagCategory</span> <span class="hljs-variable">pictureTagCategory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PictureTagCategory</span>();  <br>    List&lt;String&gt; tagList = Arrays.asList(<span class="hljs-string">&quot;热门&quot;</span>, <span class="hljs-string">&quot;搞笑&quot;</span>, <span class="hljs-string">&quot;生活&quot;</span>, <span class="hljs-string">&quot;高清&quot;</span>, <span class="hljs-string">&quot;艺术&quot;</span>, <span class="hljs-string">&quot;校园&quot;</span>, <span class="hljs-string">&quot;背景&quot;</span>, <span class="hljs-string">&quot;简历&quot;</span>, <span class="hljs-string">&quot;创意&quot;</span>);  <br>    List&lt;String&gt; categoryList = Arrays.asList(<span class="hljs-string">&quot;模板&quot;</span>, <span class="hljs-string">&quot;电商&quot;</span>, <span class="hljs-string">&quot;表情包&quot;</span>, <span class="hljs-string">&quot;素材&quot;</span>, <span class="hljs-string">&quot;海报&quot;</span>);  <br>    pictureTagCategory.setTagList(tagList);  <br>    pictureTagCategory.setCategoryList(categoryList);  <br>    <span class="hljs-keyword">return</span> ResultUtils.success(pictureTagCategory);  <br>&#125;<br><br></code></pre></td></tr></table></figure><p>至此后端部分完结！！！</p><p>已经有点晕了，感觉都在乱写了。。。。。</p>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱2-项目初始化</title>
    <link href="/2025/07/11/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B102/"/>
    <url>/2025/07/11/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B102/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/11 PM</p>          </div><h1 id="项目开始前闲话">项目开始前闲话</h1><p>通过昨天的努力，我们终于来到了用户模块</p><p>我认为今天的进度可以学完用户模块</p><p>有一说一，感觉在文字教程的基础上写博客分享自己的见解是一件很有趣的事情</p><p>如果让我只照着文字教程做，不写笔记的话，说真的我可能半途而废了(之前试过hhh)</p><p>COME ON！把手头的闲杂事情放一放开始今天的学习</p><h1 id="用户模块后端开发">用户模块（后端开发）</h1><p>昨天已经完成到了根据Mybatis-plusX插件根据用户表创建实体类，同时放到指定的位置</p><p>当然生成的代码不能完全满足我们，有一些需要我们自己修改</p><h3 id="数据模型开发">数据模型开发</h3><h4 id="实体类">实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@TableId(type = IdType.ASSIGN_ID)</span> <span class="hljs-comment">//防止按序爬虫</span><br><span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-meta">@TableLogic</span> <span class="hljs-comment">//逻辑删除</span><br><span class="hljs-keyword">private</span> Integer isDelete;<br></code></pre></td></tr></table></figure><h4 id="枚举类针对于用户权限">枚举类（针对于用户权限）</h4><p>创建<code>/model/enums</code>，设置这个枚举类可以避免我们更快的获取到val，而不是自己手写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> enums;<br><br><span class="hljs-keyword">import</span> cn.hutool.core.util.ObjUtil;<br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">UserRoleEnum</span> &#123;<br><br>    USER(<span class="hljs-string">&quot;用户&quot;</span>,<span class="hljs-string">&quot;user&quot;</span>),<br>    ADMIN(<span class="hljs-string">&quot;管理员&quot;</span>,<span class="hljs-string">&quot;admin&quot;</span>);<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String text;<br><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String val;<br><br>    UserRoleEnum(String text, String val) &#123;<br>        <span class="hljs-built_in">this</span>.text = text;<br>        <span class="hljs-built_in">this</span>.val = val;<br>    &#125;<br><br><br><br>    <span class="hljs-comment">//根据val获取枚举</span><br>    <span class="hljs-keyword">public</span> UserRoleEnum <span class="hljs-title function_">getEnumByVal</span><span class="hljs-params">(String val)</span> &#123;<br>        <span class="hljs-keyword">if</span>(ObjUtil.isEmpty(val)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">for</span>(UserRoleEnum e : UserRoleEnum.values()) &#123;<br>            <span class="hljs-keyword">if</span>(e.val.equals(val)) &#123;<br>                <span class="hljs-keyword">return</span> e;<br>            &#125;<br>        &#125;<br><br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="用户注册">用户注册</h3><p>创建<code>/model/dto/UserRegisterRequest</code>，封装用户注册请求</p><p>dto(数据传输对象)，主要是用来封装参数对象的，就例如登录需要用户名和密码，我们可以封装这个类</p><h4 id="用户注册请求类封装">用户注册请求类封装</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRegisterRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> String userAccount;<br>    <br>    <span class="hljs-keyword">private</span> String userPassword;<br>    <br>    <span class="hljs-keyword">private</span> String checkPassword;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务及服务实现类">服务及服务实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;User&gt; &#123;<br><br>    <span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount,String userPassword,String checkPassword)</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="实现用户注册逻辑">实现用户注册逻辑</h4><p>主要分为4步曲</p><p>1）校验参数是否合法 2）判断是否存在想注册的用户 3）加密密码4）插入数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;UserMapper, User&gt;<br>    <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserService</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">userRegister</span><span class="hljs-params">(String userAccount, String userPassword, String checkPassword)</span> &#123;<br>        <span class="hljs-comment">//1.校验参数</span><br>        <span class="hljs-keyword">if</span>(StrUtil.hasBlank(userAccount,userPassword,checkPassword)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br><br>        <span class="hljs-keyword">if</span>(userAccount.length() &lt; <span class="hljs-number">4</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-keyword">if</span>(userPassword.length() &lt; <span class="hljs-number">8</span> || checkPassword.length() &lt; <span class="hljs-number">8</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br><br>        <span class="hljs-keyword">if</span>(!userPassword.equals(checkPassword)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-comment">//2.判断是否已有用户</span><br>        <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>        queryWrapper.eq(<span class="hljs-string">&quot;userAccount&quot;</span>,userAccount);<br><br>        <span class="hljs-type">long</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.baseMapper.selectCount(queryWrapper);<br>        <span class="hljs-keyword">if</span>(count &gt; <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-comment">//3.加密</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">encryptPass</span> <span class="hljs-operator">=</span> getEncryptPass(userPassword);<br><br>        <span class="hljs-comment">//4.插入数据库</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        user.setUserAccount(userAccount);<br>        user.setUserPassword(encryptPass);<br>        user.setUserName(<span class="hljs-string">&quot;无名字&quot;</span>);<br>        user.setUserRole(UserRoleEnum.USER.getVal());<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.save(user);<br>        <span class="hljs-keyword">if</span>(!res) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> user.getId();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>加密的时候需要我们放盐(搅屎)，防止对方试密码，这里使用md5加密(这方面可以自己了解)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEncryptPass</span><span class="hljs-params">(String userPassword)</span> &#123;<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">SALT</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;KotRin&quot;</span>;<br>    <span class="hljs-keyword">return</span> DigestUtils.md5DigestAsHex((SALT + userPassword).getBytes());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口开发">接口开发</h4><p>刚刚已经实现了注册逻辑，现在可以在接口中调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/user&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br><br>    <span class="hljs-meta">@PostMapping(&quot;/register&quot;)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">register</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserRegisterRequest userRegisterRequest)</span> &#123;<br>        ThrowUtils.throwIf(userRegisterRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserAccount();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getUserPassword();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">checkPassword</span> <span class="hljs-operator">=</span> userRegisterRequest.getCheckPassword();<br><br>        <span class="hljs-type">long</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> userService.userRegister(userAccount, userPassword, checkPassword);<br><br>        <span class="hljs-keyword">return</span> ResultUtils.success(l);<br>    &#125;<br><br>    <br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试接口</p><figure><img src="/img/pictureLibrary/image-20250711123351901.png"alt="image-20250711123351901" /><figcaption aria-hidden="true">image-20250711123351901</figcaption></figure><h3 id="用户登录">用户登录</h3><p>注册做好后，登录相比于注册少了一个checkPassword的字段</p><p>这里还需要考虑到返回给用户的数据需要时脱敏后的，而且还需要记录用户登录态，方便下次用户直接登录</p><h4 id="用户服务前置准备">用户服务前置准备</h4><p><code>/dto/user</code>下封装<code>UserLoginRequest</code>请求类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserLoginRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">3466946553368564010L</span>;<br>    <span class="hljs-keyword">private</span> String userAccount;<br><br>    <span class="hljs-keyword">private</span> String userPassword;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>新建<code>/vo/LoginUserVO</code>，用来脱敏数据</p><p>这里主要需要对userPassword、editTime脱敏</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LoginUserVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户 id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 账号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAccount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户昵称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户头像</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAvatar;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userProfile;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户角色：user/admin</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userRole;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date createTime;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 更新时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date updateTime;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建存储用户登录态键的常量<code>/constant/UserConstant</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.constant;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserConstant</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户登录态键</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">USER_LOGIN_STATE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;user_login&quot;</span>;<br><br>    <span class="hljs-comment">//  region 权限</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 默认角色</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_ROLE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;user&quot;</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 管理员角色</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">ADMIN_ROLE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;admin&quot;</span>;<br><br>    <span class="hljs-comment">// endregion</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务实现类开发">服务实现类开发</h4><p>根据<code>request</code>获取当前登录用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getLoginUser</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>  <span class="hljs-comment">//判断是否已经登录</span><br>  <span class="hljs-type">Object</span> <span class="hljs-variable">userObj</span> <span class="hljs-operator">=</span> request.getSession().getAttribute(UserConstant.USER_LOGIN_STATE);<br>  <span class="hljs-type">User</span> <span class="hljs-variable">currentUser</span> <span class="hljs-operator">=</span> (User) userObj;<br><br>  <span class="hljs-keyword">if</span>(currentUser == <span class="hljs-literal">null</span> || currentUser.getId() == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN_ERROR);<br>  &#125;<br><br>  <span class="hljs-comment">//从数据库中查询(也可以不查直接返回)</span><br>  <span class="hljs-type">long</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> currentUser.getId();<br>  currentUser = <span class="hljs-built_in">this</span>.getById(userId);<br>  <span class="hljs-keyword">if</span>(currentUser == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN_ERROR);<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> currentUser;<br>&#125;<br></code></pre></td></tr></table></figure><p>获取当前脱敏后的用户信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> LoginUserVO <span class="hljs-title function_">getLoginUserVO</span><span class="hljs-params">(User user)</span> &#123;<br>  <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-type">LoginUserVO</span> <span class="hljs-variable">loginUserVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginUserVO</span>();<br>  BeanUtils.copyProperties(user,loginUserVO); <span class="hljs-comment">//将user内包含的内容拷贝给loginUserVO</span><br><br>  <span class="hljs-keyword">return</span> loginUserVO;<br>&#125;<br></code></pre></td></tr></table></figure><p>用户登录</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> LoginUserVO <span class="hljs-title function_">userLogin</span><span class="hljs-params">(String userAccount, String userPassword, HttpServletRequest request)</span> &#123;<br>  <span class="hljs-comment">//1.校验参数</span><br>  <span class="hljs-keyword">if</span>(StrUtil.hasBlank(userAccount,userPassword)) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR);<br>  &#125;<br><br><br>  <span class="hljs-keyword">if</span>(userAccount.length() &lt; <span class="hljs-number">4</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;账户名必须大于4位&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-keyword">if</span>(userPassword.length() &lt; <span class="hljs-number">8</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;密码需要大于8位&quot;</span>);<br>  &#125;<br><br><br><br>  <span class="hljs-type">String</span> <span class="hljs-variable">encryptPass</span> <span class="hljs-operator">=</span> getEncryptPass(userPassword);<br><br>  <span class="hljs-comment">//2.查询是否有当前用户</span><br>  <span class="hljs-type">QueryWrapper</span> <span class="hljs-variable">queryWrapper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>();<br>  queryWrapper.eq(<span class="hljs-string">&quot;userAccount&quot;</span>,userAccount);<br>  queryWrapper.eq(<span class="hljs-string">&quot;userPassword&quot;</span>,encryptPass);<br><br>  <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.baseMapper.selectOne(queryWrapper);<br><br>  <span class="hljs-comment">//用户不存在</span><br>  <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.PARAMS_ERROR,<span class="hljs-string">&quot;用户不存在或者密码错误&quot;</span>);<br>  &#125;<br><br>  <span class="hljs-comment">//3.记录用户登录态</span><br>  request.getSession().setAttribute(UserConstant.USER_LOGIN_STATE,user);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getLoginUserVO(user);<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口开发-1">接口开发</h4><p>登录接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/login&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;LoginUserVO&gt; <span class="hljs-title function_">login</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserLoginRequest userLoginRequest, HttpServletRequest request)</span> &#123;<br>  ThrowUtils.throwIf(userLoginRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br>  <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userLoginRequest.getUserAccount();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">userPassword</span> <span class="hljs-operator">=</span> userLoginRequest.getUserPassword();<br><br><br>  <span class="hljs-type">LoginUserVO</span> <span class="hljs-variable">loginUserVO</span> <span class="hljs-operator">=</span> userService.userLogin(userAccount, userPassword,request);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(loginUserVO);<br>&#125;<br></code></pre></td></tr></table></figure><p>获取当前登录用户接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/get/login&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;LoginUserVO&gt; <span class="hljs-title function_">getLoginUser</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>  <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(userService.getLoginUserVO(loginUser));<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="用户注销">用户注销</h3><p>用户注销，实际上只需要我们去判断用户是否登录，如果已经登录那么清除用户登录态</p><h4 id="服务实现类">服务实现类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">logout</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>  <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> request.getSession().getAttribute(UserConstant.USER_LOGIN_STATE);<br>  <span class="hljs-keyword">if</span>(o == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NOT_LOGIN_ERROR,<span class="hljs-string">&quot;用户未登录&quot;</span>);<br>  &#125;<br><br>  request.getSession().removeAttribute(UserConstant.USER_LOGIN_STATE);<br><br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口开发-2">接口开发</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/logout&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">userLogOut</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br><br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> userService.logout(request);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(res);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="用户权限控制">用户权限控制</h3><p>权限控制业务需求中很常用，主要是用AOP + 自定义注解实现统一拦截</p><h4 id="权限校验注解">权限校验注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Target(ElementType.METHOD)</span><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> AuthCheck &#123;<br>    String <span class="hljs-title function_">mustRole</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&quot;&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="aop">AOP</h4><p>主要讲一下代码，可以直接拷贝</p><p><code>@Aspect</code> 声明是AOP切面</p><p>针对于自定义注解，采用环绕切面<code>@Around("@annotation(authCheck)")</code></p><p>提取<code>authCheck.mustRole()</code>根据枚举类，去判断权限是否可以放行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AuthInterceptor</span> &#123;<br><br>    <span class="hljs-meta">@Resource</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 执行拦截</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> joinPoint 切入点</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> authCheck 权限校验注解</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Around(&quot;@annotation(authCheck)&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">doInterceptor</span><span class="hljs-params">(ProceedingJoinPoint joinPoint, AuthCheck authCheck)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">mustRole</span> <span class="hljs-operator">=</span> authCheck.mustRole();<br>        <span class="hljs-type">RequestAttributes</span> <span class="hljs-variable">requestAttributes</span> <span class="hljs-operator">=</span> RequestContextHolder.currentRequestAttributes();<br>        <span class="hljs-type">HttpServletRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> ((ServletRequestAttributes) requestAttributes).getRequest();<br>        <span class="hljs-comment">// 当前登录用户</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">loginUser</span> <span class="hljs-operator">=</span> userService.getLoginUser(request);<br>        <span class="hljs-type">UserRoleEnum</span> <span class="hljs-variable">mustRoleEnum</span> <span class="hljs-operator">=</span> UserRoleEnum.getEnumByValue(mustRole);<br>        <span class="hljs-comment">// 不需要权限，放行</span><br>        <span class="hljs-keyword">if</span> (mustRoleEnum == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> joinPoint.proceed();<br>        &#125;<br>        <span class="hljs-comment">// 以下为：必须有该权限才通过</span><br>        <span class="hljs-comment">// 获取当前用户具有的权限</span><br>        <span class="hljs-type">UserRoleEnum</span> <span class="hljs-variable">userRoleEnum</span> <span class="hljs-operator">=</span> UserRoleEnum.getEnumByValue(loginUser.getUserRole());<br>        <span class="hljs-comment">// 没有权限，拒绝</span><br>        <span class="hljs-keyword">if</span> (userRoleEnum == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br>        <span class="hljs-comment">// 要求必须有管理员权限，但用户没有管理员权限，拒绝</span><br>        <span class="hljs-keyword">if</span> (UserRoleEnum.ADMIN.equals(mustRoleEnum) &amp;&amp; !UserRoleEnum.ADMIN.equals(userRoleEnum)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(ErrorCode.NO_AUTH_ERROR);<br>        &#125;<br>        <span class="hljs-comment">// 通过权限校验，放行</span><br>        <span class="hljs-keyword">return</span> joinPoint.proceed();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="用户管理">用户管理</h3><p>用户管理功能包含</p><ul><li>创建用户</li><li>根据ID删除用户</li><li>更新用户</li><li>分页查询用户</li><li>根据ID查询用户</li></ul><p>1、创建用户请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserAddRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1500218048664610744L</span>;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 账号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAccount;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户昵称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户头像</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAvatar;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userProfile;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户角色：user/admin</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userRole;<br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>2、更新用户请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserUpdateRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">730213206973121277L</span>;<br>    <span class="hljs-keyword">private</span> Long id;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户昵称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户头像</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAvatar;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userProfile;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户角色：user/admin</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userRole;<br>    <br><br>&#125;<br></code></pre></td></tr></table></figure><p>3、查询用户请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EqualsAndHashCode(callSuper = true)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserQueryRequest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PageRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">5025140473960503198L</span>;<br>    <span class="hljs-keyword">private</span> Long id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 账号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAccount;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户昵称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userProfile;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户角色：user/admin</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userRole;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="用户信息脱敏">用户信息脱敏</h4><p><code>/model/vo</code>包下创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * id</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Long id;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 账号</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAccount;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户昵称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户头像</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userAvatar;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户简介</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userProfile;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 用户角色：user/admin</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String userRole;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建时间</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Date createTime;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="服务开发">服务开发</h4><p>编写获取当前脱敏用户信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> UserVO <span class="hljs-title function_">getUserVO</span><span class="hljs-params">(User user)</span> &#123;<br>  <span class="hljs-keyword">if</span>(user == <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-type">UserVO</span> <span class="hljs-variable">userVO</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserVO</span>();<br>  BeanUtils.copyProperties(user,userVO);<br><br>  <span class="hljs-keyword">return</span> userVO;<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;UserVO&gt; <span class="hljs-title function_">getUserVOList</span><span class="hljs-params">(List&lt;User&gt; userList)</span> &#123;<br><br>  <span class="hljs-keyword">if</span>(CollUtil.isEmpty(userList)) &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>  &#125;<br><br><br>  <span class="hljs-keyword">return</span> userList.stream().map(<span class="hljs-built_in">this</span>::getUserVO).collect(Collectors.toList());<br><br>&#125;<br></code></pre></td></tr></table></figure><p>针对于分页查询，我们需要根据用户查询参数构造SQL查询，因为使用了Mybatis-plus，我们可以通过QueryWrapper构建查询条件</p><p>Service中编写getWrapper拼接查询条件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> QueryWrapper&lt;User&gt; <span class="hljs-title function_">getQueryWrapper</span><span class="hljs-params">(UserQueryRequest userQueryRequest)</span> &#123;<br><br>  <span class="hljs-type">Long</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> userQueryRequest.getId();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">userAccount</span> <span class="hljs-operator">=</span> userQueryRequest.getUserAccount();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">userName</span> <span class="hljs-operator">=</span> userQueryRequest.getUserName();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">userProfile</span> <span class="hljs-operator">=</span> userQueryRequest.getUserProfile();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">sortField</span> <span class="hljs-operator">=</span> userQueryRequest.getSortField();<br>  <span class="hljs-type">String</span> <span class="hljs-variable">sortOrder</span> <span class="hljs-operator">=</span> userQueryRequest.getSortOrder();<br><br><br>  QueryWrapper&lt;User&gt; queryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>  queryWrapper.eq(ObjUtil.isNotNull(id),<span class="hljs-string">&quot;id&quot;</span>,id);<br>  queryWrapper.eq(StrUtil.isNotBlank(userAccount),<span class="hljs-string">&quot;userAccount&quot;</span>,userAccount);<br>  queryWrapper.like(StrUtil.isNotBlank(userName),<span class="hljs-string">&quot;userName&quot;</span>,userName);<br>  queryWrapper.like(StrUtil.isNotBlank(userProfile),<span class="hljs-string">&quot;userProfile&quot;</span>,userProfile);<br>  <span class="hljs-comment">//queryWraper.orderBy(boolean，isasc，column)  参数一：断言 参数二：是否升序 参数三：按照那个字段排序</span><br>  queryWrapper.orderBy(StrUtil.isNotEmpty(sortField),sortOrder.equals(<span class="hljs-string">&quot;ascend&quot;</span>),sortField);<br><br><br><br>  <span class="hljs-keyword">return</span> queryWrapper;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="接口开发-3">接口开发</h4><p>创建默认用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Long&gt; <span class="hljs-title function_">addUser</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserAddRequest userAddRequest)</span> &#123;<br>  ThrowUtils.throwIf(userAddRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>  <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>  BeanUtils.copyProperties(userAddRequest, user);<br>  <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">DEFAULT_PASS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;12345678&quot;</span>;<br>  <span class="hljs-type">String</span> <span class="hljs-variable">encryptPass</span> <span class="hljs-operator">=</span> userService.getEncryptPass(DEFAULT_PASS);<br><br><br>  user.setUserPassword(encryptPass);<br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> userService.save(user);<br>  ThrowUtils.throwIf(!res, ErrorCode.OPERATION_ERROR);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(user.getId());<br>&#125;<br></code></pre></td></tr></table></figure><p>根据ID获取用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/get&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;User&gt; <span class="hljs-title function_">getUserById</span><span class="hljs-params">(<span class="hljs-type">long</span> id)</span> &#123;<br>  ThrowUtils.throwIf(id &lt;= <span class="hljs-number">0</span>, ErrorCode.PARAMS_ERROR);<br><br>  <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.getById(id);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(user);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>根据ID获取包装类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GetMapping(&quot;/get/vo&quot;)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;UserVO&gt; <span class="hljs-title function_">getUserVoById</span><span class="hljs-params">(<span class="hljs-type">long</span> id)</span> &#123;<br>  BaseResponse&lt;User&gt; response = getUserById(id);<br><br>  <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> response.getData();<br>  <span class="hljs-keyword">return</span> ResultUtils.success(userService.getUserVO(user));<br><br>&#125;<br></code></pre></td></tr></table></figure><p>删除用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/delete&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">deleteUserById</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> DeleteRequest deleteRequest)</span> &#123;<br>  ThrowUtils.throwIf(deleteRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> userService.removeById(deleteRequest.getId());<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(res);<br>&#125;<br></code></pre></td></tr></table></figure><p>更新用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/update&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Boolean&gt; <span class="hljs-title function_">updateUser</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserUpdateRequest updateRequest)</span> &#123;<br>  ThrowUtils.throwIf(updateRequest == <span class="hljs-literal">null</span> || updateRequest.getId() == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>  <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>  BeanUtils.copyProperties(updateRequest, user);<br><br>  <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> userService.updateById(user);<br>  ThrowUtils.throwIf(!b, ErrorCode.OPERATION_ERROR);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-literal">true</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><p>分页获取用户</p><p>标记一下Page对象可以自定义current、pageSize、total，<code>Page对象.getRecords</code>获取到的是<code>List</code>对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/list/page/vo&quot;)</span><br><span class="hljs-meta">@AuthCheck(mustRole = UserConstant.ADMIN_ROLE)</span><br><span class="hljs-keyword">public</span> BaseResponse&lt;Page&lt;UserVO&gt;&gt; <span class="hljs-title function_">listUserVOByPage</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> UserQueryRequest userQueryRequest)</span> &#123;<br>  ThrowUtils.throwIf(userQueryRequest == <span class="hljs-literal">null</span>, ErrorCode.PARAMS_ERROR);<br><br>  <span class="hljs-type">long</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> userQueryRequest.getCurrent();<br>  <span class="hljs-type">long</span> <span class="hljs-variable">pageSize</span> <span class="hljs-operator">=</span> userQueryRequest.getPageSize();<br><br><br>  Page&lt;User&gt; userPage = userService.page(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current,pageSize),<br>                                         userService.getQueryWrapper(userQueryRequest));<br><br><br>  Page&lt;UserVO&gt; userVOPage = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>&lt;&gt;(current,pageSize,userPage.getTotal());<br>  List&lt;UserVO&gt; userVOList = userService.getUserVOList(userPage.getRecords());<br>  userVOPage.setRecords(userVOList);<br><br>  <span class="hljs-keyword">return</span> ResultUtils.success(userVOPage);<br>&#125;<br></code></pre></td></tr></table></figure><p>分页BUG、在我们写好接口后调用，会发现数据库中所有user都进行了展示，并没有生效，这是为什么呢？</p><figure><img src="/img/pictureLibrary/image-20250711160247983.png"alt="image-20250711160247983" /><figcaption aria-hidden="true">image-20250711160247983</figcaption></figure><p>观察<ahref="https://baomidou.com/plugins/pagination/">官方文档</a>，v3.5.9后分页拦截器被分离出来，需要自己手动配置</p><figure><img src="/img/pictureLibrary/image-20250711160506675.png"alt="image-20250711160506675" /><figcaption aria-hidden="true">image-20250711160506675</figcaption></figure><p><ahref="https://baomidou.com/getting-started/install/#maven-bom">官方操作MavenBOM 操作</a></p><p>先下载依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- MyBatis Plus 分页插件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-jsqlparser-4.9<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-bom<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencyManagement</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>依赖下载后，config包下创建分页拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@MapperScan(&quot;com.kroot.krpicturebackend.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisPlusConfig</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 拦截器配置</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-doctag">@link</span> MybatisPlusInterceptor&#125;</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br>        <span class="hljs-comment">// 分页插件</span><br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));<br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试插件是否生效</p><figure><img src="/img/pictureLibrary/image-20250711161211082.png"alt="image-20250711161211082" /><figcaption aria-hidden="true">image-20250711161211082</figcaption></figure><p>可以看到生效了，但是ID对不上，网络服务中最后几位变成了0，这是因为后端ID过大，前端JS精度丢失</p><p>如何解决 =》后端config包下创建全局JSON，将后端接口返回值长整型转化为字符串返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Spring MVC Json 配置</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@JsonComponent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JsonConfig</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 添加 Long 转 json 精度丢失的配置</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ObjectMapper <span class="hljs-title function_">jacksonObjectMapper</span><span class="hljs-params">(Jackson2ObjectMapperBuilder builder)</span> &#123;<br>        <span class="hljs-type">ObjectMapper</span> <span class="hljs-variable">objectMapper</span> <span class="hljs-operator">=</span> builder.createXmlMapper(<span class="hljs-literal">false</span>).build();<br>        <span class="hljs-type">SimpleModule</span> <span class="hljs-variable">module</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleModule</span>();<br>        <span class="hljs-keyword">module</span>.addSerializer(Long.class, ToStringSerializer.instance);<br>        <span class="hljs-keyword">module</span>.addSerializer(Long.TYPE, ToStringSerializer.instance);<br>        objectMapper.registerModule(<span class="hljs-keyword">module</span>);<br>        <span class="hljs-keyword">return</span> objectMapper;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>完美解决！！</p><figure><img src="/img/pictureLibrary/image-20250711161532741.png"alt="image-20250711161532741" /><figcaption aria-hidden="true">image-20250711161532741</figcaption></figure><h2 id="用户模块前端开发">用户模块（前端开发）</h2><p>开始前先OpenAPI为前端创建后端接口</p><p>上一次是做到了创建用户登录、注册、管理文件，现在为每一个界面配置路由</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-attr">routes</span>: [<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">HomePage</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/login&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户登录&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserLoginPage</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user/register&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户注册&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserRegisterPage</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/admin/userManage&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">UserManagerPage</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;about&#x27;</span>,<br>      <span class="hljs-comment">// route level code-splitting</span><br>      <span class="hljs-comment">// this generates a separate chunk (About.[hash].js) for this route</span><br>      <span class="hljs-comment">// which is lazy-loaded when the route is visited.</span><br>      <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;../views/AboutView.vue&#x27;</span>),<br>    &#125;,<br>  ],<br></code></pre></td></tr></table></figure><h3 id="获取当前登录用户信息">获取当前登录用户信息</h3><p>更新状态管理代码</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> loginUser = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">LoginUserVO</span>&gt;(&#123;<br>  <span class="hljs-attr">userName</span>: <span class="hljs-string">&quot;未登录&quot;</span><br>&#125;)<br><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetchLoginUser</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getLoginUserUsingGet</span>()<br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    loginUser.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="用户登录界面">用户登录界面</h3><p>AntDesignVue启动！！！这里我们使用<ahref="https://antdv.com/components/form-cn#%E8%A1%A8%E5%8D%95">Form组件</a></p><figure><img src="/img/pictureLibrary/image-20250711163152312.png"alt="image-20250711163152312" /><figcaption aria-hidden="true">image-20250711163152312</figcaption></figure><p>接下来我会告诉你如何去更改</p><p>原版</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;a-form<br>    :model=&quot;formState&quot;<br>    name=&quot;basic&quot;<br>    :label-col=&quot;&#123; span: 8 &#125;&quot;<br>    :wrapper-col=&quot;&#123; span: 16 &#125;&quot;<br>    autocomplete=&quot;off&quot;<br>    @finish=&quot;onFinish&quot;<br>    @finishFailed=&quot;onFinishFailed&quot;<br>  &gt;<br>    &lt;a-form-item<br>      label=&quot;Username&quot;<br>      name=&quot;username&quot;<br>      :rules=&quot;[&#123; required: true, message: &#x27;Please input your username!&#x27; &#125;]&quot;<br>    &gt;<br>      &lt;a-input v-model:value=&quot;formState.username&quot; /&gt;<br>    &lt;/a-form-item&gt;<br><br>    &lt;a-form-item<br>      label=&quot;Password&quot;<br>      name=&quot;password&quot;<br>      :rules=&quot;[&#123; required: true, message: &#x27;Please input your password!&#x27; &#125;]&quot;<br>    &gt;<br>      &lt;a-input-password v-model:value=&quot;formState.password&quot; /&gt;<br>    &lt;/a-form-item&gt;<br><br>    &lt;a-form-item name=&quot;remember&quot; :wrapper-col=&quot;&#123; offset: 8, span: 16 &#125;&quot;&gt;<br>      &lt;a-checkbox v-model:checked=&quot;formState.remember&quot;&gt;Remember me&lt;/a-checkbox&gt;<br>    &lt;/a-form-item&gt;<br><br>    &lt;a-form-item :wrapper-col=&quot;&#123; offset: 8, span: 16 &#125;&quot;&gt;<br>      &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot;&gt;Submit&lt;/a-button&gt;<br>    &lt;/a-form-item&gt;<br>  &lt;/a-form&gt;<br>&lt;/template&gt;<br>&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; reactive &#125; from &#x27;vue&#x27;;<br><br>interface FormState &#123;<br>  username: string;<br>  password: string;<br>  remember: boolean;<br>&#125;<br><br>const formState = reactive&lt;FormState&gt;(&#123;<br>  username: &#x27;&#x27;,<br>  password: &#x27;&#x27;,<br>  remember: true,<br>&#125;);<br>const onFinish = (values: any) =&gt; &#123;<br>  console.log(&#x27;Success:&#x27;, values);<br>&#125;;<br><br>const onFinishFailed = (errorInfo: any) =&gt; &#123;<br>  console.log(&#x27;Failed:&#x27;, errorInfo);<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>我们会发现<code>:label-col="&#123; span: 8 &#125;" :wrapper-col="&#123; span: 16 &#125;"</code>是和样式相关，先删掉</p><p><span class="citation"data-cites="finish事件保留一个">@finish事件保留一个</span>，重命名为handleSubmit(处理点击)</p><p>我们不需要Rememberme，删掉<code>a-form-item</code>下有remember的，替换为可以跳转到注册界面的代码</p><p>数据是使用v-model绑定的，初始化的值定义类型为FormState，因为后端我们定义了UserLoginRequest里面有userAccount、userPassword替换掉</p><p>输入框元素label占用空间，直接删除，在此基础上添加标题</p><p>我们后端定义的封装请求类在这里充当了枚举</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;userLoginPage&quot;&gt;<br>    &lt;h2 class=&quot;title&quot;&gt;KR云图库 - 用户登录&lt;/h2&gt;<br>    &lt;div class=&quot;desc&quot;&gt;企业级图库&lt;/div&gt;<br>    &lt;a-form<br>      :model=&quot;formState&quot;<br>      autocomplete=&quot;off&quot;<br>      @finish=&quot;handleSubmit&quot;<br>    &gt;<br>      &lt;a-form-item<br>        name=&quot;userAccount&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请输入账号&#x27; &#125;]&quot;<br>      &gt;<br>        &lt;a-input v-model:value=&quot;formState.userAccount&quot; placeholder=&quot;请输入账号&quot;/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;a-form-item<br>        name=&quot;userPassword&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请输入密码&#x27; &#125;,&#123;min:8,message: &#x27;密码不少于8位&#x27;&#125;]&quot;<br>      &gt;<br>        &lt;a-input-password v-model:value=&quot;formState.userPassword&quot; placeholder=&quot;请输入密码&quot;/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;div class=&quot;tips&quot;&gt;<br>        没有账号？<br>        &lt;RouterLink to=&quot;/user/register&quot;&gt;去注册&lt;/RouterLink&gt;<br>      &lt;/div&gt;<br><br>      &lt;a-form-item&gt;<br>        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100%&quot;&gt;Submit&lt;/a-button&gt;<br>      &lt;/a-form-item&gt;<br>    &lt;/a-form&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; reactive &#125; from &#x27;vue&#x27;;<br><br>const formState = reactive&lt;API.UserLoginRequest&gt;(&#123;<br>  userAccount: &#x27;&#x27;,<br>  userPassword: &#x27;&#x27;,<br>&#125;);<br><br>const handleSubmit = (values: any) =&gt; &#123;<br>  console.log(&#x27;Success:&#x27;, values);<br>&#125;;<br><br>&lt;/script&gt;<br><br><br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250711163826487.png"alt="image-20250711163826487" /><figcaption aria-hidden="true">image-20250711163826487</figcaption></figure><p>说真的、挺丑的，接下来在style标签中更改样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style scoped&gt;<br><span class="hljs-selector-id">#userLoginPage</span> &#123;<br>  <span class="hljs-attribute">max-width</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;<br>&#125;<br><br><span class="hljs-selector-id">#userLoginPage</span> <span class="hljs-selector-class">.title</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">16px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#userLoginPage</span> <span class="hljs-selector-class">.desc</span> &#123;<br>  <span class="hljs-attribute">text-align</span>: center;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#bbb</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">16px</span>;<br>&#125;<br><br><span class="hljs-selector-id">#userLoginPage</span> <span class="hljs-selector-class">.tips</span> &#123;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#bbb</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">13px</span>;<br>  <span class="hljs-attribute">text-align</span>: right;<br>&#125;<br>&lt;/style<br></code></pre></td></tr></table></figure><p>凑合能看</p><figure><img src="/img/pictureLibrary/image-20250711164527106.png"alt="image-20250711164527106" /><figcaption aria-hidden="true">image-20250711164527106</figcaption></figure><p>完善handleSubmit的代码，点击后调用后端login接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleSubmit</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">values: any</span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">userLoginUsingPost</span>(values)<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> == <span class="hljs-number">0</span> &amp;&amp; res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    <span class="hljs-comment">//因为要保存用户登录态，这里直接调用fetchLoginUser</span><br>    <span class="hljs-keyword">await</span> loginUserStore.<span class="hljs-title function_">fetchLoginUser</span>()<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;登录成功&#x27;</span>)<br>    router.<span class="hljs-title function_">push</span>(&#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>      <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//不跳转界面</span><br>    &#125;)<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;登录失败&#x27;</span>)<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><h3 id="用户注册界面">用户注册界面</h3><p>注册界面同理，直接复制登录界面在此基础上更改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;userRegisterPage&quot;&gt;<br>    &lt;h2 class=&quot;title&quot;&gt;KR云图库 - 用户注册&lt;/h2&gt;<br>    &lt;div class=&quot;desc&quot;&gt;企业级图库&lt;/div&gt;<br>    &lt;a-form<br>      :model=&quot;formState&quot;<br>      autocomplete=&quot;off&quot;<br>      @finish=&quot;handleSubmit&quot;<br>    &gt;<br>      &lt;a-form-item<br>        name=&quot;userAccount&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请输入账号&#x27; &#125;]&quot;<br>      &gt;<br>        &lt;a-input v-model:value=&quot;formState.userAccount&quot; placeholder=&quot;请输入账号&quot;/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;a-form-item<br>        name=&quot;userPassword&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请输入密码&#x27; &#125;,&#123;min:8,message: &#x27;密码不少于8位&#x27;&#125;]&quot;<br>      &gt;<br>        &lt;a-input-password v-model:value=&quot;formState.userPassword&quot; placeholder=&quot;请输入密码&quot;/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;a-form-item<br>        name=&quot;userPassword&quot;<br>        :rules=&quot;[&#123; required: true, message: &#x27;请输入密码&#x27; &#125;,&#123;min:8,message: &#x27;密码不少于8位&#x27;&#125;]&quot;<br>      &gt;<br>        &lt;a-input-password v-model:value=&quot;formState.userPassword&quot; placeholder=&quot;再次输入密码&quot;/&gt;<br>      &lt;/a-form-item&gt;<br><br>      &lt;div class=&quot;tips&quot;&gt;<br>        已有账号？<br>        &lt;RouterLink to=&quot;/user/login&quot;&gt;去登录&lt;/RouterLink&gt;<br>      &lt;/div&gt;<br><br>      &lt;a-form-item&gt;<br>        &lt;a-button type=&quot;primary&quot; html-type=&quot;submit&quot; style=&quot;width: 100%&quot;&gt;Submit&lt;/a-button&gt;<br>      &lt;/a-form-item&gt;<br>    &lt;/a-form&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; reactive &#125; from &#x27;vue&#x27;;<br>import &#123; useRouter &#125; from &#x27;vue-router&#x27;<br>import &#123; userLoginUsingPost, userRegisterUsingPost &#125; from &#x27;@/api/userController&#x27;<br>import &#123; useLoginUserStore &#125; from &#x27;@/stores/user&#x27;<br>import &#123; message &#125; from &#x27;ant-design-vue&#x27;<br><br>const formState = reactive&lt;API.UserRegisterRequest&gt;(&#123;<br>  userAccount: &#x27;&#x27;,<br>  userPassword: &#x27;&#x27;,<br>  checkPassword: &#x27;&#x27;<br>&#125;);<br>const router = useRouter();<br>const loginUserStore = useLoginUserStore()<br><br>const handleSubmit = async (values: any) =&gt; &#123;<br><br>  if(formState.userPassword != formState.checkPassword) &#123;<br>    message.error(&#x27;两次输入密码不一致&#x27;)<br>    return<br>  &#125;<br>  const res = await userRegisterUsingPost(values)<br><br>  if(res.data.code == 0 &amp;&amp; res.data.data) &#123;<br>    message.success(&#x27;注册成功&#x27;)<br>    router.push(&#123;<br>      path: &#x27;/user/login&#x27;,<br>      replace: true,<br>    &#125;)<br>  &#125;else &#123;<br>    message.error(&#x27;注册失败&#x27;)<br>  &#125;<br>&#125;;<br><br>&lt;/script&gt;<br><br><br>&lt;style scoped&gt;<br>#userRegisterPage &#123;<br>  max-width: 400px;<br>  margin: 0 auto;<br>&#125;<br><br>#userRegisterPage .title &#123;<br>  text-align: center;<br>  margin-bottom: 16px;<br>&#125;<br><br>#userRegisterPage .desc &#123;<br>  text-align: center;<br>  color: #bbb;<br>  margin-bottom: 16px;<br>&#125;<br><br>#userRegisterPage .tips &#123;<br>  margin-bottom: 16px;<br>  color: #bbb;<br>  font-size: 13px;<br>  text-align: right;<br>&#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>虽然我们后端已经做了checkPass和userPass校验，但是前端还是需要做一下，毕竟两次输入密码不一致，根本不用调用后端接口</p><figure><img src="/img/pictureLibrary/image-20250711170050270.png"alt="image-20250711170050270" /><figcaption aria-hidden="true">image-20250711170050270</figcaption></figure><h3 id="用户注销-1">用户注销</h3><p>组件我们选择下拉框<ahref="https://antdv.com/components/dropdown-cn#%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8">DropDown</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-dropdown&gt;<br>  &lt;ASpace&gt;<br>    &lt;a-avatar :src=&quot;loginUserStore.loginUser.userAvatar&quot; /&gt;<br>    &#123;&#123;loginUserStore.loginUser.userName ?? &#x27;无名&#x27;&#125;&#125;<br>  &lt;/ASpace&gt;<br>  &lt;template #overlay&gt;<br>&lt;a-menu&gt;<br>  &lt;a-menu-item @click=&quot;doLogOut&quot;&gt;<br>    退出登录<br>    &lt;/a-menu-item&gt;<br>    &lt;/a-menu&gt;<br>  &lt;/template&gt;<br>&lt;/a-dropdown&gt;<br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250711170905406.png"alt="image-20250711170905406" /><figcaption aria-hidden="true">image-20250711170905406</figcaption></figure><p>doLogOut代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doLogOut</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">userLogOutUsingPost</span>()<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    loginUserStore.<span class="hljs-title function_">setLoginUser</span>(&#123;<br>      <span class="hljs-attr">userName</span>: <span class="hljs-string">&#x27;未登录&#x27;</span><br>    &#125;)<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;注销成功&#x27;</span>)<br>    <span class="hljs-keyword">await</span> router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;/user/login&#x27;</span>)<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;注销失败&#x27;</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="用户管理-1">用户管理</h3><p>用户管理界面允许管理员查看所有用户的基本信息，并可以通过某些字段进行查询指定用户</p><p>组件选择<ahref="https://antdv.com/components/table-cn#components-table-demo-basic">Table</a>组件</p><figure><img src="/img/pictureLibrary/image-20250711172511091.png"alt="image-20250711172511091" /><figcaption aria-hidden="true">image-20250711172511091</figcaption></figure><p><strong>1、展示的字段需要我们手动插入</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> columns = [<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;id&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userAccount&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;用户名&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userName&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;头像&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userAvatar&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;简介&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userProfile&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;用户角色&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;userRole&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;createTime&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    <span class="hljs-attr">dataIndex</span>: <span class="hljs-string">&#x27;updateTime&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;操作&#x27;</span>,<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;action&#x27;</span>,<br>  &#125;,<br>]<br></code></pre></td></tr></table></figure><p><strong>2、data-source绑定数据data，我们需要调用后端分页接口，获取数据并填充</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> dataList = ref&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">UserVO</span>[]&gt;([])<br><span class="hljs-keyword">const</span> total = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><br><br><span class="hljs-keyword">const</span> searchParams = reactive&lt;<span class="hljs-variable constant_">API</span>.<span class="hljs-property">UserQueryRequest</span>&gt;(&#123;<br>  <span class="hljs-attr">current</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-attr">pageSize</span>: <span class="hljs-number">10</span><br>&#125;)<br><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fetchData</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">listUserVoByPageUsingPost</span>(&#123;<br>    ...searchParams<br>  &#125;)<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>) &#123;<br>    dataList.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">records</span> ?? []<br>    total.<span class="hljs-property">value</span> = res.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">total</span> ?? <span class="hljs-number">0</span><br><br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;获取分页数据失败&#x27;</span> + res.<span class="hljs-property">data</span>.<span class="hljs-property">message</span>)<br>  &#125;<br>&#125;<br><br><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><p><strong>3、前端展示数据更改</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template #bodyCell=&quot;&#123; column, record &#125;&quot;&gt;<br>      &lt;template v-if=&quot;column.dataIndex === &#x27;userAvatar&#x27;&quot;&gt;<br>        &lt;a-image :src=&quot;record.userAvatar&quot;/&gt;<br>      &lt;/template&gt;<br>      &lt;template v-else-if=&quot;column.dataIndex === &#x27;userRole&#x27;&quot;&gt;<br>        &lt;div v-if=&quot;record.userRole == &#x27;admin&#x27;&quot;&gt;<br>          &lt;a-tag color=&quot;green&quot;&gt;管理员&lt;/a-tag&gt;<br>        &lt;/div&gt;<br>        &lt;div v-else&gt;<br>          &lt;a-tag color=&quot;blue&quot;&gt;用户&lt;/a-tag&gt;<br>        &lt;/div&gt;<br>      &lt;/template&gt;<br>      &lt;template v-else-if=&quot;column.dataIndex === &#x27;createTime&#x27;&quot;&gt;<br>        &#123;&#123;dayjs(record.createTime).format(&#x27;YYYY-MM-DD HH:mm:ss&#x27;)&#125;&#125;<br>      &lt;/template&gt;<br>      &lt;template v-else-if=&quot;column.key === &#x27;action&#x27;&quot;&gt;<br>        &lt;a-button danger&gt;删除&lt;/a-button&gt;<br>      &lt;/template&gt;<br>    &lt;/template&gt;<br></code></pre></td></tr></table></figure><p>展示效果如下</p><figure><img src="/img/pictureLibrary/image-20250711173711791.png"alt="image-20250711173711791" /><figcaption aria-hidden="true">image-20250711173711791</figcaption></figure><h4 id="插入分页">插入分页</h4><p>1）表格组件默认支持<ahref="https://antdv.com/components/pagination-cn/#api">分页</a>操作，自定义分页变量，指定current、pageSize、total</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> pagination = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> &#123;<br>    <span class="hljs-attr">current</span>: searchParams.<span class="hljs-property">current</span> ?? <span class="hljs-number">1</span>,<br>    <span class="hljs-attr">pageSize</span>: searchParams.<span class="hljs-property">pageSize</span> ?? <span class="hljs-number">2</span>,<br>    <span class="hljs-attr">total</span>: total.<span class="hljs-property">value</span>,<br>    <span class="hljs-attr">showSizeChanger</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">showTotal</span>: <span class="hljs-function">(<span class="hljs-params">total</span>) =&gt;</span> <span class="hljs-string">`共<span class="hljs-subst">$&#123;total&#125;</span>条`</span>,<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p>因为分页参数是在不停更改的需要我们设置其为计算属性，否则参数遍，pagination不会发生改变</p><p>2）编写函数，在与分页交互的时候，重新发送分页请求</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doTableChange</span> = (<span class="hljs-params"><span class="hljs-attr">page</span>: <span class="hljs-built_in">any</span></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = page.<span class="hljs-property">current</span><br>  searchParams.<span class="hljs-property">pageSize</span> = page.<span class="hljs-property">pageSize</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br></code></pre></td></tr></table></figure><p>3）表格组件绑定分页</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-table<br>  :columns=&quot;columns&quot;<br>  :data-source=&quot;dataList&quot;<br>  :pagination=&quot;pagination&quot;<br>  @change=&quot;doTableChange&quot;<br>&gt;<br><br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250711175157526.png"alt="image-20250711175157526" /><figcaption aria-hidden="true">image-20250711175157526</figcaption></figure><h4 id="关键词搜索">关键词搜索</h4><p>组件选择<ahref="https://antdv.com/components/input-cn#components-input-demo-search-input">Form</a></p><figure><img src="/img/pictureLibrary/image-20250711175634875.png"alt="image-20250711175634875" /><figcaption aria-hidden="true">image-20250711175634875</figcaption></figure><p>1）表单代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-form<br>      layout=&quot;inline&quot;<br>      :model=&quot;searchParams&quot;<br>      @finish=&quot;doSearch&quot;<br>    &gt;<br>      &lt;a-form-item label=&quot;账号&quot;&gt;<br>        &lt;a-input v-model:value=&quot;searchParams.userAccount&quot; placeholder=&quot;输入账号&quot; /&gt;<br>      &lt;/a-form-item&gt;<br>        <br>        &lt;a-form-item label=&quot;用户名&quot;&gt;<br>        &lt;a-input v-model:value=&quot;searchParams.userName&quot; placeholder=&quot;输入用户名&quot; /&gt;<br>      &lt;/a-form-item&gt;<br>        <br>      &lt;a-form-item&gt;<br>        &lt;a-button<br>          type=&quot;primary&quot;<br>          html-type=&quot;submit&quot;<br>        &gt;<br>          搜索<br>        &lt;/a-button&gt;<br>      &lt;/a-form-item&gt;<br>    &lt;/a-form&gt;<br></code></pre></td></tr></table></figure><p>2）doSearch函数，当出发后，需要将current设置为1，重新搜索</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  searchParams.<span class="hljs-property">current</span> = <span class="hljs-number">1</span><br>  <span class="hljs-title function_">fetchData</span>()<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="操作">操作</h4><p>点击删除按钮后，确保数据真的删除同时刷新界面</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doDelete</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span></span>) =&gt; &#123;<br>  <span class="hljs-keyword">if</span>(!id) &#123;<br>    <span class="hljs-keyword">return</span><br>  &#125;<br><br> <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">deleteUserByIdUsingPost</span>(&#123;<br>    id<br>  &#125;)<br><br>  <span class="hljs-keyword">if</span>(res.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-number">0</span>) &#123;<br>    message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;删除成功&#x27;</span>)<br>    <span class="hljs-title function_">fetchData</span>()<br>  &#125;<span class="hljs-keyword">else</span> &#123;<br>    message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;删除失败&#x27;</span>)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>按钮绑定事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-button danger @click=&quot;doDelete(record.id)&quot;&gt;删除&lt;/a-button&gt;<br></code></pre></td></tr></table></figure><h3 id="用户权限控制-1">用户权限控制</h3><p>虽然后端做好了权限校验，避免了非管理员进行用户管理。前端也需要处理</p><p>这里涉及到两种实现方式：单页面权限控制、全局权限控制</p><p>单页面指的是将权限控制的代码写入到单个页面控制，全局相当于抽离出一个文件专门做权限控制</p><p>这里我们选择全局权限控制，在src下创建<code>access.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; useLoginUserStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/useLoginUserStore&#x27;</span><br><span class="hljs-keyword">import</span> &#123; message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ant-design-vue&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/router&#x27;</span><br><br><span class="hljs-comment">// 是否为首次获取登录用户</span><br><span class="hljs-keyword">let</span> firstFetchLoginUser = <span class="hljs-literal">true</span>;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 全局权限校验</span><br><span class="hljs-comment"> */</span><br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-title function_">async</span> (to, <span class="hljs-keyword">from</span>, next) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> loginUserStore = <span class="hljs-title function_">useLoginUserStore</span>()<br>  <span class="hljs-keyword">let</span> loginUser = loginUserStore.<span class="hljs-property">loginUser</span><br>  <span class="hljs-comment">// 确保页面刷新，首次加载时，能够等后端返回用户信息后再校验权限</span><br>  <span class="hljs-keyword">if</span> (firstFetchLoginUser) &#123;<br>    <span class="hljs-keyword">await</span> loginUserStore.<span class="hljs-title function_">fetchLoginUser</span>()<br>    loginUser = loginUserStore.<span class="hljs-property">loginUser</span><br>    firstFetchLoginUser = <span class="hljs-literal">false</span>;<br>  &#125;<br>  <span class="hljs-keyword">const</span> toUrl = to.<span class="hljs-property">fullPath</span><br>  <span class="hljs-keyword">if</span> (toUrl.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;/admin&#x27;</span>)) &#123;<br>    <span class="hljs-keyword">if</span> (!loginUser || loginUser.<span class="hljs-property">userRole</span> !== <span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>      message.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;没有权限&#x27;</span>)<br>      <span class="hljs-title function_">next</span>(<span class="hljs-string">`/user/login?redirect=<span class="hljs-subst">$&#123;to.fullPath&#125;</span>`</span>)<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>  &#125;<br>  <span class="hljs-title function_">next</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>这串代码很好理解</p><p>当我们没有用户数据，需要首次向后端请求，拿到用户数据后判断跳转的页面是否是管理员才可以访问的</p><p>如果用户角色为普通用户，那么跳转登录界面</p><p>这里使用await等待后端数据返回(Promise函数执行完毕)，才进行权限校验</p><p>main.ts全局引入access.ts</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;@/access&#x27;</span><br></code></pre></td></tr></table></figure><p>虽然已经完成了权限控制的需求，但是普通用户并不应该在顶部栏看到用户管理菜单，接着更改GlobalHeader</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> originItems = [<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">HomeOutlined</span>),<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/admin/userManage&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;用户管理&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/blog&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;a&#x27;</span>, &#123; <span class="hljs-attr">href</span>: <span class="hljs-string">&#x27;https://korinall.github.io/&#x27;</span>, <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;_blank&#x27;</span> &#125;, <span class="hljs-string">&#x27;作者博客&#x27;</span>),<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;作者BLOG&#x27;</span>,<br>  &#125;,<br>]<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">filterMenus</span> = (<span class="hljs-params">menus = [] <span class="hljs-keyword">as</span> <span class="hljs-title class_">MenuProps</span>[<span class="hljs-string">&#x27;items&#x27;</span>]</span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> menus?.<span class="hljs-title function_">filter</span>(<span class="hljs-function">(<span class="hljs-params">menu</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(menu?.<span class="hljs-property">key</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">&#x27;/admin&#x27;</span>)) &#123;<br>      <span class="hljs-keyword">const</span> loginUser = loginUserStore.<span class="hljs-property">loginUser</span><br>      <span class="hljs-keyword">if</span> (!loginUser || loginUser.<span class="hljs-property">userRole</span> !== <span class="hljs-string">&#x27;admin&#x27;</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>      &#125;<br><br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>  &#125;)<br>&#125;<br><br><br><span class="hljs-keyword">const</span> items = computed&lt;<span class="hljs-title class_">MenuProps</span>[<span class="hljs-string">&#x27;items&#x27;</span>]&gt;(<span class="hljs-function">()=&gt;</span> <span class="hljs-title function_">filterMenus</span>(originItems))<br></code></pre></td></tr></table></figure><p>这里我们对原菜单项进行了一个过滤，但凡其中的key头部包含管理员将其给过滤掉</p><p>这里我一直对这个<code>MenuProps['items']</code>有个疑问，不到这个到底是个啥？</p><p>查了一下<code>MenuProps['items']</code>等价于<code>MenuItem[]</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-comment">//MenuItem接口</span><br>&#123;<br>  <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>  <span class="hljs-attr">icon</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">HomeOutlined</span>),<br>  <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>  <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>&#125;,<br></code></pre></td></tr></table></figure><p>测试，成功！！</p><figure><img src="/img/pictureLibrary/image-20250711184650780.png"alt="image-20250711184650780" /><figcaption aria-hidden="true">image-20250711184650780</figcaption></figure><p>扩展：在右上角添加个人中心，可以编辑用户信息</p>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>澄观云谱1-项目总览</title>
    <link href="/2025/07/10/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B101/"/>
    <url>/2025/07/10/%E6%BE%84%E8%A7%82%E4%BA%91%E8%B0%B101/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2025/7/10 PM</p>          </div><h1 id="前言">前言</h1><p>基于之前一直观看视频学习，没有记录笔记感觉并没有真正学到什么，有点自欺欺人的感觉</p><p>再加上本人比较迷恋游戏，不知不觉浪费的半个多月的时间</p><p>所以从今天开始根据文字教程依次学习，把自己在项目中遇到的问题解决收集一些陌生的概念和语法</p><p>废话少说现在开始。。。。。</p><h1 id="项目介绍">项目介绍</h1><h2 id="概述">概述</h2><p>在开始之前，我们需要对我们要做的项目有一个基本的认识，清楚自己在做什么，做这个项目有什么意义？？</p><blockquote><p>我们要做的项目是一个云图库项目，就类似于网上的图片网站</p></blockquote><p>教程：参考<ahref="https://www.codefather.cn/course/1864210260732116994/section/1864990875352473601?type=#heading-0">鱼皮图库项目</a></p><p>部分模块介绍，整个项目围绕以下几点进行实现</p><p>1）用户模块：登录注册</p><p>2）图片模块：上传图片，管理图片，查询图片，管理员审核图片</p><p>3）空间模块：个人空间，团队空间</p><h2id="核心业务流程可以帮助我们下一步该做什么本人太懒不太爱画这个hh但是一定要多画">核心业务流程(可以帮助我们下一步该做什么，本人太懒不太爱画这个hh，但是一定要多画)</h2><p>在线工具：<a href="https://draw.io">draw.io</a></p><h3 id="一图库平台流程">一、图库平台流程</h3><figure><img src="/img/pictureLibrary/user_modal.png" alt="user_modal" /><figcaption aria-hidden="true">user_modal</figcaption></figure><h3 id="二加入用户私有图库">二、加入用户私有图库</h3><figure><img src="/img/pictureLibrary/private_user_modal.png"alt="private_user_modal" /><figcaption aria-hidden="true">private_user_modal</figcaption></figure><h3 id="三加入团队空间">三、加入团队空间</h3><figure><img src="/img/pictureLibrary/team_modal.png" alt="team_modal" /><figcaption aria-hidden="true">team_modal</figcaption></figure><h2 id="项目功能介绍">项目功能介绍</h2><h3 id="阶段一">阶段一</h3><p>用户模块</p><ul><li>登录</li><li>注册</li><li>注销</li><li>AOP权限控制</li><li>用户管理</li></ul><p>图片模块</p><ul><li>上传图片</li><li>编辑图片</li><li>图片管理</li><li>关键词搜索图片</li><li>下载图片</li><li>审核用户上传的图片</li><li>导入图片<ul><li>URL上传</li><li>本地上传</li></ul></li><li>优化<ul><li>缓存优化查询</li><li>上传优化</li><li>加载优化</li><li>存储优化</li></ul></li></ul><h3 id="阶段二">阶段二</h3><p>用户私有空间</p><ul><li>空间管理(管理员)</li><li>用户开通私有空间</li><li>权限控制</li><li>空间级别</li><li>用户空间、管理员全空间分析</li></ul><p>图片模块</p><ul><li>图片搜索<ul><li>字段搜索</li><li>以图搜图</li><li>颜色搜索</li></ul></li><li>图片分享<ul><li>二维码分享</li><li>链接分享</li></ul></li><li>批量管理<ul><li>重命名</li><li>修改信息</li></ul></li><li>图片编辑<ul><li>AI编辑</li><li>基础编辑</li></ul></li></ul><h3 id="阶段三">阶段三</h3><p>空间模块</p><ul><li>创建团队空间</li><li>空间成员管理</li><li>成员邀请</li><li>成员权限控制</li></ul><p>图片模块</p><ul><li>协同编辑</li></ul><h2 id="技术选型">技术选型</h2><p>前端</p><ul><li>Vue3 + AntDesign Vue</li><li>Pinia 全局状态管理</li><li>格式化工具：Prettier、ESlint、TS</li><li>OpenAPI</li><li>axios</li></ul><p>后端</p><ul><li>SpringBoot</li><li>MySQL + MyBatis + MP</li><li>Redis + Caffeine 缓存</li><li>Jsoup数据抓取</li><li>COS + 数据万象</li><li>WebSocket</li><li>编程式事务操作</li></ul><h1 id="项目初始化">项目初始化</h1><h2 id="后端项目初始化">后端项目初始化</h2><h3 id="环境配置">环境配置</h3><p>1）JDK17</p><p>2）MySQL8</p><h3 id="idea配置">IDEA配置</h3><h4 id="一引入基础依赖">一、引入基础依赖</h4><ol type="1"><li>Spring Web：提供Web服务，通过localhost:端口请求接口</li><li>Lombok：<span class="citation" data-cites="Data">@Data</span>注解提供getter setter</li><li>Mybatis Framework：mb 基础操作数据库服务</li><li>提供IDEA里连接Mysql的接口</li></ol><figure><img src="/img/pictureLibrary/1.png" alt="1" /><figcaption aria-hidden="true">1</figcaption></figure><h4 id="二启动">二、启动！</h4><figure><img src="/img/pictureLibrary/image-20250710143603834.png"alt="image-20250710143603834" /><figcaption aria-hidden="true">image-20250710143603834</figcaption></figure><p>报错了？别慌，观察错误信息说我们并没有对数据库进行相关的配置，对咯、application.yml都没改跑个毛</p><h4 id="三添加配置项">三、添加配置项</h4><p><code>application.yml</code></p><p>初次写建议自己写一遍就当练习了</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8082</span> <span class="hljs-comment"># 服务端口</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/api</span> <span class="hljs-comment">#设置上下文路径，之后访问后端接口需要带/api</span><br><br><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">kr-picture-backend</span><br><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span> <br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/kr_picture</span> <br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">intmain()</span><br><br></code></pre></td></tr></table></figure><p>datasource的信息除了<code>driver-class-name</code>是写死的，其余的都可以参照图片信息</p><figure><img src="/img/pictureLibrary/image-20250710144516360.png"alt="image-20250710144516360" /><figcaption aria-hidden="true">image-20250710144516360</figcaption></figure><h4 id="四整合依赖">四、整合依赖</h4><p>1）Mybatis-plus</p><p>引入MP 需要移除Mybatis 相关依赖以免冲突</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>在启动类中，添加@MapperScan注解同时指定mapper包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@MapperScan(&quot;com.kroot.krpicturebackend.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KrPictureBackendApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(KrPictureBackendApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>application.yml中添加MP相关配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">configuration:</span><br>  <span class="hljs-comment"># 执行sql语句时，字段下划线转驼峰</span><br>    <span class="hljs-attr">map-underscore-to-camel-case:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># 仅在开发环境开启日志</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-attr">logic-delete-field:</span> <span class="hljs-string">isDelete</span> <span class="hljs-comment"># 全局逻辑删除的实体字段名</span><br>      <span class="hljs-attr">logic-delete-value:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># 逻辑已删除值（默认为 1）</span><br>      <span class="hljs-attr">logic-not-delete-value:</span> <span class="hljs-number">0</span> <span class="hljs-comment"># 逻辑未删除值（默认为 0）</span><br><br></code></pre></td></tr></table></figure><p>2）Hutool</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cn.hutool<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>hutool-all<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.8.26<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3）Knife4j</p><p><ahref="https://doc.xiaominfo.com/docs/quick-start#spring-boot-2">官方文档，依赖引入以及yml配置</a></p><p>Swagger升级版，后端API文档</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.xiaoymin<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>knife4j-openapi2-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>yml配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># 接口文档配置</span><br><span class="hljs-attr">knife4j:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">openapi:</span><br>    <span class="hljs-attr">title:</span> <span class="hljs-string">&quot;接口文档&quot;</span><br>    <span class="hljs-attr">version:</span> <span class="hljs-number">1.0</span><br>    <span class="hljs-attr">group:</span><br>      <span class="hljs-attr">default:</span><br>        <span class="hljs-attr">api-rule:</span> <span class="hljs-string">package</span><br>        <span class="hljs-attr">api-rule-resources:</span><br>          <span class="hljs-bullet">-</span> <span class="hljs-string">com.kroot.krpicturebackend.controller</span><br><br></code></pre></td></tr></table></figure><p>编写controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainController</span> &#123;<br>    <span class="hljs-meta">@GetMapping(&quot;/health&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">health</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Nice try&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>测试</p><p>编写controller包，同时包下创建<code>MainController</code>测试接口文档，启动项目访问<ahref="http://localhost:8082/api/doc.html#/home">http://localhost:8082/api/doc.html#/home</a>，同时发现刚才我们添加的Controller下的health接口也生效了</p><figure><img src="/img/pictureLibrary/image-20250710150522714.png"alt="image-20250710150522714" /><figcaption aria-hidden="true">image-20250710150522714</figcaption></figure><p>4）AOP</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h4id="五通用代码块多练写熟练了再copy">五、通用代码块（多练，写熟练了再Copy）</h4><p>异常通用基础代码</p><p><strong>1、自定义异常</strong></p><p>✨技巧404作为HTTP错误码意思是Not Found，那我们定义状态码为40400</p><p>其余的状态码类似，针对于错误码一个code对应一条消息，我们将其定义为枚举，同时设置@Getter方便获取字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.exception;<br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ErrorCode</span> &#123;<br><br>    SUCCESS(<span class="hljs-number">0</span>, <span class="hljs-string">&quot;ok&quot;</span>),<br>    PARAMS_ERROR(<span class="hljs-number">40000</span>, <span class="hljs-string">&quot;请求参数错误&quot;</span>),<br>    NOT_LOGIN_ERROR(<span class="hljs-number">40100</span>, <span class="hljs-string">&quot;未登录&quot;</span>),<br>    NO_AUTH_ERROR(<span class="hljs-number">40101</span>, <span class="hljs-string">&quot;无权限&quot;</span>),<br>    NOT_FOUND_ERROR(<span class="hljs-number">40400</span>, <span class="hljs-string">&quot;请求数据不存在&quot;</span>),<br>    FORBIDDEN_ERROR(<span class="hljs-number">40300</span>, <span class="hljs-string">&quot;禁止访问&quot;</span>),<br>    SYSTEM_ERROR(<span class="hljs-number">50000</span>, <span class="hljs-string">&quot;系统内部异常&quot;</span>),<br>    OPERATION_ERROR(<span class="hljs-number">50001</span>, <span class="hljs-string">&quot;操作失败&quot;</span>);<br><br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String message;<br><br>    ErrorCode(<span class="hljs-type">int</span> code, String message) &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>在项目中我们往往不直接抛出<code>RuntimeException</code>，需要自定义业务异常类<code>BusinessException</code>同时继承<code>RuntimeException</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.exception;<br><br><br><span class="hljs-keyword">import</span> lombok.Getter;<br><br><span class="hljs-meta">@Getter</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BusinessException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">RuntimeException</span>&#123;<br><br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(<span class="hljs-type">int</span> code,String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message);<br>        <span class="hljs-built_in">this</span>.code = code;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(ErrorCode errorCode)</span> &#123;<br>        <span class="hljs-built_in">super</span>(errorCode.getMessage());<br>        <span class="hljs-built_in">this</span>.code = errorCode.getCode();<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BusinessException</span><span class="hljs-params">(ErrorCode errorCode,String message)</span> &#123;<br>        <span class="hljs-built_in">super</span>(message);<br>        <span class="hljs-built_in">this</span>.code = errorCode.getCode();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p>为了不直接抛出异常，可以设置断言、通过某些条件判断是否跑出异常，我们可以封装一个Utils，方法定义为static方法方便<code>ThrowUtils.throwIf</code>调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.exception;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ThrowUtils</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">throwIf</span><span class="hljs-params">(<span class="hljs-type">boolean</span> condition, RuntimeException runtimeException)</span> &#123;<br>        <span class="hljs-keyword">if</span>(condition) &#123;<br>            <span class="hljs-keyword">throw</span> runtimeException;<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">throwIf</span><span class="hljs-params">(<span class="hljs-type">boolean</span> condition, ErrorCode errorCode)</span> &#123;<br>        <span class="hljs-keyword">if</span>(condition) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(errorCode.getCode(), errorCode.getMessage());<br>        &#125;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">throwIf</span><span class="hljs-params">(<span class="hljs-type">boolean</span> condition, ErrorCode errorCode,String message)</span> &#123;<br>        <span class="hljs-keyword">if</span>(condition) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BusinessException</span>(errorCode.getCode(), message);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>2、响应包装类</strong></p><p>正常情况下，后端需要返回一个统一的格式，方便前端对数据进行响应的处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.common;<br><br><span class="hljs-keyword">import</span> com.kroot.krpicturebackend.exception.ErrorCode;<br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseResponse</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> code;<br><br>    <span class="hljs-keyword">private</span> T data;<br><br>    <span class="hljs-keyword">private</span> String message;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(<span class="hljs-type">int</span> code, T data, String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.data = data;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(<span class="hljs-type">int</span> code, T data)</span> &#123;<br>        <span class="hljs-built_in">this</span>(code,data,<span class="hljs-string">&quot;&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BaseResponse</span><span class="hljs-params">(ErrorCode errorCode)</span> &#123;<br>        <span class="hljs-built_in">this</span>(errorCode.getCode(),<span class="hljs-literal">null</span>,errorCode.getMessage());<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>但是现在每一次返回值都需要<code>new BaseResponse</code>，我们可以自定义一个工具类，针对于成功与失败的情况进行new响应包装类的封装</p><p>针对于泛型方法，如果参数中涉及泛型，那么需要在方法前添加<code>&lt;T&gt;</code>来表明是个泛型方法</p><p>在不使用泛型参数的时候返回值可以使用？代表不需要知道确切类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.common;<br><br><span class="hljs-keyword">import</span> com.kroot.krpicturebackend.exception.ErrorCode;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ResultUtils</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; BaseResponse&lt;T&gt; <span class="hljs-title function_">success</span><span class="hljs-params">(T data)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;&gt;(<span class="hljs-number">0</span>,data,<span class="hljs-string">&quot;ok&quot;</span>);<br>    &#125;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BaseResponse&lt;?&gt; error(ErrorCode errorCode) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;&gt;(errorCode.getCode(),<span class="hljs-literal">null</span>,errorCode.getMessage());<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> BaseResponse&lt;?&gt; error(ErrorCode errorCode,String message) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BaseResponse</span>&lt;&gt;(errorCode.getCode(),<span class="hljs-literal">null</span>,message);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>3、全局异常处理器</strong></p><p>为了防止出现一些意料之外的异常，可以封装全局异常，针对于RuntimeException和业务异常分别进行捕获</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br>    <span class="hljs-meta">@ExceptionHandler(BusinessException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;?&gt; businessExceptionHandler(BusinessException e) &#123;<br>        log.error(<span class="hljs-string">&quot;BusinessException&quot;</span>,e);<br>        <span class="hljs-keyword">return</span> ResultUtils.error(e.getCode(),e.getMessage());<br>    &#125;<br><br><br>    <span class="hljs-meta">@ExceptionHandler(RuntimeException.class)</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;?&gt; runtimeExceptionHandler(RuntimeException e) &#123;<br>        log.error(<span class="hljs-string">&quot;RuntimeException&quot;</span>,e);<br>        <span class="hljs-keyword">return</span> ResultUtils.error(ErrorCode.SYSTEM_ERROR,<span class="hljs-string">&quot;系统错误&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>4、请求封装类</strong></p><p>针对于某些公共的请求，参数一致，我们可以把它单独提取出来</p><p>分页请求包装类封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.common;<br><br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PageRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> -<span class="hljs-number">6981652838124494846L</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-variable">current</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> <span class="hljs-variable">pageSize</span> <span class="hljs-operator">=</span> <span class="hljs-number">10</span>;<br><br>    <span class="hljs-comment">//排序字段</span><br>    <span class="hljs-keyword">private</span> String sortField;<br><br>    <span class="hljs-comment">//升序还是降序</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">sortOrder</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;descend&quot;</span>;<br>    <br>    <br>&#125;<br><br></code></pre></td></tr></table></figure><p>删除请求封装</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kroot.krpicturebackend.common;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-keyword">import</span> java.io.Serializable;<br><br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DeleteRequest</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">6018983994171083590L</span>;<br>    <span class="hljs-keyword">private</span> Long id;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>5、全局配置跨域</strong></p><p>什么是跨域问题？</p><blockquote><p>跨域指的是浏览器中访问URL和后端URL或者是端口不一致情况，例如后端运行localhost:8080，前端localhost:5347，前端请求后端就会触发跨域问题</p></blockquote><p>新建config包下创建CorsConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CorsConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        <span class="hljs-comment">// 覆盖所有请求</span><br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                <span class="hljs-comment">// 允许发送 Cookie</span><br>                .allowCredentials(<span class="hljs-literal">true</span>)<br>                <span class="hljs-comment">// 放行哪些域名（必须用 patterns，否则 * 会和 allowCredentials 冲突）</span><br>                .allowedOriginPatterns(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedMethods(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;PUT&quot;</span>, <span class="hljs-string">&quot;DELETE&quot;</span>, <span class="hljs-string">&quot;OPTIONS&quot;</span>)<br>                .allowedHeaders(<span class="hljs-string">&quot;*&quot;</span>)<br>                .exposedHeaders(<span class="hljs-string">&quot;*&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>后端配置到此结束，启动项目检查是否生效</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainController</span> &#123;<br>    <span class="hljs-meta">@GetMapping</span><br>    <span class="hljs-keyword">public</span> BaseResponse&lt;String&gt; <span class="hljs-title function_">health</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> ResultUtils.success(<span class="hljs-string">&quot;Nice Try&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里有一个疑问，为什么当我们使用@Controller注解会发生报错？</p><ul><li>想要返回对象本身，<span class="citation"data-cites="RestController会将返回值序列化为HTTP响应体">@RestController会将返回值序列化为HTTP响应体</span>(JSON)</li><li>或者使用@Controller + <span class="citation"data-cites="ResponseBody组合">@ResponseBody组合</span></li><li><span class="citation"data-cites="Controller返回的是HTML界面">@Controller返回的是HTML界面</span>，Restful规范要求服务器返回结构化数据(JSON)</li></ul><p>返回结果，和我们定义的一样，说明没毛病</p><figure><img src="/img/pictureLibrary/image-20250710161709041.png"alt="image-20250710161709041" /><figcaption aria-hidden="true">image-20250710161709041</figcaption></figure><h2 id="前端项目初始化">前端项目初始化</h2><h3 id="环境要求">环境要求</h3><p>Nodejs &gt;= 18</p><p>包管理工具yarn + npm(2选1)</p><h3 id="创建项目">创建项目</h3><p>初始化 vue3.12.1 版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm create vue@3.12.1<br></code></pre></td></tr></table></figure><p>依次按照下面步骤做</p><figure><img src="/img/pictureLibrary/image-20250710162312780.png"alt="image-20250710162312780" /><figcaption aria-hidden="true">image-20250710162312780</figcaption></figure><p>启动WebStorm打开项目，终端执行<code>npm install</code>安装依赖，接着运行package.json中的dev，或者输入指令<code>npm run dev</code>，看到这个界面运行成功</p><figure><img src="/img/pictureLibrary/image-20250710162929753.png"alt="image-20250710162929753" /><figcaption aria-hidden="true">image-20250710162929753</figcaption></figure><p>配置美化工具Prettier</p><figure><img src="/img/pictureLibrary/image-20250710163040790.png"alt="image-20250710163040790" /><figcaption aria-hidden="true">image-20250710163040790</figcaption></figure><p>配置好后可以项目中右键可以格式化</p><figure><img src="/img/pictureLibrary/image-20250710163222233.png"alt="image-20250710163222233" /><figcaption aria-hidden="true">image-20250710163222233</figcaption></figure><p>关闭Eslint，防止编译错误</p><figure><img src="/img/pictureLibrary/image-20250710163343894.png"alt="image-20250710163343894" /><figcaption aria-hidden="true">image-20250710163343894</figcaption></figure><h4 id="引入组件库ant-design-vue">引入组件库(Ant Design Vue)</h4><p><a href="https://antdv.com/docs/vue/getting-started">GettingStarted</a></p><figure><img src="/img/pictureLibrary/image-20250710163644757.png"alt="image-20250710163644757" /><figcaption aria-hidden="true">image-20250710163644757</figcaption></figure><p>验证是否引入成功，可以看到按钮已经引入成功了</p><figure><img src="/img/pictureLibrary/image-20250710163955618.png"alt="image-20250710163955618" /><figcaption aria-hidden="true">image-20250710163955618</figcaption></figure><p>定义开发规范</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;xxPage&quot;&gt;<br><br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>#xxPage &#123;<br>&#125;<br><br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>修改基础标签信息</p><p>更改根目录下的index.html，同时替换/public下的favicon.ico，修改后效果如下</p><figure><img src="/img/pictureLibrary/image-20250710164533893.png"alt="image-20250710164533893" /><figcaption aria-hidden="true">image-20250710164533893</figcaption></figure><h4 id="全局通用布局引入">全局通用布局引入</h4><p>创建layout目录，新建布局<code>BasicLayout.vue</code>，同时在Vue中引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>import BasicLayout from &#x27;@/layout/BasicLayout.vue&#x27;<br>&lt;/script&gt;<br><br>&lt;template&gt;<br>  &lt;div id=&quot;app&quot;&gt;<br>    &lt;BasicLayout /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;style scoped&gt;<br><br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>BasicLayout 布局参考 <ahref="https://antdv.com/components/layout">Ant Design vue layout</a></p><figure><img src="/img/pictureLibrary/image-20250710165305691.png"alt="image-20250710165305691" /><figcaption aria-hidden="true">image-20250710165305691</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div id=&quot;basicLayOut&quot;&gt;<br>    &lt;a-layout&gt;<br>      &lt;a-layout-header&gt;Header&lt;/a-layout-header&gt;<br>      &lt;a-layout-content&gt;Content&lt;/a-layout-content&gt;<br>      &lt;a-layout-footer&gt;Footer&lt;/a-layout-footer&gt;<br>    &lt;/a-layout&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br>#basicLayOut &#123;<br><br>&#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><h4 id="全局底部栏">全局底部栏</h4><blockquote><p>底部主要显示版权信息，需要设置fixed样式，使其固定在底部</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout-footer class=&quot;footer&quot;&gt;<br>    &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot;&gt;联系KotRin&lt;/a&gt;<br>&lt;/a-layout-footer&gt;<br></code></pre></td></tr></table></figure><p>样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.footer</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#efefef</span>;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="内容部分根据vue-router动态展示">内容部分根据VueRouter动态展示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout-content&gt;<br>     &lt;router-view /&gt;<br>&lt;/a-layout-content&gt;<br></code></pre></td></tr></table></figure><p>样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.content</span>&#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(to right,<span class="hljs-number">#fefefe</span>,<span class="hljs-number">#fff</span>);  //背景色设置为渐变色<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">30px</span>;   //为了防止被<span class="hljs-selector-tag">footer</span>遮挡<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;  //使内容靠中<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="全局顶部烂">全局顶部烂</h4><p>参考<a href="https://antdv.com/components/menu#Menu">Ant DesignMenu</a></p><figure><img src="/img/pictureLibrary/image-20250710171353472.png"alt="image-20250710171353472" /><figcaption aria-hidden="true">image-20250710171353472</figcaption></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-layout-header&gt;<br>    &lt;GlobalHeader /&gt;<br>&lt;/a-layout-header&gt;<br></code></pre></td></tr></table></figure><p>引入全局顶部栏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">GlobalHeader</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/GlobalHeader.vue&#x27;</span><br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250710171555420.png"alt="image-20250710171555420" /><figcaption aria-hidden="true">image-20250710171555420</figcaption></figure><p>顶部栏ant design 定义的默认padding-inline: 50px</p><p>样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#basicLayOut</span> <span class="hljs-selector-class">.header</span> &#123;<br>  <span class="hljs-attribute">padding-inline</span>: <span class="hljs-number">20px</span>; //等于<span class="hljs-attribute">padding-left</span>:<span class="hljs-number">20px</span>;<span class="hljs-attribute">padding-right</span>:<span class="hljs-number">20px</span>;<br>  <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">16px</span>; <br>  <span class="hljs-attribute">background</span>: white;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>按照需求修改默认菜单</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; h, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MailOutlined</span>, <span class="hljs-title class_">HomeOutlined</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ant-design/icons-vue&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MenuProps</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ant-design-vue&#x27;</span>;<br><span class="hljs-keyword">const</span> current = ref&lt;string[]&gt;([<span class="hljs-string">&#x27;mail&#x27;</span>]);<br><span class="hljs-keyword">const</span> items = ref&lt;<span class="hljs-title class_">MenuProps</span>[<span class="hljs-string">&#x27;items&#x27;</span>]&gt;([<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>    <span class="hljs-attr">icon</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-title function_">h</span>(<span class="hljs-title class_">HomeOutlined</span>),<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;主页&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/about&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;关于&#x27;</span>,<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;关于&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;/blog&#x27;</span>,<br>    <span class="hljs-attr">label</span>: <span class="hljs-title function_">h</span>(<span class="hljs-string">&#x27;a&#x27;</span>, &#123; <span class="hljs-attr">href</span>: <span class="hljs-string">&#x27;https://korinall.github.io/&#x27;</span>, <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;_blank&#x27;</span> &#125;, <span class="hljs-string">&#x27;作者博客&#x27;</span>),<br>    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;作者BLOG&#x27;</span>,<br><br>  &#125;,<br>]);<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250710173327570.png"alt="image-20250710173327570" /><figcaption aria-hidden="true">image-20250710173327570</figcaption></figure><p>h()是Vue中的虚拟DOM函数，用法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">h(<span class="hljs-string">&#x27;a&#x27;</span>, &#123; href: <span class="hljs-string">&#x27;https://korinall.github.io/&#x27;</span>, target: <span class="hljs-string">&#x27;_blank&#x27;</span> &#125;, <span class="hljs-string">&#x27;作者博客&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lisp">h(&#x27;div&#x27;,&#123;class: &#x27;container&#x27;&#125;,[<br>h(&#x27;h1&#x27;,标题),<br>h(&#x27;p&#x27;,&#x27;内容&#x27;)<br>])<br></code></pre></td></tr></table></figure><p>优化导航栏</p><p>除此之外，我需要在左侧添加Logo 标题，点击后可以跳回主页</p><p>右侧添加登录按钮</p><p>这里分为三部分，建议使用<ahref="https://antdv.com/components/grid/#Grid">Ant DesignGrid</a>，左右两侧自定义width大小，中间自适应</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div id=&quot;globalHeader&quot;&gt;<br>  &lt;a-row&gt;<br>    &lt;a-col flex=&quot;200px&quot;&gt;<br>      //RouterLink组件支持超链接跳转，不刷新界面<br>      &lt;RouterLink to=&quot;/&quot;&gt;<br>        &lt;div class=&quot;title-bar&quot;&gt;<br>          &lt;img class=&quot;logo&quot; src=&quot;../assets/logo.png&quot; alt=&quot;logo&quot; /&gt;<br>          &lt;div class=&quot;title&quot;&gt;KR智能云图库&lt;/div&gt;<br>        &lt;/div&gt;<br>      &lt;/RouterLink&gt;<br>    &lt;/a-col&gt;<br>    &lt;a-col flex=&quot;auto&quot;&gt;<br>      &lt;a-menu v-model:selectedKeys=&quot;current&quot; mode=&quot;horizontal&quot; :items=&quot;items&quot; /&gt;<br>    &lt;/a-col&gt;<br>    &lt;a-col flex=&quot;180px&quot;&gt;<br>      &lt;a-button type=&quot;primary&quot; href=&quot;/user/login&quot;&gt;登录&lt;/a-button&gt;<br>    &lt;/a-col&gt;<br>  &lt;/a-row&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><p>效果如下</p><figure><img src="/img/pictureLibrary/image-20250710180019627.png"alt="image-20250710180019627" /><figcaption aria-hidden="true">image-20250710180019627</figcaption></figure><h4 id="路由">路由</h4><p>路由配置中一个path对应一个components，同时支持按需懒加载组件(不点击不加载)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>  <span class="hljs-attr">history</span>: <span class="hljs-title function_">createWebHistory</span>(<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">BASE_URL</span>),<br>  <span class="hljs-attr">routes</span>: [<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;home&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-title class_">HomeView</span>,<br>    &#125;,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;about&#x27;</span>,<br>      <span class="hljs-comment">// route level code-splitting</span><br>      <span class="hljs-comment">// this generates a separate chunk (About.[hash].js) for this route</span><br>      <span class="hljs-comment">// which is lazy-loaded when the route is visited.</span><br>      <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;../views/AboutView.vue&#x27;</span>),<br>    &#125;,<br>  ],<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>GlobalHeader添加路由跳转，ant designvue中<code>a-menu</code>标签是支持@click的</p><figure><img src="/img/pictureLibrary/image-20250710181156925.png"alt="image-20250710181156925" /><figcaption aria-hidden="true">image-20250710181156925</figcaption></figure><p>返回的结果是一个对象，如果看不懂，可以通过console.log打印</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doMenuClick</span> = (<span class="hljs-params">val: any</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(val)<br>&#125;<br></code></pre></td></tr></table></figure><figure><img src="/img/pictureLibrary/image-20250710181247119.png"alt="image-20250710181247119" /><figcaption aria-hidden="true">image-20250710181247119</figcaption></figure><p>我们可以通过解构的方式提取出内部key，跳转到对应位置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">doMenuClick</span> = (<span class="hljs-params">&#123;key&#125;: &#123;key: string&#125;</span>) =&gt; &#123;<br>  router.<span class="hljs-title function_">push</span>(&#123;<br>    <span class="hljs-attr">path</span>: key,<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="设置高亮">设置高亮</h4><p>高亮原理</p><p>点击菜单后，v-model绑定了current值实现高亮</p><p>刷新界面需要根据URL路径来修改current的值来实现高亮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;a-col flex=&quot;auto&quot;&gt;<br>   &lt;a-menu v-model:selectedKeys=&quot;current&quot; mode=&quot;horizontal&quot; :items=&quot;items&quot; @click=&quot;doMenuClick&quot; /&gt;<br>&lt;/a-col&gt;<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> current = ref&lt;string[]&gt;([])<br></code></pre></td></tr></table></figure><p>这里我们可以使用生命周期钩子<code>afterEach</code>监听路由变化，当界面发生刷新自动更改current的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js">router.<span class="hljs-title function_">afterEach</span>(<span class="hljs-function">(<span class="hljs-params">to,<span class="hljs-keyword">from</span>,next</span>) =&gt;</span> &#123;<br>  current.<span class="hljs-property">value</span> = [to.<span class="hljs-property">path</span>];<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="axios请求">axios请求</h4><p>为了方便我们向后端发送请求，获取数据，这里我们需要引入axios</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> axios<br></code></pre></td></tr></table></figure><p>全局自定义请求</p><p>应用场景：当我们需要对通用的响应对象统一处理，设置请求拦截器和响应拦截器，这里主要是在响应后判断是否未登录，如果未登录则判断当前请求不是获取用户登录态或者说用户不在登录界面，提示用户去登录</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><span class="hljs-keyword">import</span> &#123; message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;ant-design-vue&#x27;</span><br><br><span class="hljs-comment">// 创建 Axios 实例</span><br><span class="hljs-keyword">const</span> myAxios = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;http://localhost:8082&#x27;</span>,<br>  <span class="hljs-attr">timeout</span>: <span class="hljs-number">60000</span>,<br>  <span class="hljs-attr">withCredentials</span>: <span class="hljs-literal">true</span>,<br>&#125;)<br><br><span class="hljs-comment">// 全局请求拦截器</span><br>myAxios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">config</span>) &#123;<br>    <span class="hljs-comment">// Do something before request is sent</span><br>    <span class="hljs-keyword">return</span> config<br>  &#125;,<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>    <span class="hljs-comment">// Do something with request error</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error)<br>  &#125;,<br>)<br><br><span class="hljs-comment">// 全局响应拦截器</span><br>myAxios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">response</span>) &#123;<br>    <span class="hljs-keyword">const</span> &#123; data &#125; = response<br>    <span class="hljs-comment">// 未登录</span><br>    <span class="hljs-keyword">if</span> (data.<span class="hljs-property">code</span> === <span class="hljs-number">40100</span>) &#123;<br>      <span class="hljs-comment">// 不是获取用户信息的请求，并且用户目前不是已经在用户登录页面，则跳转到登录页面</span><br>      <span class="hljs-keyword">if</span> (<br>        !response.<span class="hljs-property">request</span>.<span class="hljs-property">responseURL</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;user/get/login&#x27;</span>) &amp;&amp;<br>        !<span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">pathname</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-string">&#x27;/user/login&#x27;</span>)<br>      ) &#123;<br>        message.<span class="hljs-title function_">warning</span>(<span class="hljs-string">&#x27;请先登录&#x27;</span>)<br>        <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> = <span class="hljs-string">`/user/login?redirect=<span class="hljs-subst">$&#123;<span class="hljs-variable language_">window</span>.location.href&#125;</span>`</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> response<br>  &#125;,<br>  <span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) &#123;<br>    <span class="hljs-comment">// Any status codes that falls outside the range of 2xx cause this function to trigger</span><br>    <span class="hljs-comment">// Do something with response error</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(error)<br>  &#125;,<br>)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> myAxios<br><br></code></pre></td></tr></table></figure><h4 id="openapi自动生成请求代码">openapi自动生成请求代码</h4><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i --save-dev @umijs/openapi<br></code></pre></td></tr></table></figure><p>根目录创建openapi.config.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; generateService &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@umijs/openapi&#x27;</span><br><br><span class="hljs-title function_">generateService</span>(&#123;<br>  <span class="hljs-attr">requestLibPath</span>: <span class="hljs-string">&quot;import request from &#x27;@/request&#x27;&quot;</span>,<br>  <span class="hljs-attr">schemaPath</span>: <span class="hljs-string">&#x27;http://localhost:8082/api/v2/api-docs&#x27;</span>,<br>  <span class="hljs-attr">serversPath</span>: <span class="hljs-string">&#x27;./src&#x27;</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>package.json中添加<code>"openapi": "node openapi.config.js"</code></p><p>运行<code>npm run openapi</code>创建了api文件，同时创建了后端请求代码</p><figure><img src="/img/pictureLibrary/image-20250710184506890.png"alt="image-20250710184506890" /><figcaption aria-hidden="true">image-20250710184506890</figcaption></figure><p>测试请求</p><figure><img src="/img/pictureLibrary/image-20250710185814726.png"alt="image-20250710185814726" /><figcaption aria-hidden="true">image-20250710185814726</figcaption></figure><p>如果出现跨域CORS问题，没有配置CorsConfig的情况</p><p>后端Controller方法上添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@CrossOrigin(origins = &#123;&quot;https://localhost:8081&quot;&#125;,allowCredentials = &quot;true&quot;)</span><br></code></pre></td></tr></table></figure><p>如果前端使用vite，可以在vite.config.ts中增加代理配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">server</span>: &#123;<br>    <span class="hljs-attr">proxy</span>: &#123;<br>      <span class="hljs-string">&#x27;/api&#x27;</span>: <span class="hljs-string">&#x27;http://localhost:8082&#x27;</span>,<br>    &#125;<br>  &#125;,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>同时修改request.ts，删除前缀</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 创建 Axios 实例</span><br><span class="hljs-keyword">const</span> myAxios = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>  <span class="hljs-attr">timeout</span>: <span class="hljs-number">60000</span>,<br>  <span class="hljs-attr">withCredentials</span>: <span class="hljs-literal">true</span>,<br>&#125;)<br><br></code></pre></td></tr></table></figure><p>前端这样配置相当于代理帮你发送到后端<code>http://localhost:8082</code></p><h3 id="全局状态管理">全局状态管理</h3><p><strong>什么是全局状态管理？</strong></p><blockquote><p>所有页面都共享的变量，适合作为全局状态管理的对象：用户的登录态</p></blockquote><p>全局状态管理库主要包括Vuex、Pinia，由于VuexStore状态管理需要引入<code>state</code>,<code>mutations</code>,<code>actions</code>,<code>getters</code>这些概念</p><p>这里使用Pinia，很适合上手</p><p>create-vue的时候已经选择了使用Pinia状态管理，这里无需引入</p><p><strong>定义用户状态</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useLoginUserStore = <span class="hljs-title function_">defineStore</span>(<span class="hljs-string">&quot;loginUser&quot;</span>,<span class="hljs-function">()=&gt;</span>&#123;<br>  <span class="hljs-comment">//state</span><br>  <span class="hljs-keyword">const</span> loginUser = ref&lt;any&gt;(&#123;<br>    <span class="hljs-attr">userName</span>: <span class="hljs-string">&quot;未登录&quot;</span><br>  &#125;)<br><br>  <span class="hljs-comment">//调用后端getLoginUser接口获取当前用户信息</span><br>  <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetchLoginUser</span>(<span class="hljs-params"></span>) &#123;<br><br>  &#125;<br><br><br><span class="hljs-comment">//修改用户状态</span><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">setLoginUser</span>(<span class="hljs-params">newLoginUser: any</span>) &#123;<br>    loginUser.<span class="hljs-property">value</span> = newLoginUser<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> &#123;loginUser,fetchLoginUser,setLoginUser&#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><p><strong>全局使用用户状态</strong></p><p>首次加入页面，需要获取用户信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> loginUserStore = <span class="hljs-title function_">useLoginUserStore</span>()<br>loginUserStore.<span class="hljs-title function_">fetchLoginUser</span>()<br></code></pre></td></tr></table></figure><p>想要获取内部数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">loginUserStore.<span class="hljs-property">loginUser</span>.<span class="hljs-property">userName</span><br></code></pre></td></tr></table></figure><p>修改顶部菜单栏，如果用户有ID展示其昵称，没有昵称展示无名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;div class=&quot;user-login-state&quot;&gt;<br>  &lt;div v-if=&quot;loginUserStore.loginUser.id&quot;&gt;<br>    &#123;&#123;loginUserStore.loginUser.userName ?? &#x27;无名&#x27;&#125;&#125;<br>  &lt;/div&gt;<br>  &lt;div v-else&gt;<br>    &lt;a-button type=&quot;primary&quot; href=&quot;/user/login&quot;&gt;登录&lt;/a-button&gt;<br>  &lt;/div&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><p>为了方便看到效果，我们设置延迟修改<code>loginUser</code>的值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetchLoginUser</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    loginUser.<span class="hljs-property">value</span> = &#123;<span class="hljs-attr">userName</span>: <span class="hljs-string">&quot;测试用户&quot;</span>,<span class="hljs-attr">id</span>: <span class="hljs-number">1</span>&#125;<br>  &#125;,<span class="hljs-number">3000</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>页面开发目录结构</p><p>我们主要分为管理员和用户，管理员可以管理用户</p><p>所以我们需要创建用户注册页面、用户登录页面、用户管理页面</p><figure><img src="/img/pictureLibrary/image-20250710204256240.png"alt="image-20250710204256240" /><figcaption aria-hidden="true">image-20250710204256240</figcaption></figure><p>/user/login ===&gt; UserLoginPage</p><p>/user/register ====&gt; UserRegisterPage</p><p>至此第一部分项目初始化结束！！！！</p><h2 id="用户模块">用户模块</h2><h3 id="用户模块需求分析">用户模块需求分析</h3><ul><li>用户登录</li><li>用户注册</li><li>用户注销</li><li>用户权限控制</li><li>用户管理界面(管理员)</li></ul><h3 id="用户表设计">用户表设计</h3><p>用户表名：user</p><p>用户字段：ID、userAccount、userPassword、userName、userRole、userAvatar、userProfile、editTime、createTime、updateTime、isDelete</p><p>为经常查询的键设置索引：userAccount(账号唯一)、userName</p><p>editTime和updateTime区别：editTime指的是用户编辑个人信息时更改，updateTime指的是任意字段变动更改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 用户表</span><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> <span class="hljs-keyword">user</span><br>(<br>    id           <span class="hljs-type">bigint</span> auto_increment comment <span class="hljs-string">&#x27;id&#x27;</span> <span class="hljs-keyword">primary</span> key,<br>    userAccount  <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;账号&#x27;</span>,<br>    userPassword <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;密码&#x27;</span>,<br>    userName     <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户昵称&#x27;</span>,<br>    userAvatar   <span class="hljs-type">varchar</span>(<span class="hljs-number">1024</span>)                          <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户头像&#x27;</span>,<br>    userProfile  <span class="hljs-type">varchar</span>(<span class="hljs-number">512</span>)                           <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户简介&#x27;</span>,<br>    userRole     <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;user&#x27;</span>            <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;用户角色：user/admin&#x27;</span>,<br>    editTime     datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;编辑时间&#x27;</span>,<br>    createTime   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>    updateTime   datetime     <span class="hljs-keyword">default</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> comment <span class="hljs-string">&#x27;更新时间&#x27;</span>,<br>    isDelete     tinyint      <span class="hljs-keyword">default</span> <span class="hljs-number">0</span>                 <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;是否删除&#x27;</span>,<br>    <span class="hljs-keyword">UNIQUE</span> KEY uk_userAccount (userAccount),<br>    INDEX idx_userName (userName)<br>) comment <span class="hljs-string">&#x27;用户&#x27;</span> <span class="hljs-keyword">collate</span> <span class="hljs-operator">=</span> utf8mb4_unicode_ci;<br><br></code></pre></td></tr></table></figure><h3 id="用户登录流程一定要搞明白">用户登录流程(一定要搞明白)</h3><p>1）初始对话：前端与服务器创建连接后，服务器给客户端一个Session，同时保存。SessionID会作为唯一标识，返回给前端。</p><p>2）登录成功，后端服务器校验信息成功后，会将用户信息存入Session中。服务器生成一个Set-Cookie响应头指向前端SessionID</p><p>3）前端保存Cookie：前端收到后端响应后，根据浏览器Set-Session指令，将SessionID存储到浏览器Cookie同时绑定域名</p><p>4）再次向绑定域名发送请求，浏览器后续会携带之前保存的Cookie，其中包含SessionID</p><p>5）服务器收到请求，提取SessionID，获取Session</p><p>6）通过Session，获取用户信息</p><h3 id="权限控制">权限控制</h3><ul><li>无权限也可以看</li><li>登录用户才可以看</li><li>未登录可以看，登录解锁更多</li><li>只有管理员可以看</li></ul><h3 id="后端开发">后端开发</h3><p>刚刚已经创建了user表，这里使用mybatis-plusX插件，右键user表，选择mybatis-plus插件，来为我们生成mapper和service</p><figure><img src="/img/pictureLibrary/image-20250710214119233.png"alt="image-20250710214119233" /><figcaption aria-hidden="true">image-20250710214119233</figcaption></figure><p>将User拖动到model/entity下，UserMapper拖到mapper，Service移动到service包下，如果有mapper中应用到了generator的包名记得更改</p>]]></content>
    
    
    <categories>
      
      <category>项目实战</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目实战</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JVM Like HotSpot?</title>
    <link href="/2025/01/02/JVM-Like-HotSpot/"/>
    <url>/2025/01/02/JVM-Like-HotSpot/</url>
    
    <content type="html"><![CDATA[<h1 id="q1jvm-在哪里">Q1：JVM 在哪里？</h1><p>JVM(Java VirtualMachine)是位于操作系统之上的一个环境，在这个环境中，我们同时运行了一堆Java程序。</p><p>JRE包含JVM、操作系统也是安装于硬件之上。</p><p><img src="/img/JVMIMG/1.png" /></p><h1 id="q2jvm体系结构">Q2：JVM体系结构</h1><p><img src="/img/JVMIMG/2.png" /></p><p><img src="/img/JVMIMG/3.png" /></p><h1 id="什么是类加载器的双亲委派机制">什么是类加载器的双亲委派机制</h1><h3 id="类加载流程图">类加载流程图</h3><p><img src="/img/JVMIMG/4.png" /></p><h3 id="模版对象介绍">模版对象介绍</h3><p><img src="/img/JVMIMG/5.png" /></p><h3 id="双亲委派机制">双亲委派机制</h3><p>通过打印我们会发信啊当前使用的是AppClassLoader、父亲为ExtClassLoader、爷爷是NULL(java调用不到、由C实现)</p><p><img src="/img/JVMIMG/6.png" /></p><p>其实不然，为什么以下程序报错，正在我们使用类的时候，他会从AppLoader逐渐过渡到rt.jar发现rt.jar包下的java.lang底下也是有一个叫String的类，优先执行ROOT下的String，而不会执行当前AppLoader中的</p><p><img src="/img/JVMIMG/7.png" /></p><p>所以说双亲委派的流程大致为类加载器收到类加载请求，之后将请求委托给ROOT，如果当前类加载器可以加载这个类，直接结束，否则的话，逐步传递给子类，判断是否可以类加载，最后实在没有就报错</p><h1 id="沙箱安全机制">沙箱安全机制</h1><p><a href="https://www.51cto.com/article/709366.html">详见</a></p><h1 id="native关键字">native关键字</h1><p>凡是带有native关键字的，都会回到本地方法栈，调用本地方法接口(JNI)</p><p>JNI作用：扩展Java的使用，融合不同的语言为Java使用</p><h1 id="pc寄存器">PC寄存器</h1><p>也被称为程序计数器，本质上是一个指针为线程私有</p><h1 id="方法区">方法区</h1><p><img src="/img/JVMIMG/8.png" /></p><p>存储static、final、class、常量池</p><h1 id="栈的实行机制">栈的实行机制</h1><p>栈遵循先进后出的道理</p><p>所以说Main函数在栈中最后弹出，不存在垃圾回收机制</p><p>线程的生命周期和栈是同步的，线程结束，栈被释放</p><p>栈运行原理为栈帧</p><h1 id="jvm有哪些">JVM有哪些？</h1><ul><li>HotSpot</li><li>BEA JRockit</li><li>IBM J9 VM</li></ul><h1 id="堆">堆</h1><p><img src="/img/JVMIMG/9.png" /></p><p>堆区内存满了叫做OOM、堆内存不够</p><p>在JDK8以后永久区叫做元空间</p><h3 id="永久区">永久区</h3><p>存储java运行时的环境以及jdk自带的Class对象、不存在垃圾回收机制</p><ul><li>jdk1.6之前：永久化，常量池存储在永久区中</li><li>jdk1.7：去除永久代，常量池存放到堆中</li><li>jdk1.8：常量池存放到元空间中</li></ul><h3id="如果出现了oom的情况如何解决">如果出现了OOM的情况，如何解决？</h3><p>默认情况下打印内存分配情况</p><p><img src="/img/JVMIMG/10.png" /></p><p><img src="/img/JVMIMG/11.png" /></p><p>根据打印信息我们会发现新生区 + 老年区大小 = 堆区内存大小</p><p><img src="/img/JVMIMG/12.png" /></p><p>因为元空间也属于堆的范畴，但是并没有为其分配空间，所以说元空间物理上并不存在</p><p>GC垃圾回收的机制</p><p>每次向堆中存放数据都会进行轻GC，当新生区满了进行一次重GC，数据存放到老年区，如果最终老年区中的数据也满了报错显示</p><p>使用工具排除问题</p><ul><li>Debug调试代码</li><li>使用内存快照工具，MAT，Jprofiler</li></ul><p>Jprofiler作用</p><ul><li>分析Dump文件，定位内存泄漏</li><li>获取堆中的对象</li></ul><h1 id="gc">GC</h1><h3 id="引用计数法">引用计数法</h3><p>对象每使用一次，将其计数加一，最后将不怎么使用的对象筛选掉</p><p><img src="/img/JVMIMG/13.png" /></p><h3 id="复制算法">复制算法</h3><p><img src="/img/JVMIMG/14.png" /></p><p>每一次GC都会将伊甸园区的数据存放到幸存区，Eden变为空</p><p>幸存From和幸存To如何分辨：谁空谁是To，假设经过GC、Eden中的数据存放到幸存区中，则另一个幸存区由于是空被标识为To，对象流向To，From又为空，接着将From变为To，接着进行GC操作，当操作来到15次对象还没有挂掉就会进入老年区</p><p>15次是默认老年区的GC次数，我们还可以手动设置<code>-XX:MaxTenuringThreshold=15</code></p><p>好处：没有内存碎片</p><p>坏处：浪费内存空间，两个幸存区，一块永远是空的</p><p>复制算法最佳使用场景：对象存活度较低的情况 对应新生区</p><h3 id="标记清除算法">标记清除算法</h3><p>标记活着的对象、清除没有标记的对象</p><p>优点：不需要额外的空间</p><p>缺点：两次扫描、严重浪费时间，会产生内存碎片</p><h3 id="标记压缩算法">标记压缩算法</h3><p><img src="/img/JVMIMG/15.png" /></p><p>再次扫描，将存活的对象向前移动</p><h1 id="jmm是什么">JMM是什么？</h1><p>JVM(Java Memory Model)</p><p>作用：缓存一致性原则，用于定义数据读写规则</p><p>JMM定义了主内存和线程工作内存之间的关系，同时保证了主内存和线程工作内存之间的通信</p><p><img src="/img/JVMIMG/16.png" /></p><p>volilate主要用来解决线程中的数据和主存同步</p>]]></content>
    
    
    <categories>
      
      <category>JavaVM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fluid+GithubPage</title>
    <link href="/2024/10/19/Fluid+GithubPage/"/>
    <url>/2024/10/19/Fluid+GithubPage/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-fluid-theme-githubpage-搭建个人博客">Hexo + Fluid Theme +GithubPage 搭建个人博客</h2><p>前言</p><ul><li>GithubPage是静态站点托管服务，它可以读取到你上传至仓库中的html、css、javascript代码，运行并且在对应位置进行显示</li><li>Hexo是一个快速、简洁且高效的博客框架。 Hexo使用Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页，Hexo提供服务Fluid提供前端页面</li></ul><h3 id="前置条件">1. 前置条件</h3><h4 id="git的安装与配置">1.1 Git的安装与配置</h4><h5 id="安装">安装</h5><p>两种方式</p><ul><li><p>brew安装 <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">brew </span><span class="hljs-keyword">install </span>git<br></code></pre></td></tr></table></figure></p></li><li><p><a href="https://git-scm.com/">官方直达</a></p></li></ul><p>git -v查看版本</p><h6 id="配置">配置</h6><p><ahref="https://www.cnblogs.com/techflow/p/13703721.html">参考链接</a></p><p><strong>name对应Github用户名、email对应Github绑定的邮箱</strong><strong>其中[user]一定要配置好，其余的可以没有</strong> <imgsrc="/img/T1/gf.png" /></p><p><span style="color: red; font-size: 1.2em;">后期常常出现的问题:github,Empty reply from server？</span></p><p><strong>解决方案</strong></p><p>本地生成公钥，查看公钥内容 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;Github绑定邮箱&quot;</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure></p><p>将cat到的内容放入到New SSH Key中 <img src="/img/T1/ssh.png" /></p><h4 id="nodejs安装">1.2 Nodejs安装</h4><p><ahref="https://nodejs.org/en">官方直达</a>或者说可以使用brew安装</p><p>node -v查看版本</p><h4 id="github-创建仓库">1.3 Github 创建仓库</h4><p>创建一个名为用户名.github.io的仓库</p><p><em>初体验(所有的操作都在master中进行，记得修改main -&gt;master)</em></p><ol type="1"><li>我们可以创建一个html页面index.html</li><li>点击Setting，选择GithubPage</li><li>点击Visit Website，如果404，可以查看Actions，生效后访问</li></ol><h3 id="hexo简单使用与结构分析">2. Hexo简单使用与结构分析</h3><h4 id="hexo初体验">2.1 hexo初体验</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><ol type="1"><li>hexo初始化项目</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexo</span> init<span class="hljs-meta"> [可选]</span><br></code></pre></td></tr></table></figure><p>hexo init 直接在当前文件夹下创建项目内容、hexo init my-blog创建一个my-blog文件夹，同时在里面创建项目内容</p><p>项目结构</p><blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus">├── _config<span class="hljs-selector-class">.fluid</span><span class="hljs-selector-class">.yml</span><br>├── _config<span class="hljs-selector-class">.landscape</span><span class="hljs-selector-class">.yml</span><br>├── _config<span class="hljs-selector-class">.yml</span><br>├── db<span class="hljs-selector-class">.json</span><br>├── node_modules<br>├── package-lock<span class="hljs-selector-class">.json</span><br>├── package<span class="hljs-selector-class">.json</span><br>├── public<br>├── scaffolds<br>├── <span class="hljs-selector-tag">source</span><br>├── themes<br>└── yarn.lock<br></code></pre></td></tr></table></figure></blockquote><p>启动项目 <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></p><p>接着去浏览器里访问localhost:4000，会看到初始化好的界面</p><p>配置完整后hexo的操作为 <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scss">hexo clean<br><br>hexo <span class="hljs-selector-tag">g</span><br><br>hexo s<span class="hljs-selector-attr">[预览、可选]</span><br><br>hexo <span class="hljs-built_in">d</span>(下面介绍)<br></code></pre></td></tr></table></figure></p><h4 id="hexo-theme引入">2.2 Hexo-Theme引入</h4><p><a href="https://hexo.io/themes/">Themes</a></p><p>本篇文章只介绍Fluid主题的相关配置</p><h5 id="在博客目录下创建_config.fluid.yml">2.2.1在博客目录下创建_config.fluid.yml</h5><p>默认情况下_config.yml是博客的配置入口，fluid主题将_config.fluid.yml优先级设置的比较高，可能是考虑到不小心把_config.yml改乱了，所以接下来我们只需要设置_config.fluid.yml就可以了</p><ul><li>_config.fluid.yml配置</li></ul><p>基本配置 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">title:</span> 标签页内容<br><span class="hljs-symbol">theme:</span> fluid<br><span class="hljs-symbol">author:</span> 设置成自己名(可选)<br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN<br></code></pre></td></tr></table></figure></p><p>添加deploy便于后期上传 <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> git@github.com:KoRinALL/KoRinALL.github.io.git (这里我建议使用ssh)<br><span class="hljs-symbol">    branch:</span> master<br></code></pre></td></tr></table></figure></p><p>部署好后，我们可以使用<code>hexo d</code>进行上传文件到仓库中</p><ul><li>博客目录下主要文件介绍</li></ul><p>public: 主要前端文件 html、css、javascript source: - _posts管理md文章的文件 - about 需要自己创建，对应about界面 - img需要自己创建，图片路径优先级比themes下_config.yml 优先级高</p><p>node_modules - hexo-themes-fluid - <em>config.yml 主题配置文件 </em>img和刚才创建的img对应</p><h3 id="插件引入">3. 插件引入</h3><p>-&gt; hexo-themes-fluid/_config.yml</p><blockquote><p>图片更换，文本的更改以及一些很基础的操作这里就不介绍了，我相信各位大佬能自行解决同时学到些新知识～</p></blockquote><p>评论插件包括utterances | disqus | gitalk | valine | waline | changyan| livere | remark42 | twikoo | cusdis | giscus |discuss，我使用的主要是gitalk</p><h4 id="gitalk-comment-不推荐请看3.4-配置waline评论">3.1 Gitalk Comment(不推荐，请看3.4 配置Waline评论)</h4><p><img src="/img/T1/GK.png" /></p><ol type="1"><li><p>来到Github/Setting/Developer Setting/OAuth Apps/New OAuthApps</p></li><li><p>Homepage URL 和Authorization callback URL填写自己仓库地址(一定要是https协议) ex:https://korinall.github.io/，里面会提供Client ID和Client secrets</p></li></ol><p>3.其他设置 <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">repo:</span>仓库名<br>owner、admin: 用户名<br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN<br>其余默认<br></code></pre></td></tr></table></figure></p><p>Tip： 效果只有在部署后，初始化给予权限后才可以使用</p><h4 id="latex">3.2 Latex</h4><ol type="1"><li>更改主题配置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">math:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">specific:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">engine:</span> <span class="hljs-string">mathjax</span><br></code></pre></td></tr></table></figure><ol start="2" type="1"><li>更换渲染器渲染器只允许同时存在一个，所以我们需要删除默认的，下载支持Latex的<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm uninstall hexo-renderer-marked <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure></li></ol><p>mathjax: <code>npm install hexo-renderer-kramed --save</code></p><p>katex:<code>npm install @upupming/hexo-renderer-markdown-it-plus --save</code></p><p>下载好后，我们只需要在对应的md文章FrontMatter部分添加<code>math: true</code></p><p>Front Matter指的是如下部分 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">ssssss</span><br><span class="hljs-attr">math:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure></p><h4 id="添加看板娘">3.3 添加看板娘</h4><ol type="1"><li><p>git clone<ahref="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a>到主题的<font color="red">source</font>目录下</p></li><li><p>在主题的<font color="red">layout</font>目录下找到<strong>head.js</strong>添加如下代码<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></p></li><li><p>修改autoload.js文件 <figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf">// const live2d_path <span class="hljs-operator">=</span> <span class="hljs-string">&quot;https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;</span><span class="hljs-comment">;</span><br>const live2d_path <span class="hljs-operator">=</span> <span class="hljs-string">&quot;/live2d-widget/&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></p></li><li><p>更改autoload.js下的CDN地址 默认CND地址不可以进行换装，这里使用<ahref="https://akilar.top/posts/5b8f515f/">Akilarの糖果屋</a>的CDN，模型多放心使用<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">cdnPath:</span> <span class="hljs-string">&quot;https://npm.elemecdn.com/akilar-live2dapi@latest/&quot;</span><br></code></pre></td></tr></table></figure></p></li><li><p>为了防止看板娘被挡住，我们可以将其图层设置为999，具体操作更改<font color="blue">live2d-widget</font>下的<font color="blue">waifu.css</font><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-meta">#waifu &#123;</span><br>    z-<span class="hljs-keyword">index</span>: <span class="hljs-number">999</span>;<br>&#125;<br></code></pre></td></tr></table></figure></p></li><li><p>调整看板娘位于右下角，修改配置如下</p></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-id">#waifu</span> &#123;<br><span class="hljs-attribute">bottom</span>: -<span class="hljs-number">1000px</span>;<br><span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">line-height</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">margin-bottom</span>: -<span class="hljs-number">10px</span>;<br><span class="hljs-attribute">position</span>: fixed;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateY</span>(<span class="hljs-number">3px</span>);<br><span class="hljs-attribute">transition</span>: transform .<span class="hljs-number">3s</span> ease-in-out, bottom <span class="hljs-number">3s</span> ease-in-out;<br><span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br>&#125;<br><br><br><span class="hljs-selector-id">#waifu-tool</span> &#123;<br><span class="hljs-attribute">color</span>: <span class="hljs-number">#aaa</span>;<br><span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br><span class="hljs-attribute">position</span>: absolute;<br><span class="hljs-attribute">left</span>: <span class="hljs-number">0px</span>;<br><span class="hljs-attribute">top</span>: <span class="hljs-number">70px</span>;<br><span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">1s</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="waline-comment">3.4 Waline Comment</h4><blockquote><p>Gitalk博客每一次都需要管理员初始化感觉挺CS，这里推荐换成Waline</p></blockquote><p>需要用到的网站</p><p>LeanCloud(推荐使用国际版本)：<ahref="https://console.leancloud.app/apps">https://console.leancloud.app/apps</a></p><p><font>如果使用国内版本，需要在LeanCloud上绑定已经备案等域名，Vercel中也需要多添加一步环境变量，具体参考<ahref="https://www.zywvvd.com/notes/hexo/theme/fluid/fluid-waline/fluid-waline/">Here!</a></font></p><p>Vercel：<a href="https://vercel.com/">https://vercel.com/</a></p><p><font size=5>LeanCloud</font></p><ol type="1"><li>创建应用实例</li></ol><figure><img src="/img/T1/ca.png" alt="alt text" /><figcaption aria-hidden="true">alt text</figcaption></figure><ol start="2" type="1"><li><p>来到Setting中完成邮箱验证</p></li><li><p>选择Setting-&gt;App Keys</p></li></ol><p>待会要用AppID、AppKey、MasterKey</p><p><font size=5>Vercel</font></p><ol type="1"><li><p>注册账号(推荐使用github登录)</p></li><li><p><ahref="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample&amp;teamSlug=korinalls-projects">点这里</a></p></li><li><p>解锁、添加仓库名</p></li></ol><figure><img src="/img/T1/newpro.png" alt="alt text" /><figcaption aria-hidden="true">alt text</figcaption></figure><ol start="4" type="1"><li>点击Continue to Dashboard -&gt; Environment Variables</li></ol><p>配置三个环境变量LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY 。</p><p>它们的值分别对应之前在 LeanCloud 中获得的 APP ID, APP KEY, MasterKey，然后Save。</p><ol start="5" type="1"><li><p>点击顶部栏点Deployments中的Redeploy <imgsrc="/img/T1/redeploy.png" alt="alt text" /></p></li><li><p>回到顶部栏Project -&gt; Visit -&gt; Login</p></li></ol><figure><img src="/img/T1/register.png" alt="alt text" /><figcaption aria-hidden="true">alt text</figcaption></figure><ol start="7" type="1"><li>这个页面中第一个注册的人默认就是管理员，后期可以使用管理员进行发送消息</li></ol><p><font size=5>主题配置文件(_config.yml)</font></p><p>在原有的基础上只需要将Visit访问的网址填入就可以使用了</p><figure><img src="/img/T1/vs.png" alt="alt text" /><figcaption aria-hidden="true">alt text</figcaption></figure><p>至此，博客已经搭建完毕，其余的内容自行探索，学习永无止境^_^ echoBye！</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac技巧-1-应用位置查询</title>
    <link href="/2024/10/19/Mac%E6%8A%80%E5%B7%A7-1-%E5%BA%94%E7%94%A8%E4%BD%8D%E7%BD%AE%E6%9F%A5%E8%AF%A2/"/>
    <url>/2024/10/19/Mac%E6%8A%80%E5%B7%A7-1-%E5%BA%94%E7%94%A8%E4%BD%8D%E7%BD%AE%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<div class="note note-info">            <p>最后更新于：2024/10/24 PM</p>          </div><p>最近想要删除一个软件，这个软件在控制台中是存在的，通过Command +Space是可以打开的</p><p>但是忘记当时放在访达中什么位置，迫不得已上网查找，可能自己问题描述的有点抽象，没找到。。</p><p>最后去搜索了Spotlight Search的用法，其中介绍了一种查找路径的方法</p><p><font>长按command接着放置到查找的文件上</font>如图所示</p><figure><img src="/img/mac_tip/1.png" alt="alt text" /><figcaption aria-hidden="true">alt text</figcaption></figure><p>成功 ！！！ <img src="/img/mac_tip/2.png" alt="alt text" /></p><iframe src="/calculator/" style="width:100%; height:600px; border:none;"></iframe>]]></content>
    
    
    <categories>
      
      <category>Mac</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MAC技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
